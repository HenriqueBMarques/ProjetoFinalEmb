

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 14:51:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 12/02/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F4520 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	mediumconst
    98  007EDE                     __pmediumconst:
    99                           	callstack 0
   100  007EDE  00                 	db	0
   101  007EDF                     _valor:
   102                           	callstack 0
   103  007EDF  3F                 	db	63
   104  007EE0  06                 	db	6
   105  007EE1  5B                 	db	91
   106  007EE2  4F                 	db	79
   107  007EE3  66                 	db	102
   108  007EE4  6D                 	db	109
   109  007EE5  7D                 	db	125
   110  007EE6  07                 	db	7
   111  007EE7  7F                 	db	127
   112  007EE8  6F                 	db	111
   113  007EE9  77                 	db	119
   114  007EEA  7C                 	db	124
   115  007EEB  39                 	db	57
   116  007EEC  5E                 	db	94
   117  007EED  79                 	db	121
   118  007EEE  71                 	db	113
   119  007EEF                     __end_of_valor:
   120                           	callstack 0
   121  007EEF                     _charKey:
   122                           	callstack 0
   123  007EEF  55                 	db	85
   124  007EF0  4C                 	db	76
   125  007EF1  44                 	db	68
   126  007EF2  52                 	db	82
   127  007EF3  53                 	db	83
   128  007EF4  58                 	db	88
   129  007EF5  41                 	db	65
   130  007EF6  42                 	db	66
   131  007EF7  59                 	db	89
   132  007EF8  73                 	db	115
   133  007EF9                     __end_of_charKey:
   134                           	callstack 0
   135  0000                     _T0CON	set	4053
   136  0000                     _TMR0L	set	4054
   137  0000                     _TMR0H	set	4055
   138  0000                     _INTCON	set	4082
   139  0000                     _SPBRG	set	4015
   140  0000                     _SPBRGH	set	4016
   141  0000                     _BAUDCON	set	4024
   142  0000                     _TXSTA	set	4012
   143  0000                     _RCREG	set	4014
   144  0000                     _RCSTA	set	4011
   145  0000                     _TXREG	set	4013
   146  0000                     _PIR1	set	3998
   147  0000                     _T2CON	set	4042
   148  0000                     _CCP2CON	set	4026
   149  0000                     _CCPR2L	set	4027
   150  0000                     _PR2	set	4043
   151  0000                     _TRISE	set	3990
   152  0000                     _TRISD	set	3989
   153  0000                     _TRISC	set	3988
   154  0000                     _TRISB	set	3987
   155  0000                     _TRISA	set	3986
   156  0000                     _PORTE	set	3972
   157  0000                     _PORTD	set	3971
   158  0000                     _PORTC	set	3970
   159  0000                     _PORTB	set	3969
   160  0000                     _PORTA	set	3968
   161  0000                     _ADRESL	set	4035
   162  0000                     _ADRESH	set	4036
   163  0000                     _ADCON2	set	4032
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON0	set	4034
   166  007EF9                     STR_20:
   167  007EF9  45                 	db	69	;'E'
   168  007EFA  6E                 	db	110	;'n'
   169  007EFB  63                 	db	99	;'c'
   170  007EFC  68                 	db	104	;'h'
   171  007EFD  65                 	db	101	;'e'
   172  007EFE  6E                 	db	110	;'n'
   173  007EFF  64                 	db	100	;'d'
   174  007F00  6F                 	db	111	;'o'
   175  007F01  20                 	db	32
   176  007F02  6F                 	db	111	;'o'
   177  007F03  20                 	db	32
   178  007F04  43                 	db	67	;'C'
   179  007F05  6F                 	db	111	;'o'
   180  007F06  63                 	db	99	;'c'
   181  007F07  68                 	db	104	;'h'
   182  007F08  6F                 	db	111	;'o'
   183  007F09  00                 	db	0
   184  007F0A                     STR_22:
   185  007F0A  43                 	db	67	;'C'
   186  007F0B  6F                 	db	111	;'o'
   187  007F0C  63                 	db	99	;'c'
   188  007F0D  68                 	db	104	;'h'
   189  007F0E  6F                 	db	111	;'o'
   190  007F0F  20                 	db	32
   191  007F10  43                 	db	67	;'C'
   192  007F11  68                 	db	104	;'h'
   193  007F12  65                 	db	101	;'e'
   194  007F13  69                 	db	105	;'i'
   195  007F14  6F                 	db	111	;'o'
   196  007F15  21                 	db	33
   197  007F16  00                 	db	0
   198  007F17                     STR_2:
   199  007F17  43                 	db	67	;'C'
   200  007F18  41                 	db	65	;'A'
   201  007F19  56                 	db	86	;'V'
   202  007F1A  41                 	db	65	;'A'
   203  007F1B  4C                 	db	76	;'L'
   204  007F1C  4F                 	db	79	;'O'
   205  007F1D  53                 	db	83	;'S'
   206  007F1E  20                 	db	32
   207  007F1F  20                 	db	32
   208  007F20  20                 	db	32
   209  007F21  00                 	db	0
   210  007F22                     STR_11:
   211  007F22  47                 	db	71	;'G'
   212  007F23  41                 	db	65	;'A'
   213  007F24  4C                 	db	76	;'L'
   214  007F25  49                 	db	73	;'I'
   215  007F26  4E                 	db	78	;'N'
   216  007F27  48                 	db	72	;'H'
   217  007F28  41                 	db	65	;'A'
   218  007F29  53                 	db	83	;'S'
   219  007F2A  20                 	db	32
   220  007F2B  20                 	db	32
   221  007F2C  00                 	db	0
   222  007F2D                     STR_14:
   223  007F2D  4F                 	db	79	;'O'
   224  007F2E  56                 	db	86	;'V'
   225  007F2F  45                 	db	69	;'E'
   226  007F30  4C                 	db	76	;'L'
   227  007F31  48                 	db	72	;'H'
   228  007F32  41                 	db	65	;'A'
   229  007F33  53                 	db	83	;'S'
   230  007F34  20                 	db	32
   231  007F35  20                 	db	32
   232  007F36  00                 	db	0
   233  007F37                     STR_38:
   234  007F37  54                 	db	84	;'T'
   235  007F38  65                 	db	101	;'e'
   236  007F39  63                 	db	99	;'c'
   237  007F3A  68                 	db	104	;'h'
   238  007F3B  46                 	db	70	;'F'
   239  007F3C  61                 	db	97	;'a'
   240  007F3D  72                 	db	114	;'r'
   241  007F3E  6D                 	db	109	;'m'
   242  007F3F  20                 	db	32
   243  007F40  00                 	db	0
   244  007F41                     STR_9:
   245  007F41  20                 	db	32
   246  007F42  20                 	db	32
   247  007F43  4C                 	db	76	;'L'
   248  007F44  3A                 	db	58	;':'
   249  007F45  31                 	db	49	;'1'
   250  007F46  31                 	db	49	;'1'
   251  007F47  30                 	db	48	;'0'
   252  007F48  4B                 	db	75	;'K'
   253  007F49  67                 	db	103	;'g'
   254  007F4A  00                 	db	0
   255  007F4B                     STR_18:
   256  007F4B  20                 	db	32
   257  007F4C  20                 	db	32
   258  007F4D  4C                 	db	76	;'L'
   259  007F4E  3A                 	db	58	;':'
   260  007F4F  31                 	db	49	;'1'
   261  007F50  32                 	db	50	;'2'
   262  007F51  30                 	db	48	;'0'
   263  007F52  4B                 	db	75	;'K'
   264  007F53  67                 	db	103	;'g'
   265  007F54  00                 	db	0
   266  007F55                     STR_12:
   267  007F55  20                 	db	32
   268  007F56  20                 	db	32
   269  007F57  4C                 	db	76	;'L'
   270  007F58  3A                 	db	58	;':'
   271  007F59  20                 	db	32
   272  007F5A  33                 	db	51	;'3'
   273  007F5B  30                 	db	48	;'0'
   274  007F5C  4B                 	db	75	;'K'
   275  007F5D  67                 	db	103	;'g'
   276  007F5E  00                 	db	0
   277  007F5F                     STR_15:
   278  007F5F  20                 	db	32
   279  007F60  20                 	db	32
   280  007F61  4C                 	db	76	;'L'
   281  007F62  3A                 	db	58	;':'
   282  007F63  20                 	db	32
   283  007F64  35                 	db	53	;'5'
   284  007F65  30                 	db	48	;'0'
   285  007F66  4B                 	db	75	;'K'
   286  007F67  67                 	db	103	;'g'
   287  007F68  00                 	db	0
   288  007F69                     STR_6:
   289  007F69  20                 	db	32
   290  007F6A  20                 	db	32
   291  007F6B  4C                 	db	76	;'L'
   292  007F6C  3A                 	db	58	;':'
   293  007F6D  31                 	db	49	;'1'
   294  007F6E  35                 	db	53	;'5'
   295  007F6F  30                 	db	48	;'0'
   296  007F70  4B                 	db	75	;'K'
   297  007F71  67                 	db	103	;'g'
   298  007F72  00                 	db	0
   299  007F73                     STR_3:
   300  007F73  20                 	db	32
   301  007F74  20                 	db	32
   302  007F75  4C                 	db	76	;'L'
   303  007F76  3A                 	db	58	;':'
   304  007F77  31                 	db	49	;'1'
   305  007F78  39                 	db	57	;'9'
   306  007F79  30                 	db	48	;'0'
   307  007F7A  4B                 	db	75	;'K'
   308  007F7B  67                 	db	103	;'g'
   309  007F7C  00                 	db	0
   310  007F7D                     STR_5:
   311  007F7D  56                 	db	86	;'V'
   312  007F7E  41                 	db	65	;'A'
   313  007F7F  43                 	db	67	;'C'
   314  007F80  41                 	db	65	;'A'
   315  007F81  53                 	db	83	;'S'
   316  007F82  20                 	db	32
   317  007F83  20                 	db	32
   318  007F84  20                 	db	32
   319  007F85  00                 	db	0
   320  007F86                     STR_8:
   321  007F86  50                 	db	80	;'P'
   322  007F87  4F                 	db	79	;'O'
   323  007F88  52                 	db	82	;'R'
   324  007F89  43                 	db	67	;'C'
   325  007F8A  4F                 	db	79	;'O'
   326  007F8B  53                 	db	83	;'S'
   327  007F8C  20                 	db	32
   328  007F8D  20                 	db	32
   329  007F8E  00                 	db	0
   330  007F8F                     STR_17:
   331  007F8F  54                 	db	84	;'T'
   332  007F90  4F                 	db	79	;'O'
   333  007F91  55                 	db	85	;'U'
   334  007F92  52                 	db	82	;'R'
   335  007F93  4F                 	db	79	;'O'
   336  007F94  53                 	db	83	;'S'
   337  007F95  20                 	db	32
   338  007F96  20                 	db	32
   339  007F97  00                 	db	0
   340  007F98                     STR_16:
   341  007F98  51                 	db	81	;'Q'
   342  007F99  74                 	db	116	;'t'
   343  007F9A  64                 	db	100	;'d'
   344  007F9B  3A                 	db	58	;':'
   345  007F9C  20                 	db	32
   346  007F9D  31                 	db	49	;'1'
   347  007F9E  30                 	db	48	;'0'
   348  007F9F  20                 	db	32
   349  007FA0  00                 	db	0
   350  007FA1                     STR_28:
   351  007FA1  51                 	db	81	;'Q'
   352  007FA2  74                 	db	116	;'t'
   353  007FA3  64                 	db	100	;'d'
   354  007FA4  3A                 	db	58	;':'
   355  007FA5  20                 	db	32
   356  007FA6  34                 	db	52	;'4'
   357  007FA7  30                 	db	48	;'0'
   358  007FA8  20                 	db	32
   359  007FA9  00                 	db	0
   360  007FAA                     STR_13:
   361  007FAA  51                 	db	81	;'Q'
   362  007FAB  74                 	db	116	;'t'
   363  007FAC  64                 	db	100	;'d'
   364  007FAD  3A                 	db	58	;':'
   365  007FAE  20                 	db	32
   366  007FAF  39                 	db	57	;'9'
   367  007FB0  30                 	db	48	;'0'
   368  007FB1  20                 	db	32
   369  007FB2  00                 	db	0
   370  007FB3                     STR_29:
   371  007FB3  47                 	db	71	;'G'
   372  007FB4  41                 	db	65	;'A'
   373  007FB5  4C                 	db	76	;'L'
   374  007FB6  49                 	db	73	;'I'
   375  007FB7  4E                 	db	78	;'N'
   376  007FB8  48                 	db	72	;'H'
   377  007FB9  41                 	db	65	;'A'
   378  007FBA  53                 	db	83	;'S'
   379  007FBB  00                 	db	0
   380  007FBC                     STR_19:
   381  007FBC  51                 	db	81	;'Q'
   382  007FBD  74                 	db	116	;'t'
   383  007FBE  64                 	db	100	;'d'
   384  007FBF  3A                 	db	58	;':'
   385  007FC0  20                 	db	32
   386  007FC1  38                 	db	56	;'8'
   387  007FC2  20                 	db	32
   388  007FC3  00                 	db	0
   389  007FC4                     STR_10:
   390  007FC4  51                 	db	81	;'Q'
   391  007FC5  74                 	db	116	;'t'
   392  007FC6  64                 	db	100	;'d'
   393  007FC7  3A                 	db	58	;':'
   394  007FC8  20                 	db	32
   395  007FC9  34                 	db	52	;'4'
   396  007FCA  30                 	db	48	;'0'
   397  007FCB  00                 	db	0
   398  007FCC                     STR_7:
   399  007FCC  51                 	db	81	;'Q'
   400  007FCD  74                 	db	116	;'t'
   401  007FCE  64                 	db	100	;'d'
   402  007FCF  3A                 	db	58	;':'
   403  007FD0  20                 	db	32
   404  007FD1  31                 	db	49	;'1'
   405  007FD2  35                 	db	53	;'5'
   406  007FD3  00                 	db	0
   407  007FD4                     STR_4:
   408  007FD4  51                 	db	81	;'Q'
   409  007FD5  74                 	db	116	;'t'
   410  007FD6  64                 	db	100	;'d'
   411  007FD7  3A                 	db	58	;':'
   412  007FD8  20                 	db	32
   413  007FD9  32                 	db	50	;'2'
   414  007FDA  35                 	db	53	;'5'
   415  007FDB  00                 	db	0
   416  007FDC                     STR_23:
   417  007FDC  43                 	db	67	;'C'
   418  007FDD  41                 	db	65	;'A'
   419  007FDE  56                 	db	86	;'V'
   420  007FDF  41                 	db	65	;'A'
   421  007FE0  4C                 	db	76	;'L'
   422  007FE1  4F                 	db	79	;'O'
   423  007FE2  53                 	db	83	;'S'
   424  007FE3  00                 	db	0
   425  007FE4                     STR_21:
   426  007FE4  41                 	db	65	;'A'
   427  007FE5  67                 	db	103	;'g'
   428  007FE6  75                 	db	117	;'u'
   429  007FE7  61                 	db	97	;'a'
   430  007FE8  72                 	db	114	;'r'
   431  007FE9  64                 	db	100	;'d'
   432  007FEA  65                 	db	101	;'e'
   433  007FEB  00                 	db	0
   434  007FEC                     STR_27:
   435  007FEC  50                 	db	80	;'P'
   436  007FED  4F                 	db	79	;'O'
   437  007FEE  52                 	db	82	;'R'
   438  007FEF  43                 	db	67	;'C'
   439  007FF0  4F                 	db	79	;'O'
   440  007FF1  53                 	db	83	;'S'
   441  007FF2  00                 	db	0
   442  007FF3                     STR_1:
   443  007FF3  20                 	db	32
   444  007FF4  20                 	db	32
   445  007FF5  4B                 	db	75	;'K'
   446  007FF6  67                 	db	103	;'g'
   447  007FF7  3A                 	db	58	;':'
   448  007FF8  00                 	db	0
   449  007FF9                     STR_25:
   450  007FF9  56                 	db	86	;'V'
   451  007FFA  41                 	db	65	;'A'
   452  007FFB  43                 	db	67	;'C'
   453  007FFC  41                 	db	65	;'A'
   454  007FFD  53                 	db	83	;'S'
   455  007FFE  00                 	db	0
   456  007FFF  00                 	db	0	; dummy byte at the end
   457  0000                     
   458                           ; #config settings
   459                           
   460                           	psect	cinit
   461  00591E                     __pcinit:
   462                           	callstack 0
   463  00591E                     start_initialization:
   464                           	callstack 0
   465  00591E                     __initialization:
   466                           	callstack 0
   467                           
   468                           ; Clear objects allocated to COMRAM (28 bytes)
   469  00591E  EE00  F036         	lfsr	0,__pbssCOMRAM
   470  005922  0E1C               	movlw	28
   471  005924                     clear_0:
   472  005924  6AEE               	clrf	postinc0,c
   473  005926  06E8               	decf	wreg,f,c
   474  005928  E1FD               	bnz	clear_0
   475  00592A                     end_of_initialization:
   476                           	callstack 0
   477  00592A                     __end_of__initialization:
   478                           	callstack 0
   479  00592A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   480  00592C  6EF8               	movwf	tblptru,c
   481  00592E  0100               	movlb	0
   482  005930  EF27  F031         	goto	_main	;jump to C main() function
   483                           
   484                           	psect	bssCOMRAM
   485  000036                     __pbssCOMRAM:
   486                           	callstack 0
   487  000036                     _qtd:
   488                           	callstack 0
   489  000036                     	ds	4
   490  00003A                     _comidaMax:
   491                           	callstack 0
   492  00003A                     	ds	4
   493  00003E                     _tempoParaEncher:
   494                           	callstack 0
   495  00003E                     	ds	2
   496  000040                     kpDebounce@oldRead:
   497                           	callstack 0
   498  000040                     	ds	2
   499  000042                     kpDebounce@newRead:
   500                           	callstack 0
   501  000042                     	ds	2
   502  000044                     _keys:
   503                           	callstack 0
   504  000044                     	ds	2
   505  000046                     _auxSerial:
   506                           	callstack 0
   507  000046                     	ds	1
   508  000047                     _v3:
   509                           	callstack 0
   510  000047                     	ds	1
   511  000048                     _v2:
   512                           	callstack 0
   513  000048                     	ds	1
   514  000049                     _v1:
   515                           	callstack 0
   516  000049                     	ds	1
   517  00004A                     _v0:
   518                           	callstack 0
   519  00004A                     	ds	1
   520  00004B                     _display:
   521                           	callstack 0
   522  00004B                     	ds	1
   523  00004C                     kpDebounce@tempo:
   524                           	callstack 0
   525  00004C                     	ds	1
   526  00004D                     _started:
   527                           	callstack 0
   528  00004D                     	ds	1
   529  00004E                     _potenc:
   530                           	callstack 0
   531  00004E                     	ds	4
   532                           
   533                           	psect	cstackCOMRAM
   534  000001                     __pcstackCOMRAM:
   535                           	callstack 0
   536  000001                     ??_kpReadKey:
   537  000001                     ?_digitalRead:
   538                           	callstack 0
   539  000001                     ?_adcRead:
   540                           	callstack 0
   541  000001                     ?_kpRead:
   542                           	callstack 0
   543  000001                     ?___fladd:
   544                           	callstack 0
   545  000001                     ?___lmul:
   546                           	callstack 0
   547  000001                     serialSend@c:
   548                           	callstack 0
   549  000001                     serialRead@resp:
   550                           	callstack 0
   551  000001                     adcRead@channel:
   552                           	callstack 0
   553  000001                     digitalWrite@pin:
   554                           	callstack 0
   555  000001                     digitalRead@pin:
   556                           	callstack 0
   557  000001                     pinMode@pin:
   558                           	callstack 0
   559  000001                     delayMicro@a:
   560                           	callstack 0
   561  000001                     delayMili@a:
   562                           	callstack 0
   563  000001                     timerReset@tempo:
   564                           	callstack 0
   565  000001                     ___lmul@multiplier:
   566                           	callstack 0
   567  000001                     ___flge@ff1:
   568                           	callstack 0
   569  000001                     ___fladd@b:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x0
   573  000001                     	ds	2
   574  000003                     ??_digitalRead:
   575  000003                     ??_delayMili:
   576  000003                     adcRead@ADvalor:
   577                           	callstack 0
   578  000003                     digitalWrite@value:
   579                           	callstack 0
   580  000003                     pinMode@type:
   581                           	callstack 0
   582  000003                     timerReset@ciclos:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x2
   586  000003                     	ds	1
   587  000004                     kpReadKey@i:
   588                           	callstack 0
   589  000004                     delayMili@i:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x3
   593  000004                     	ds	1
   594  000005                     ??_pinMode:
   595  000005                     ??_digitalWrite:
   596  000005                     ___lmul@multiplicand:
   597                           	callstack 0
   598  000005                     ___flge@ff2:
   599                           	callstack 0
   600  000005                     ___fladd@a:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x4
   604  000005                     	ds	2
   605  000007                     turnOn@led:
   606                           	callstack 0
   607  000007                     turnOff@led:
   608                           	callstack 0
   609  000007                     soWrite@value:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613  000007                     	ds	2
   614  000009                     ??___fladd:
   615  000009                     ??___flge:
   616  000009                     soWrite@i:
   617                           	callstack 0
   618  000009                     ___lmul@product:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x8
   622  000009                     	ds	1
   623  00000A                     ??_kpDebounce:
   624  00000A                     ??_ssdUpdate:
   625  00000A                     pushNibble@rs:
   626                           	callstack 0
   627  00000A                     pushByte@rs:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x9
   631  00000A                     	ds	2
   632  00000C                     ??_pushByte:
   633  00000C                     pushNibble@value:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0xB
   637  00000C                     	ds	1
   638  00000D                     ?___lldiv:
   639                           	callstack 0
   640  00000D                     pushByte@value:
   641                           	callstack 0
   642  00000D                     ___fladd@signs:
   643                           	callstack 0
   644  00000D                     kpDebounce@i:
   645                           	callstack 0
   646  00000D                     ___lldiv@dividend:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0xC
   650  00000D                     	ds	1
   651  00000E                     lcdCommand@value:
   652                           	callstack 0
   653  00000E                     lcdChar@value:
   654                           	callstack 0
   655  00000E                     ___fladd@aexp:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0xD
   659  00000E                     	ds	1
   660  00000F                     ___fladd@bexp:
   661                           	callstack 0
   662  00000F                     lcdPosition@line:
   663                           	callstack 0
   664  00000F                     lcdString@msg:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0xE
   668  00000F                     	ds	1
   669  000010                     ___fladd@grs:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0xF
   673  000010                     	ds	1
   674  000011                     ??_lcdString:
   675  000011                     lcdPosition@col:
   676                           	callstack 0
   677  000011                     ___lldiv@divisor:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x10
   681  000011                     	ds	2
   682  000013                     lcdString@i:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x12
   686  000013                     	ds	2
   687  000015                     ___lldiv@quotient:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x14
   691  000015                     	ds	4
   692  000019                     ___lldiv@counter:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x18
   696  000019                     	ds	1
   697  00001A                     ?___llmod:
   698                           	callstack 0
   699  00001A                     ___llmod@dividend:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x19
   703  00001A                     	ds	4
   704  00001E                     ___llmod@divisor:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x1D
   708  00001E                     	ds	4
   709  000022                     ___llmod@counter:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x21
   713  000022                     	ds	1
   714  000023                     ssdDigit@pos:
   715                           	callstack 0
   716  000023                     qtdComidaLeitura@oldValue:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x22
   720  000023                     	ds	1
   721  000024                     ssdDigit@val:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x23
   725  000024                     	ds	1
   726  000025                     ShowOnDisplay@mil:
   727                           	callstack 0
   728  000025                     relogio@tempo:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x24
   732  000025                     	ds	2
   733  000027                     ShowOnDisplay@cent:
   734                           	callstack 0
   735  000027                     _qtdComidaLeitura$1414:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x26
   739  000027                     	ds	2
   740  000029                     ShowOnDisplay@dez:
   741                           	callstack 0
   742  000029                     relogio@cont:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x28
   746  000029                     	ds	2
   747  00002B                     ShowOnDisplay@un:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x2A
   751  00002B                     	ds	2
   752  00002D                     ??_leituraTeclas:
   753  00002D                     ??_serial:
   754                           
   755                           ; 1 bytes @ 0x2C
   756  00002D                     	ds	2
   757  00002F                     leituraTeclas@tecla:
   758                           	callstack 0
   759  00002F                     _serial$1415:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x2E
   763  00002F                     	ds	4
   764  000033                     ??_main:
   765                           
   766                           ; 1 bytes @ 0x32
   767  000033                     	ds	2
   768  000035                     main@Slot:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0x34
   772  000035                     	ds	1
   773                           
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 275 in file "newmain1.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  Slot            1   52[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   793 ;;      Params:         0       0       0       0       0       0       0
   794 ;;      Locals:         1       0       0       0       0       0       0
   795 ;;      Temps:          2       0       0       0       0       0       0
   796 ;;      Totals:         3       0       0       0       0       0       0
   797 ;;Total ram usage:        3 bytes
   798 ;; Hardware stack levels required when called: 7
   799 ;; This function calls:
   800 ;;		_adcInit
   801 ;;		_comparacao
   802 ;;		_kpInit
   803 ;;		_lcdInit
   804 ;;		_lcdString
   805 ;;		_leituraTeclas
   806 ;;		_qtdComidaLeitura
   807 ;;		_rgbInit
   808 ;;		_serial
   809 ;;		_serialInit
   810 ;;		_ssdInit
   811 ;;		_ssdUpdate
   812 ;;		_timerInit
   813 ;;		_timerReset
   814 ;;		_timerWait
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text0
   821  00624E                     __ptext0:
   822                           	callstack 0
   823  00624E                     _main:
   824                           	callstack 24
   825  00624E                     
   826                           ;newmain1.c: 277:     lcdInit();
   827  00624E  ECCD  F030         	call	_lcdInit	;wreg free
   828                           
   829                           ;newmain1.c: 278:     kpInit();
   830  006252  EC56  F02D         	call	_kpInit	;wreg free
   831                           
   832                           ;newmain1.c: 279:     ssdInit();
   833  006256  EC89  F02E         	call	_ssdInit	;wreg free
   834                           
   835                           ;newmain1.c: 280:     timerInit();
   836  00625A  EC73  F02C         	call	_timerInit	;wreg free
   837                           
   838                           ;newmain1.c: 281:     serialInit();
   839  00625E  EC9A  F02C         	call	_serialInit	;wreg free
   840                           
   841                           ;newmain1.c: 282:     adcInit();
   842  006262  ECEB  F02D         	call	_adcInit	;wreg free
   843                           
   844                           ;newmain1.c: 283:     rgbInit();
   845  006266  ECAB  F02D         	call	_rgbInit	;wreg free
   846  00626A                     
   847                           ;newmain1.c: 285:     char Slot;;newmain1.c: 287:     lcdString("TechFarm ");
   848  00626A  0E37               	movlw	low STR_38
   849  00626C  6E0F               	movwf	lcdString@msg^0,c
   850  00626E  0E7F               	movlw	high STR_38
   851  006270  6E10               	movwf	(lcdString@msg+1)^0,c
   852  006272  EC5E  F02E         	call	_lcdString	;wreg free
   853  006276                     l3592:
   854                           
   855                           ;newmain1.c: 290:         timerReset(5000);
   856  006276  0E13               	movlw	19
   857  006278  6E02               	movwf	(timerReset@tempo+1)^0,c
   858  00627A  0E88               	movlw	136
   859  00627C  6E01               	movwf	timerReset@tempo^0,c
   860  00627E  ECC5  F02C         	call	_timerReset	;wreg free
   861                           
   862                           ;newmain1.c: 291:         switch (Slot) {
   863  006282  EF63  F031         	goto	l3616
   864  006286                     l3594:
   865                           
   866                           ;newmain1.c: 293:                 leituraTeclas();
   867  006286  EC35  F039         	call	_leituraTeclas	;wreg free
   868                           
   869                           ;newmain1.c: 294:                 ssdUpdate();
   870  00628A  ECFB  F033         	call	_ssdUpdate	;wreg free
   871  00628E                     
   872                           ;newmain1.c: 295:                 Slot = 1;
   873  00628E  0E01               	movlw	1
   874  006290  6E35               	movwf	main@Slot^0,c
   875                           
   876                           ;newmain1.c: 296:                 break;
   877  006292  EF80  F031         	goto	l3618
   878  006296                     l3598:
   879                           
   880                           ;newmain1.c: 298:                 serial();
   881  006296  EC0A  F03B         	call	_serial	;wreg free
   882  00629A                     
   883                           ;newmain1.c: 299:                 Slot = 2;
   884  00629A  0E02               	movlw	2
   885  00629C  6E35               	movwf	main@Slot^0,c
   886                           
   887                           ;newmain1.c: 300:                 break;
   888  00629E  EF80  F031         	goto	l3618
   889  0062A2                     l3602:
   890                           
   891                           ;newmain1.c: 302:                 qtdComidaLeitura();
   892  0062A2  ECB1  F034         	call	_qtdComidaLeitura	;wreg free
   893  0062A6                     
   894                           ;newmain1.c: 303:                 Slot = 3;
   895  0062A6  0E03               	movlw	3
   896  0062A8  6E35               	movwf	main@Slot^0,c
   897                           
   898                           ;newmain1.c: 304:                 break;
   899  0062AA  EF80  F031         	goto	l3618
   900  0062AE                     l3606:
   901                           
   902                           ;newmain1.c: 306:                 comparacao();
   903  0062AE  EC2A  F030         	call	_comparacao	;wreg free
   904  0062B2                     
   905                           ;newmain1.c: 307:                 ssdUpdate();
   906  0062B2  ECFB  F033         	call	_ssdUpdate	;wreg free
   907  0062B6                     
   908                           ;newmain1.c: 308:                 Slot = 4;
   909  0062B6  0E04               	movlw	4
   910  0062B8  6E35               	movwf	main@Slot^0,c
   911                           
   912                           ;newmain1.c: 309:                 break;
   913  0062BA  EF80  F031         	goto	l3618
   914  0062BE                     l3612:
   915                           
   916                           ;newmain1.c: 311:                 Slot = 0;
   917  0062BE  0E00               	movlw	0
   918  0062C0  6E35               	movwf	main@Slot^0,c
   919                           
   920                           ;newmain1.c: 312:                 break;
   921  0062C2  EF80  F031         	goto	l3618
   922  0062C6                     l3616:
   923  0062C6  5035               	movf	main@Slot^0,w,c
   924  0062C8  6E33               	movwf	??_main^0,c
   925  0062CA  6A34               	clrf	(??_main+1)^0,c
   926                           
   927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   928                           ; Switch size 1, requested type "simple"
   929                           ; Number of cases is 1, Range of values is 0 to 0
   930                           ; switch strategies available:
   931                           ; Name         Instructions Cycles
   932                           ; simple_byte            4     3 (average)
   933                           ;	Chosen strategy is simple_byte
   934  0062CC  5034               	movf	(??_main+1)^0,w,c
   935  0062CE  0A00               	xorlw	0	; case 0
   936  0062D0  B4D8               	btfsc	status,2,c
   937  0062D2  EF6D  F031         	goto	l3640
   938  0062D6  EF5F  F031         	goto	l3612
   939  0062DA                     l3640:
   940                           
   941                           ; Switch size 1, requested type "simple"
   942                           ; Number of cases is 4, Range of values is 0 to 3
   943                           ; switch strategies available:
   944                           ; Name         Instructions Cycles
   945                           ; simple_byte           13     7 (average)
   946                           ;	Chosen strategy is simple_byte
   947  0062DA  5033               	movf	??_main^0,w,c
   948  0062DC  0A00               	xorlw	0	; case 0
   949  0062DE  B4D8               	btfsc	status,2,c
   950  0062E0  EF43  F031         	goto	l3594
   951  0062E4  0A01               	xorlw	1	; case 1
   952  0062E6  B4D8               	btfsc	status,2,c
   953  0062E8  EF4B  F031         	goto	l3598
   954  0062EC  0A03               	xorlw	3	; case 2
   955  0062EE  B4D8               	btfsc	status,2,c
   956  0062F0  EF51  F031         	goto	l3602
   957  0062F4  0A01               	xorlw	1	; case 3
   958  0062F6  B4D8               	btfsc	status,2,c
   959  0062F8  EF57  F031         	goto	l3606
   960  0062FC  EF5F  F031         	goto	l3612
   961  006300                     l3618:
   962                           
   963                           ;newmain1.c: 314:         timerWait();
   964  006300  EC7C  F02C         	call	_timerWait	;wreg free
   965                           
   966                           ;newmain1.c: 315:     }
   967  006304  EF3B  F031         	goto	l3592
   968  006308  EF00  F000         	goto	start
   969  00630C                     __end_of_main:
   970                           	callstack 0
   971                           
   972 ;; *************** function _timerWait *****************
   973 ;; Defined at:
   974 ;;		line 31 in file "timer.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		None
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   988 ;;      Params:         0       0       0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0
   991 ;;      Totals:         0       0       0       0       0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text1
  1002  0058F8                     __ptext1:
  1003                           	callstack 0
  1004  0058F8                     _timerWait:
  1005                           	callstack 30
  1006  0058F8                     l440:
  1007  0058F8  A4F2               	btfss	242,2,c	;volatile
  1008  0058FA  EF81  F02C         	goto	u1491
  1009  0058FE  EF83  F02C         	goto	u1490
  1010  005902                     u1491:
  1011  005902  EF7C  F02C         	goto	l440
  1012  005906                     u1490:
  1013  005906  0012               	return		;funcret
  1014  005908                     __end_of_timerWait:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _timerReset *****************
  1018 ;; Defined at:
  1019 ;;		line 37 in file "timer.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  tempo           2    0[COMRAM] unsigned int 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  ciclos          2    2[COMRAM] unsigned int 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1033 ;;      Params:         2       0       0       0       0       0       0
  1034 ;;      Locals:         2       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0
  1036 ;;      Totals:         4       0       0       0       0       0       0
  1037 ;;Total ram usage:        4 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text2
  1047  00598A                     __ptext2:
  1048                           	callstack 0
  1049  00598A                     _timerReset:
  1050                           	callstack 30
  1051  00598A                     
  1052                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1053  00598A  90D8               	bcf	status,0,c
  1054  00598C  3401               	rlcf	timerReset@tempo^0,w,c
  1055  00598E  6E03               	movwf	timerReset@ciclos^0,c
  1056  005990  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1057  005992  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1058  005994                     
  1059                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1060  005994  1E03               	comf	timerReset@ciclos^0,f,c
  1061  005996  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1062  005998                     
  1063                           ;timer.c: 47:     ciclos -=50;
  1064  005998  0E32               	movlw	50
  1065  00599A  5E03               	subwf	timerReset@ciclos^0,f,c
  1066  00599C  0E00               	movlw	0
  1067  00599E  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1068  0059A0                     
  1069                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1070  0059A0  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1071  0059A2  6ED7               	movwf	215,c	;volatile
  1072  0059A4                     
  1073                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1074  0059A4  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1075  0059A8                     
  1076                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1077  0059A8  94F2               	bcf	242,2,c	;volatile
  1078  0059AA  0012               	return		;funcret
  1079  0059AC                     __end_of_timerReset:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _timerInit *****************
  1083 ;; Defined at:
  1084 ;;		line 55 in file "timer.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1098 ;;      Params:         0       0       0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text3
  1112  0058E6                     __ptext3:
  1113                           	callstack 0
  1114  0058E6                     _timerInit:
  1115                           	callstack 30
  1116  0058E6                     
  1117                           ;timer.c: 57:  T0CON = 0b00001000;
  1118  0058E6  0E08               	movlw	8
  1119  0058E8  6ED5               	movwf	213,c	;volatile
  1120  0058EA                     
  1121                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1122  0058EA  8ED5               	bsf	213,7,c	;volatile
  1123  0058EC  0012               	return		;funcret
  1124  0058EE                     __end_of_timerInit:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _ssdInit *****************
  1128 ;; Defined at:
  1129 ;;		line 94 in file "ssd.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 2
  1150 ;; This function calls:
  1151 ;;		_pinMode
  1152 ;;		_soInit
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text4
  1159  005D12                     __ptext4:
  1160                           	callstack 0
  1161  005D12                     _ssdInit:
  1162                           	callstack 28
  1163  005D12                     
  1164                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1165  005D12  0E00               	movlw	0
  1166  005D14  6E02               	movwf	(pinMode@pin+1)^0,c
  1167  005D16  0E18               	movlw	24
  1168  005D18  6E01               	movwf	pinMode@pin^0,c
  1169  005D1A  0E00               	movlw	0
  1170  005D1C  6E04               	movwf	(pinMode@type+1)^0,c
  1171  005D1E  0E00               	movlw	0
  1172  005D20  6E03               	movwf	pinMode@type^0,c
  1173  005D22  ECE7  F036         	call	_pinMode	;wreg free
  1174                           
  1175                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1176  005D26  0E00               	movlw	0
  1177  005D28  6E02               	movwf	(pinMode@pin+1)^0,c
  1178  005D2A  0E19               	movlw	25
  1179  005D2C  6E01               	movwf	pinMode@pin^0,c
  1180  005D2E  0E00               	movlw	0
  1181  005D30  6E04               	movwf	(pinMode@type+1)^0,c
  1182  005D32  0E00               	movlw	0
  1183  005D34  6E03               	movwf	pinMode@type^0,c
  1184  005D36  ECE7  F036         	call	_pinMode	;wreg free
  1185                           
  1186                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1187  005D3A  0E00               	movlw	0
  1188  005D3C  6E02               	movwf	(pinMode@pin+1)^0,c
  1189  005D3E  0E1A               	movlw	26
  1190  005D40  6E01               	movwf	pinMode@pin^0,c
  1191  005D42  0E00               	movlw	0
  1192  005D44  6E04               	movwf	(pinMode@type+1)^0,c
  1193  005D46  0E00               	movlw	0
  1194  005D48  6E03               	movwf	pinMode@type^0,c
  1195  005D4A  ECE7  F036         	call	_pinMode	;wreg free
  1196                           
  1197                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1198  005D4E  0E00               	movlw	0
  1199  005D50  6E02               	movwf	(pinMode@pin+1)^0,c
  1200  005D52  0E1B               	movlw	27
  1201  005D54  6E01               	movwf	pinMode@pin^0,c
  1202  005D56  0E00               	movlw	0
  1203  005D58  6E04               	movwf	(pinMode@type+1)^0,c
  1204  005D5A  0E00               	movlw	0
  1205  005D5C  6E03               	movwf	pinMode@type^0,c
  1206  005D5E  ECE7  F036         	call	_pinMode	;wreg free
  1207                           
  1208                           ;ssd.c: 102:     soInit();
  1209  005D62  EC8C  F02D         	call	_soInit	;wreg free
  1210  005D66  0012               	return		;funcret
  1211  005D68                     __end_of_ssdInit:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _serialInit *****************
  1215 ;; Defined at:
  1216 ;;		line 48 in file "serial.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1230 ;;      Params:         0       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text5
  1244  005934                     __ptext5:
  1245                           	callstack 0
  1246  005934                     _serialInit:
  1247                           	callstack 30
  1248  005934                     
  1249                           ;serial.c: 49:     TXSTA = 0b00101100;
  1250  005934  0E2C               	movlw	44
  1251  005936  6EAC               	movwf	172,c	;volatile
  1252                           
  1253                           ;serial.c: 50:     RCSTA = 0b10010000;
  1254  005938  0E90               	movlw	144
  1255  00593A  6EAB               	movwf	171,c	;volatile
  1256                           
  1257                           ;serial.c: 51:     BAUDCON = 0b00001000;
  1258  00593C  0E08               	movlw	8
  1259  00593E  6EB8               	movwf	184,c	;volatile
  1260                           
  1261                           ;serial.c: 52:     SPBRGH = 0;
  1262  005940  0E00               	movlw	0
  1263  005942  6EB0               	movwf	176,c	;volatile
  1264                           
  1265                           ;serial.c: 53:     SPBRG = 34;
  1266  005944  0E22               	movlw	34
  1267  005946  6EAF               	movwf	175,c	;volatile
  1268  005948                     
  1269                           ;serial.c: 54:     ((TRISC) |= (1<<(6)));
  1270  005948  8C94               	bsf	148,6,c	;volatile
  1271  00594A                     
  1272                           ;serial.c: 55:     ((TRISC) |= (1<<(7)));
  1273  00594A  8E94               	bsf	148,7,c	;volatile
  1274  00594C  0012               	return		;funcret
  1275  00594E                     __end_of_serialInit:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _serial *****************
  1279 ;; Defined at:
  1280 ;;		line 191 in file "newmain1.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  2  546[None  ] int 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1294 ;;      Params:         0       0       0       0       0       0       0
  1295 ;;      Locals:         4       0       0       0       0       0       0
  1296 ;;      Temps:          2       0       0       0       0       0       0
  1297 ;;      Totals:         6       0       0       0       0       0       0
  1298 ;;Total ram usage:        6 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 6
  1301 ;; This function calls:
  1302 ;;		___lldiv
  1303 ;;		___llmod
  1304 ;;		___lmul
  1305 ;;		_adcRead
  1306 ;;		_lcdCommand
  1307 ;;		_lcdPosition
  1308 ;;		_lcdString
  1309 ;;		_relogio
  1310 ;;		_serialRead
  1311 ;;		_serialSend
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text6
  1318  007614                     __ptext6:
  1319                           	callstack 0
  1320  007614                     _serial:
  1321                           	callstack 24
  1322  007614                     
  1323                           ;newmain1.c: 192:     auxSerial = serialRead();
  1324  007614  EC28  F02D         	call	_serialRead	;wreg free
  1325  007618  6E46               	movwf	_auxSerial^0,c
  1326  00761A                     
  1327                           ;newmain1.c: 193:     if (auxSerial != 0) {
  1328  00761A  5046               	movf	_auxSerial^0,w,c
  1329  00761C  B4D8               	btfsc	status,2,c
  1330  00761E  EF13  F03B         	goto	u3191
  1331  007622  EF15  F03B         	goto	u3190
  1332  007626                     u3191:
  1333  007626  EF11  F03C         	goto	l3478
  1334  00762A                     u3190:
  1335  00762A  EFE8  F03B         	goto	l3476
  1336  00762E                     l3410:
  1337                           
  1338                           ;newmain1.c: 198:                 lcdCommand(0x80);
  1339  00762E  0E80               	movlw	128
  1340  007630  ECA7  F02C         	call	_lcdCommand
  1341  007634                     
  1342                           ;newmain1.c: 199:                 lcdString("CAVALOS");
  1343  007634  0EDC               	movlw	low STR_23
  1344  007636  6E0F               	movwf	lcdString@msg^0,c
  1345  007638  0E7F               	movlw	high STR_23
  1346  00763A  6E10               	movwf	(lcdString@msg+1)^0,c
  1347  00763C  EC5E  F02E         	call	_lcdString	;wreg free
  1348  007640                     
  1349                           ;newmain1.c: 200:                 lcdCommand(0xC0);
  1350  007640  0EC0               	movlw	192
  1351  007642  ECA7  F02C         	call	_lcdCommand
  1352  007646                     
  1353                           ;newmain1.c: 201:                 lcdString("Qtd: 25");
  1354  007646  0ED4               	movlw	low STR_4
  1355  007648  6E0F               	movwf	lcdString@msg^0,c
  1356  00764A  0E7F               	movlw	high STR_4
  1357  00764C  6E10               	movwf	(lcdString@msg+1)^0,c
  1358  00764E  EC5E  F02E         	call	_lcdString	;wreg free
  1359  007652                     
  1360                           ;newmain1.c: 202:                 comidaMax = 190;
  1361  007652  0EBE               	movlw	190
  1362  007654  6E3A               	movwf	_comidaMax^0,c
  1363  007656  0E00               	movlw	0
  1364  007658  6E3B               	movwf	(_comidaMax+1)^0,c
  1365  00765A  0E00               	movlw	0
  1366  00765C  6E3C               	movwf	(_comidaMax+2)^0,c
  1367  00765E  0E00               	movlw	0
  1368  007660  6E3D               	movwf	(_comidaMax+3)^0,c
  1369                           
  1370                           ;newmain1.c: 203:                 break;
  1371  007662  EF11  F03C         	goto	l3478
  1372  007666                     l3420:
  1373                           
  1374                           ;newmain1.c: 206:                 lcdCommand(0x80);
  1375  007666  0E80               	movlw	128
  1376  007668  ECA7  F02C         	call	_lcdCommand
  1377  00766C                     
  1378                           ;newmain1.c: 207:                 lcdString("VACAS");
  1379  00766C  0EF9               	movlw	low STR_25
  1380  00766E  6E0F               	movwf	lcdString@msg^0,c
  1381  007670  0E7F               	movlw	high STR_25
  1382  007672  6E10               	movwf	(lcdString@msg+1)^0,c
  1383  007674  EC5E  F02E         	call	_lcdString	;wreg free
  1384  007678                     
  1385                           ;newmain1.c: 208:                 lcdCommand(0xC0);
  1386  007678  0EC0               	movlw	192
  1387  00767A  ECA7  F02C         	call	_lcdCommand
  1388                           
  1389                           ;newmain1.c: 209:                 lcdString("Qtd: 15");
  1390  00767E  0ECC               	movlw	low STR_7
  1391  007680  6E0F               	movwf	lcdString@msg^0,c
  1392  007682  0E7F               	movlw	high STR_7
  1393  007684  6E10               	movwf	(lcdString@msg+1)^0,c
  1394  007686  EC5E  F02E         	call	_lcdString	;wreg free
  1395  00768A                     
  1396                           ;newmain1.c: 210:                 comidaMax = 150;
  1397  00768A  0E96               	movlw	150
  1398  00768C  6E3A               	movwf	_comidaMax^0,c
  1399  00768E  0E00               	movlw	0
  1400  007690  6E3B               	movwf	(_comidaMax+1)^0,c
  1401  007692  0E00               	movlw	0
  1402  007694  6E3C               	movwf	(_comidaMax+2)^0,c
  1403  007696  0E00               	movlw	0
  1404  007698  6E3D               	movwf	(_comidaMax+3)^0,c
  1405                           
  1406                           ;newmain1.c: 211:                 break;
  1407  00769A  EF11  F03C         	goto	l3478
  1408  00769E                     l3428:
  1409                           
  1410                           ;newmain1.c: 214:                 lcdCommand(0x80);
  1411  00769E  0E80               	movlw	128
  1412  0076A0  ECA7  F02C         	call	_lcdCommand
  1413  0076A4                     
  1414                           ;newmain1.c: 215:                 lcdString("PORCOS");
  1415  0076A4  0EEC               	movlw	low STR_27
  1416  0076A6  6E0F               	movwf	lcdString@msg^0,c
  1417  0076A8  0E7F               	movlw	high STR_27
  1418  0076AA  6E10               	movwf	(lcdString@msg+1)^0,c
  1419  0076AC  EC5E  F02E         	call	_lcdString	;wreg free
  1420  0076B0                     
  1421                           ;newmain1.c: 216:                 lcdCommand(0xC0);
  1422  0076B0  0EC0               	movlw	192
  1423  0076B2  ECA7  F02C         	call	_lcdCommand
  1424                           
  1425                           ;newmain1.c: 217:                 lcdString("Qtd: 40 ");
  1426  0076B6  0EA1               	movlw	low STR_28
  1427  0076B8  6E0F               	movwf	lcdString@msg^0,c
  1428  0076BA  0E7F               	movlw	high STR_28
  1429  0076BC  6E10               	movwf	(lcdString@msg+1)^0,c
  1430  0076BE  EC5E  F02E         	call	_lcdString	;wreg free
  1431  0076C2                     
  1432                           ;newmain1.c: 218:                 comidaMax = 110;
  1433  0076C2  0E6E               	movlw	110
  1434  0076C4  6E3A               	movwf	_comidaMax^0,c
  1435  0076C6  0E00               	movlw	0
  1436  0076C8  6E3B               	movwf	(_comidaMax+1)^0,c
  1437  0076CA  0E00               	movlw	0
  1438  0076CC  6E3C               	movwf	(_comidaMax+2)^0,c
  1439  0076CE  0E00               	movlw	0
  1440  0076D0  6E3D               	movwf	(_comidaMax+3)^0,c
  1441                           
  1442                           ;newmain1.c: 219:                 break;
  1443  0076D2  EF11  F03C         	goto	l3478
  1444  0076D6                     l3436:
  1445                           
  1446                           ;newmain1.c: 222:                 lcdCommand(0x80);
  1447  0076D6  0E80               	movlw	128
  1448  0076D8  ECA7  F02C         	call	_lcdCommand
  1449  0076DC                     
  1450                           ;newmain1.c: 223:                 lcdString("GALINHAS");
  1451  0076DC  0EB3               	movlw	low STR_29
  1452  0076DE  6E0F               	movwf	lcdString@msg^0,c
  1453  0076E0  0E7F               	movlw	high STR_29
  1454  0076E2  6E10               	movwf	(lcdString@msg+1)^0,c
  1455  0076E4  EC5E  F02E         	call	_lcdString	;wreg free
  1456  0076E8                     
  1457                           ;newmain1.c: 224:                 lcdCommand(0xC0);
  1458  0076E8  0EC0               	movlw	192
  1459  0076EA  ECA7  F02C         	call	_lcdCommand
  1460                           
  1461                           ;newmain1.c: 225:                 lcdString("Qtd: 90 ");
  1462  0076EE  0EAA               	movlw	low STR_13
  1463  0076F0  6E0F               	movwf	lcdString@msg^0,c
  1464  0076F2  0E7F               	movlw	high STR_13
  1465  0076F4  6E10               	movwf	(lcdString@msg+1)^0,c
  1466  0076F6  EC5E  F02E         	call	_lcdString	;wreg free
  1467  0076FA                     
  1468                           ;newmain1.c: 226:                 comidaMax = 30;
  1469  0076FA  0E1E               	movlw	30
  1470  0076FC  6E3A               	movwf	_comidaMax^0,c
  1471  0076FE  0E00               	movlw	0
  1472  007700  6E3B               	movwf	(_comidaMax+1)^0,c
  1473  007702  0E00               	movlw	0
  1474  007704  6E3C               	movwf	(_comidaMax+2)^0,c
  1475  007706  0E00               	movlw	0
  1476  007708  6E3D               	movwf	(_comidaMax+3)^0,c
  1477                           
  1478                           ;newmain1.c: 227:                 break;
  1479  00770A  EF11  F03C         	goto	l3478
  1480  00770E                     l3444:
  1481                           
  1482                           ;newmain1.c: 230:                 lcdCommand(0x80);
  1483  00770E  0E80               	movlw	128
  1484  007710  ECA7  F02C         	call	_lcdCommand
  1485  007714                     
  1486                           ;newmain1.c: 231:                 lcdString("OVELHAS  ");
  1487  007714  0E2D               	movlw	low STR_14
  1488  007716  6E0F               	movwf	lcdString@msg^0,c
  1489  007718  0E7F               	movlw	high STR_14
  1490  00771A  6E10               	movwf	(lcdString@msg+1)^0,c
  1491  00771C  EC5E  F02E         	call	_lcdString	;wreg free
  1492  007720                     
  1493                           ;newmain1.c: 232:                 lcdCommand(0xC0);
  1494  007720  0EC0               	movlw	192
  1495  007722  ECA7  F02C         	call	_lcdCommand
  1496                           
  1497                           ;newmain1.c: 233:                 lcdString("Qtd: 10 ");
  1498  007726  0E98               	movlw	low STR_16
  1499  007728  6E0F               	movwf	lcdString@msg^0,c
  1500  00772A  0E7F               	movlw	high STR_16
  1501  00772C  6E10               	movwf	(lcdString@msg+1)^0,c
  1502  00772E  EC5E  F02E         	call	_lcdString	;wreg free
  1503  007732                     
  1504                           ;newmain1.c: 234:                 comidaMax = 50;
  1505  007732  0E32               	movlw	50
  1506  007734  6E3A               	movwf	_comidaMax^0,c
  1507  007736  0E00               	movlw	0
  1508  007738  6E3B               	movwf	(_comidaMax+1)^0,c
  1509  00773A  0E00               	movlw	0
  1510  00773C  6E3C               	movwf	(_comidaMax+2)^0,c
  1511  00773E  0E00               	movlw	0
  1512  007740  6E3D               	movwf	(_comidaMax+3)^0,c
  1513                           
  1514                           ;newmain1.c: 235:                 break;
  1515  007742  EF11  F03C         	goto	l3478
  1516  007746                     l3452:
  1517                           
  1518                           ;newmain1.c: 238:                 lcdCommand(0x80);
  1519  007746  0E80               	movlw	128
  1520  007748  ECA7  F02C         	call	_lcdCommand
  1521  00774C                     
  1522                           ;newmain1.c: 239:                 lcdString("TOUROS  ");
  1523  00774C  0E8F               	movlw	low STR_17
  1524  00774E  6E0F               	movwf	lcdString@msg^0,c
  1525  007750  0E7F               	movlw	high STR_17
  1526  007752  6E10               	movwf	(lcdString@msg+1)^0,c
  1527  007754  EC5E  F02E         	call	_lcdString	;wreg free
  1528  007758                     
  1529                           ;newmain1.c: 240:                 lcdCommand(0xC0);
  1530  007758  0EC0               	movlw	192
  1531  00775A  ECA7  F02C         	call	_lcdCommand
  1532                           
  1533                           ;newmain1.c: 241:                 lcdString("Qtd: 8 ");
  1534  00775E  0EBC               	movlw	low STR_19
  1535  007760  6E0F               	movwf	lcdString@msg^0,c
  1536  007762  0E7F               	movlw	high STR_19
  1537  007764  6E10               	movwf	(lcdString@msg+1)^0,c
  1538  007766  EC5E  F02E         	call	_lcdString	;wreg free
  1539  00776A                     
  1540                           ;newmain1.c: 242:                 comidaMax = 120;
  1541  00776A  0E78               	movlw	120
  1542  00776C  6E3A               	movwf	_comidaMax^0,c
  1543  00776E  0E00               	movlw	0
  1544  007770  6E3B               	movwf	(_comidaMax+1)^0,c
  1545  007772  0E00               	movlw	0
  1546  007774  6E3C               	movwf	(_comidaMax+2)^0,c
  1547  007776  0E00               	movlw	0
  1548  007778  6E3D               	movwf	(_comidaMax+3)^0,c
  1549                           
  1550                           ;newmain1.c: 243:                 break;
  1551  00777A  EF11  F03C         	goto	l3478
  1552  00777E                     l3460:
  1553                           
  1554                           ;newmain1.c: 246:                 lcdCommand(0x80);
  1555  00777E  0E80               	movlw	128
  1556  007780  ECA7  F02C         	call	_lcdCommand
  1557  007784                     
  1558                           ;newmain1.c: 247:                 lcdString("Enchendo o Cocho");
  1559  007784  0EF9               	movlw	low STR_20
  1560  007786  6E0F               	movwf	lcdString@msg^0,c
  1561  007788  0E7E               	movlw	high STR_20
  1562  00778A  6E10               	movwf	(lcdString@msg+1)^0,c
  1563  00778C  EC5E  F02E         	call	_lcdString	;wreg free
  1564  007790                     
  1565                           ;newmain1.c: 248:                 lcdCommand(0xC0);
  1566  007790  0EC0               	movlw	192
  1567  007792  ECA7  F02C         	call	_lcdCommand
  1568  007796                     
  1569                           ;newmain1.c: 249:                 lcdPosition(1,0);
  1570  007796  0E00               	movlw	0
  1571  007798  6E10               	movwf	(lcdPosition@line+1)^0,c
  1572  00779A  0E01               	movlw	1
  1573  00779C  6E0F               	movwf	lcdPosition@line^0,c
  1574  00779E  0E00               	movlw	0
  1575  0077A0  6E12               	movwf	(lcdPosition@col+1)^0,c
  1576  0077A2  0E00               	movlw	0
  1577  0077A4  6E11               	movwf	lcdPosition@col^0,c
  1578  0077A6  EC6F  F02D         	call	_lcdPosition	;wreg free
  1579  0077AA                     
  1580                           ;newmain1.c: 250:                 lcdString("Aguarde");
  1581  0077AA  0EE4               	movlw	low STR_21
  1582  0077AC  6E0F               	movwf	lcdString@msg^0,c
  1583  0077AE  0E7F               	movlw	high STR_21
  1584  0077B0  6E10               	movwf	(lcdString@msg+1)^0,c
  1585  0077B2  EC5E  F02E         	call	_lcdString	;wreg free
  1586  0077B6                     
  1587                           ;newmain1.c: 251:                 relogio();
  1588  0077B6  ECC5  F035         	call	_relogio	;wreg free
  1589  0077BA                     
  1590                           ;newmain1.c: 252:                 lcdCommand(0x01);
  1591  0077BA  0E01               	movlw	1
  1592  0077BC  ECA7  F02C         	call	_lcdCommand
  1593                           
  1594                           ;newmain1.c: 253:                 lcdString("Cocho Cheio!");
  1595  0077C0  0E0A               	movlw	low STR_22
  1596  0077C2  6E0F               	movwf	lcdString@msg^0,c
  1597  0077C4  0E7F               	movlw	high STR_22
  1598  0077C6  6E10               	movwf	(lcdString@msg+1)^0,c
  1599  0077C8  EC5E  F02E         	call	_lcdString	;wreg free
  1600                           
  1601                           ;newmain1.c: 254:                 break;
  1602  0077CC  EF11  F03C         	goto	l3478
  1603  0077D0                     l3476:
  1604  0077D0  5046               	movf	_auxSerial^0,w,c
  1605  0077D2  6E2D               	movwf	??_serial^0,c
  1606  0077D4  6A2E               	clrf	(??_serial+1)^0,c
  1607                           
  1608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1609                           ; Switch size 1, requested type "simple"
  1610                           ; Number of cases is 1, Range of values is 0 to 0
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte            4     3 (average)
  1614                           ;	Chosen strategy is simple_byte
  1615  0077D6  502E               	movf	(??_serial+1)^0,w,c
  1616  0077D8  0A00               	xorlw	0	; case 0
  1617  0077DA  B4D8               	btfsc	status,2,c
  1618  0077DC  EFF2  F03B         	goto	l3642
  1619  0077E0  EF11  F03C         	goto	l3478
  1620  0077E4                     l3642:
  1621                           
  1622                           ; Switch size 1, requested type "simple"
  1623                           ; Number of cases is 7, Range of values is 66 to 88
  1624                           ; switch strategies available:
  1625                           ; Name         Instructions Cycles
  1626                           ; simple_byte           22    12 (average)
  1627                           ;	Chosen strategy is simple_byte
  1628  0077E4  502D               	movf	??_serial^0,w,c
  1629  0077E6  0A42               	xorlw	66	; case 66
  1630  0077E8  B4D8               	btfsc	status,2,c
  1631  0077EA  EFA3  F03B         	goto	l3452
  1632  0077EE  0A06               	xorlw	6	; case 68
  1633  0077F0  B4D8               	btfsc	status,2,c
  1634  0077F2  EF4F  F03B         	goto	l3428
  1635  0077F6  0A08               	xorlw	8	; case 76
  1636  0077F8  B4D8               	btfsc	status,2,c
  1637  0077FA  EF33  F03B         	goto	l3420
  1638  0077FE  0A1E               	xorlw	30	; case 82
  1639  007800  B4D8               	btfsc	status,2,c
  1640  007802  EF6B  F03B         	goto	l3436
  1641  007806  0A01               	xorlw	1	; case 83
  1642  007808  B4D8               	btfsc	status,2,c
  1643  00780A  EF87  F03B         	goto	l3444
  1644  00780E  0A06               	xorlw	6	; case 85
  1645  007810  B4D8               	btfsc	status,2,c
  1646  007812  EF17  F03B         	goto	l3410
  1647  007816  0A0D               	xorlw	13	; case 88
  1648  007818  B4D8               	btfsc	status,2,c
  1649  00781A  EFBF  F03B         	goto	l3460
  1650  00781E  EF11  F03C         	goto	l3478
  1651  007822                     l3478:
  1652                           
  1653                           ;newmain1.c: 261:     potenc = adcRead(0);
  1654  007822  0E00               	movlw	0
  1655  007824  6E02               	movwf	(adcRead@channel+1)^0,c
  1656  007826  0E00               	movlw	0
  1657  007828  6E01               	movwf	adcRead@channel^0,c
  1658  00782A  EC36  F02E         	call	_adcRead	;wreg free
  1659  00782E  C001  F04E         	movff	?_adcRead,_potenc
  1660  007832  C002  F04F         	movff	?_adcRead+1,_potenc+1
  1661  007836  0E00               	movlw	0
  1662  007838  BE4F               	btfsc	(_potenc+1)^0,7,c
  1663  00783A  0EFF               	movlw	-1
  1664  00783C  6E50               	movwf	(_potenc+2)^0,c
  1665  00783E  6E51               	movwf	(_potenc+3)^0,c
  1666  007840                     
  1667                           ;newmain1.c: 263:     serialSend('Kg');
  1668  007840  0E67               	movlw	103
  1669  007842  EC84  F02C         	call	_serialSend
  1670  007846                     
  1671                           ;newmain1.c: 264:     serialSend(':');
  1672  007846  0E3A               	movlw	58
  1673  007848  EC84  F02C         	call	_serialSend
  1674  00784C                     
  1675                           ;newmain1.c: 265:     serialSend(' ');
  1676  00784C  0E20               	movlw	32
  1677  00784E  EC84  F02C         	call	_serialSend
  1678  007852                     
  1679                           ;newmain1.c: 267:     serialSend((((200 * potenc) / 1023)) / 100 % 10 + 48);
  1680  007852  0EFF               	movlw	255
  1681  007854  6E11               	movwf	___lldiv@divisor^0,c
  1682  007856  0E03               	movlw	3
  1683  007858  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1684  00785A  0E00               	movlw	0
  1685  00785C  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1686  00785E  0E00               	movlw	0
  1687  007860  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1688  007862  C04E  F001         	movff	_potenc,___lmul@multiplier
  1689  007866  C04F  F002         	movff	_potenc+1,___lmul@multiplier+1
  1690  00786A  C050  F003         	movff	_potenc+2,___lmul@multiplier+2
  1691  00786E  C051  F004         	movff	_potenc+3,___lmul@multiplier+3
  1692  007872  0EC8               	movlw	200
  1693  007874  6E05               	movwf	___lmul@multiplicand^0,c
  1694  007876  0E00               	movlw	0
  1695  007878  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1696  00787A  0E00               	movlw	0
  1697  00787C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1698  00787E  0E00               	movlw	0
  1699  007880  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1700  007882  EC75  F02F         	call	___lmul	;wreg free
  1701  007886  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1702  00788A  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1703  00788E  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1704  007892  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1705  007896  EC7B  F030         	call	___lldiv	;wreg free
  1706  00789A  C00D  F02F         	movff	?___lldiv,_serial$1415
  1707  00789E  C00E  F030         	movff	?___lldiv+1,_serial$1415+1
  1708  0078A2  C00F  F031         	movff	?___lldiv+2,_serial$1415+2
  1709  0078A6  C010  F032         	movff	?___lldiv+3,_serial$1415+3
  1710  0078AA                     
  1711                           ;newmain1.c: 267:     serialSend((((200 * potenc) / 1023)) / 100 % 10 + 48);
  1712  0078AA  0E64               	movlw	100
  1713  0078AC  6E11               	movwf	___lldiv@divisor^0,c
  1714  0078AE  0E00               	movlw	0
  1715  0078B0  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1716  0078B2  0E00               	movlw	0
  1717  0078B4  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1718  0078B6  0E00               	movlw	0
  1719  0078B8  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1720  0078BA  C02F  F00D         	movff	_serial$1415,___lldiv@dividend
  1721  0078BE  C030  F00E         	movff	_serial$1415+1,___lldiv@dividend+1
  1722  0078C2  C031  F00F         	movff	_serial$1415+2,___lldiv@dividend+2
  1723  0078C6  C032  F010         	movff	_serial$1415+3,___lldiv@dividend+3
  1724  0078CA  EC7B  F030         	call	___lldiv	;wreg free
  1725  0078CE  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  1726  0078D2  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  1727  0078D6  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  1728  0078DA  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  1729  0078DE  0E0A               	movlw	10
  1730  0078E0  6E1E               	movwf	___llmod@divisor^0,c
  1731  0078E2  0E00               	movlw	0
  1732  0078E4  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1733  0078E6  0E00               	movlw	0
  1734  0078E8  6E20               	movwf	(___llmod@divisor+2)^0,c
  1735  0078EA  0E00               	movlw	0
  1736  0078EC  6E21               	movwf	(___llmod@divisor+3)^0,c
  1737  0078EE  ECE6  F02F         	call	___llmod	;wreg free
  1738  0078F2  501A               	movf	?___llmod^0,w,c
  1739  0078F4  0F30               	addlw	48
  1740  0078F6  EC84  F02C         	call	_serialSend
  1741  0078FA                     
  1742                           ;newmain1.c: 268:     serialSend((((200 * potenc) / 1023)) / 10 % 10 + 48);
  1743  0078FA  0EFF               	movlw	255
  1744  0078FC  6E11               	movwf	___lldiv@divisor^0,c
  1745  0078FE  0E03               	movlw	3
  1746  007900  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1747  007902  0E00               	movlw	0
  1748  007904  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1749  007906  0E00               	movlw	0
  1750  007908  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1751  00790A  C04E  F001         	movff	_potenc,___lmul@multiplier
  1752  00790E  C04F  F002         	movff	_potenc+1,___lmul@multiplier+1
  1753  007912  C050  F003         	movff	_potenc+2,___lmul@multiplier+2
  1754  007916  C051  F004         	movff	_potenc+3,___lmul@multiplier+3
  1755  00791A  0EC8               	movlw	200
  1756  00791C  6E05               	movwf	___lmul@multiplicand^0,c
  1757  00791E  0E00               	movlw	0
  1758  007920  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1759  007922  0E00               	movlw	0
  1760  007924  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1761  007926  0E00               	movlw	0
  1762  007928  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1763  00792A  EC75  F02F         	call	___lmul	;wreg free
  1764  00792E  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1765  007932  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1766  007936  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1767  00793A  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1768  00793E  EC7B  F030         	call	___lldiv	;wreg free
  1769  007942  C00D  F02F         	movff	?___lldiv,_serial$1415
  1770  007946  C00E  F030         	movff	?___lldiv+1,_serial$1415+1
  1771  00794A  C00F  F031         	movff	?___lldiv+2,_serial$1415+2
  1772  00794E  C010  F032         	movff	?___lldiv+3,_serial$1415+3
  1773  007952                     
  1774                           ;newmain1.c: 268:     serialSend((((200 * potenc) / 1023)) / 10 % 10 + 48);
  1775  007952  0E0A               	movlw	10
  1776  007954  6E11               	movwf	___lldiv@divisor^0,c
  1777  007956  0E00               	movlw	0
  1778  007958  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1779  00795A  0E00               	movlw	0
  1780  00795C  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1781  00795E  0E00               	movlw	0
  1782  007960  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1783  007962  C02F  F00D         	movff	_serial$1415,___lldiv@dividend
  1784  007966  C030  F00E         	movff	_serial$1415+1,___lldiv@dividend+1
  1785  00796A  C031  F00F         	movff	_serial$1415+2,___lldiv@dividend+2
  1786  00796E  C032  F010         	movff	_serial$1415+3,___lldiv@dividend+3
  1787  007972  EC7B  F030         	call	___lldiv	;wreg free
  1788  007976  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  1789  00797A  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  1790  00797E  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  1791  007982  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  1792  007986  0E0A               	movlw	10
  1793  007988  6E1E               	movwf	___llmod@divisor^0,c
  1794  00798A  0E00               	movlw	0
  1795  00798C  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1796  00798E  0E00               	movlw	0
  1797  007990  6E20               	movwf	(___llmod@divisor+2)^0,c
  1798  007992  0E00               	movlw	0
  1799  007994  6E21               	movwf	(___llmod@divisor+3)^0,c
  1800  007996  ECE6  F02F         	call	___llmod	;wreg free
  1801  00799A  501A               	movf	?___llmod^0,w,c
  1802  00799C  0F30               	addlw	48
  1803  00799E  EC84  F02C         	call	_serialSend
  1804  0079A2                     
  1805                           ;newmain1.c: 269:     serialSend((((200 * potenc) / 1023)) / 1 % 10 + 48);
  1806  0079A2  0EFF               	movlw	255
  1807  0079A4  6E11               	movwf	___lldiv@divisor^0,c
  1808  0079A6  0E03               	movlw	3
  1809  0079A8  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1810  0079AA  0E00               	movlw	0
  1811  0079AC  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1812  0079AE  0E00               	movlw	0
  1813  0079B0  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1814  0079B2  C04E  F001         	movff	_potenc,___lmul@multiplier
  1815  0079B6  C04F  F002         	movff	_potenc+1,___lmul@multiplier+1
  1816  0079BA  C050  F003         	movff	_potenc+2,___lmul@multiplier+2
  1817  0079BE  C051  F004         	movff	_potenc+3,___lmul@multiplier+3
  1818  0079C2  0EC8               	movlw	200
  1819  0079C4  6E05               	movwf	___lmul@multiplicand^0,c
  1820  0079C6  0E00               	movlw	0
  1821  0079C8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1822  0079CA  0E00               	movlw	0
  1823  0079CC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1824  0079CE  0E00               	movlw	0
  1825  0079D0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1826  0079D2  EC75  F02F         	call	___lmul	;wreg free
  1827  0079D6  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1828  0079DA  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1829  0079DE  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1830  0079E2  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1831  0079E6  EC7B  F030         	call	___lldiv	;wreg free
  1832  0079EA  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  1833  0079EE  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  1834  0079F2  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  1835  0079F6  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  1836  0079FA  0E0A               	movlw	10
  1837  0079FC  6E1E               	movwf	___llmod@divisor^0,c
  1838  0079FE  0E00               	movlw	0
  1839  007A00  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1840  007A02  0E00               	movlw	0
  1841  007A04  6E20               	movwf	(___llmod@divisor+2)^0,c
  1842  007A06  0E00               	movlw	0
  1843  007A08  6E21               	movwf	(___llmod@divisor+3)^0,c
  1844  007A0A  ECE6  F02F         	call	___llmod	;wreg free
  1845  007A0E  501A               	movf	?___llmod^0,w,c
  1846  007A10  0F30               	addlw	48
  1847  007A12  EC84  F02C         	call	_serialSend
  1848                           
  1849                           ;newmain1.c: 271:     serialSend('\n');
  1850  007A16  0E0A               	movlw	10
  1851  007A18  EC84  F02C         	call	_serialSend
  1852  007A1C  0012               	return		;funcret
  1853  007A1E                     __end_of_serial:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _serialSend *****************
  1857 ;; Defined at:
  1858 ;;		line 25 in file "serial.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  c               1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  c               1    0[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1872 ;;      Params:         0       0       0       0       0       0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0
  1875 ;;      Totals:         1       0       0       0       0       0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_serial
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text7
  1886  005908                     __ptext7:
  1887                           	callstack 0
  1888  005908                     _serialSend:
  1889                           	callstack 29
  1890                           
  1891                           ;incstack = 0
  1892                           ;serialSend@c stored from wreg
  1893  005908  6E01               	movwf	serialSend@c^0,c
  1894  00590A                     l357:
  1895  00590A  A89E               	btfss	158,4,c	;volatile
  1896  00590C  EF8A  F02C         	goto	u2991
  1897  005910  EF8C  F02C         	goto	u2990
  1898  005914                     u2991:
  1899  005914  EF85  F02C         	goto	l357
  1900  005918                     u2990:
  1901  005918                     
  1902                           ;serial.c: 27:     TXREG = c;
  1903  005918  C001  FFAD         	movff	serialSend@c,4013	;volatile
  1904  00591C  0012               	return		;funcret
  1905  00591E                     __end_of_serialSend:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _serialRead *****************
  1909 ;; Defined at:
  1910 ;;		line 30 in file "serial.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  resp            1    0[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1924 ;;      Params:         0       0       0       0       0       0       0
  1925 ;;      Locals:         1       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0
  1927 ;;      Totals:         1       0       0       0       0       0       0
  1928 ;;Total ram usage:        1 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_serial
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text8
  1938  005A50                     __ptext8:
  1939                           	callstack 0
  1940  005A50                     _serialRead:
  1941                           	callstack 29
  1942  005A50                     
  1943                           ;serial.c: 31:     char resp = 0;
  1944  005A50  0E00               	movlw	0
  1945  005A52  6E01               	movwf	serialRead@resp^0,c
  1946  005A54                     
  1947                           ;serial.c: 33:     if (((RCSTA) & (1<<(1))))
  1948  005A54  A2AB               	btfss	171,1,c	;volatile
  1949  005A56  EF2F  F02D         	goto	u3001
  1950  005A5A  EF31  F02D         	goto	u3000
  1951  005A5E                     u3001:
  1952  005A5E  EF33  F02D         	goto	l3086
  1953  005A62                     u3000:
  1954  005A62                     
  1955                           ;serial.c: 34:     {;serial.c: 35:         ((RCSTA) &= ~(1<<(4)));
  1956  005A62  98AB               	bcf	171,4,c	;volatile
  1957                           
  1958                           ;serial.c: 36:         ((RCSTA) |= (1<<(4)));
  1959  005A64  88AB               	bsf	171,4,c	;volatile
  1960  005A66                     l3086:
  1961                           
  1962                           ;serial.c: 39:     if (((PIR1) & (1<<(5))))
  1963  005A66  AA9E               	btfss	158,5,c	;volatile
  1964  005A68  EF38  F02D         	goto	u3011
  1965  005A6C  EF3A  F02D         	goto	u3010
  1966  005A70                     u3011:
  1967  005A70  EF3C  F02D         	goto	l3090
  1968  005A74                     u3010:
  1969  005A74                     
  1970                           ;serial.c: 40:     {;serial.c: 41:         resp = RCREG;
  1971  005A74  CFAE F001          	movff	4014,serialRead@resp	;volatile
  1972  005A78                     l3090:
  1973                           
  1974                           ;serial.c: 43:     return resp;
  1975  005A78  5001               	movf	serialRead@resp^0,w,c
  1976  005A7A  0012               	return		;funcret
  1977  005A7C                     __end_of_serialRead:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _rgbInit *****************
  1981 ;; Defined at:
  1982 ;;		line 45 in file "rgb.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1996 ;;      Params:         0       0       0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 1
  2003 ;; This function calls:
  2004 ;;		_pinMode
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text9
  2011  005B56                     __ptext9:
  2012                           	callstack 0
  2013  005B56                     _rgbInit:
  2014                           	callstack 29
  2015  005B56                     
  2016                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  2017  005B56  0E00               	movlw	0
  2018  005B58  6E02               	movwf	(pinMode@pin+1)^0,c
  2019  005B5A  0E18               	movlw	24
  2020  005B5C  6E01               	movwf	pinMode@pin^0,c
  2021  005B5E  0E00               	movlw	0
  2022  005B60  6E04               	movwf	(pinMode@type+1)^0,c
  2023  005B62  0E00               	movlw	0
  2024  005B64  6E03               	movwf	pinMode@type^0,c
  2025  005B66  ECE7  F036         	call	_pinMode	;wreg free
  2026                           
  2027                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  2028  005B6A  0E00               	movlw	0
  2029  005B6C  6E02               	movwf	(pinMode@pin+1)^0,c
  2030  005B6E  0E19               	movlw	25
  2031  005B70  6E01               	movwf	pinMode@pin^0,c
  2032  005B72  0E00               	movlw	0
  2033  005B74  6E04               	movwf	(pinMode@type+1)^0,c
  2034  005B76  0E00               	movlw	0
  2035  005B78  6E03               	movwf	pinMode@type^0,c
  2036  005B7A  ECE7  F036         	call	_pinMode	;wreg free
  2037                           
  2038                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  2039  005B7E  0E00               	movlw	0
  2040  005B80  6E02               	movwf	(pinMode@pin+1)^0,c
  2041  005B82  0E1A               	movlw	26
  2042  005B84  6E01               	movwf	pinMode@pin^0,c
  2043  005B86  0E00               	movlw	0
  2044  005B88  6E04               	movwf	(pinMode@type+1)^0,c
  2045  005B8A  0E00               	movlw	0
  2046  005B8C  6E03               	movwf	pinMode@type^0,c
  2047  005B8E  ECE7  F036         	call	_pinMode	;wreg free
  2048  005B92  0012               	return		;funcret
  2049  005B94                     __end_of_rgbInit:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _qtdComidaLeitura *****************
  2053 ;; Defined at:
  2054 ;;		line 27 in file "newmain1.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  oldValue        4   34[COMRAM] unsigned long 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2068 ;;      Params:         0       0       0       0       0       0       0
  2069 ;;      Locals:         8       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0
  2071 ;;      Totals:         8       0       0       0       0       0       0
  2072 ;;Total ram usage:        8 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 6
  2075 ;; This function calls:
  2076 ;;		___lldiv
  2077 ;;		___llmod
  2078 ;;		___lmul
  2079 ;;		_adcRead
  2080 ;;		_lcdChar
  2081 ;;		_lcdPosition
  2082 ;;		_lcdString
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text10
  2089  006962                     __ptext10:
  2090                           	callstack 0
  2091  006962                     _qtdComidaLeitura:
  2092                           	callstack 24
  2093  006962                     
  2094                           ;newmain1.c: 28:     unsigned long int oldValue;;newmain1.c: 29:     potenc = adcRead(0)
      +                          ;
  2095  006962  0E00               	movlw	0
  2096  006964  6E02               	movwf	(adcRead@channel+1)^0,c
  2097  006966  0E00               	movlw	0
  2098  006968  6E01               	movwf	adcRead@channel^0,c
  2099  00696A  EC36  F02E         	call	_adcRead	;wreg free
  2100  00696E  C001  F04E         	movff	?_adcRead,_potenc
  2101  006972  C002  F04F         	movff	?_adcRead+1,_potenc+1
  2102  006976  0E00               	movlw	0
  2103  006978  BE4F               	btfsc	(_potenc+1)^0,7,c
  2104  00697A  0EFF               	movlw	-1
  2105  00697C  6E50               	movwf	(_potenc+2)^0,c
  2106  00697E  6E51               	movwf	(_potenc+3)^0,c
  2107  006980                     
  2108                           ;newmain1.c: 30:     if (oldValue != potenc) {
  2109  006980  504E               	movf	_potenc^0,w,c
  2110  006982  1823               	xorwf	qtdComidaLeitura@oldValue^0,w,c
  2111  006984  E10F               	bnz	u3150
  2112  006986  504F               	movf	(_potenc+1)^0,w,c
  2113  006988  1824               	xorwf	(qtdComidaLeitura@oldValue+1)^0,w,c
  2114  00698A  E10C               	bnz	u3150
  2115  00698C  5050               	movf	(_potenc+2)^0,w,c
  2116  00698E  1825               	xorwf	(qtdComidaLeitura@oldValue+2)^0,w,c
  2117  006990  E109               	bnz	u3150
  2118  006992  5051               	movf	(_potenc+3)^0,w,c
  2119  006994  1826               	xorwf	(qtdComidaLeitura@oldValue+3)^0,w,c
  2120  006996  B4D8               	btfsc	status,2,c
  2121  006998  EFD0  F034         	goto	u3151
  2122  00699C  EFD2  F034         	goto	u3150
  2123  0069A0                     u3151:
  2124  0069A0  EFC4  F035         	goto	l3262
  2125  0069A4                     u3150:
  2126  0069A4                     
  2127                           ;newmain1.c: 31:         lcdPosition(1, 7);
  2128  0069A4  0E00               	movlw	0
  2129  0069A6  6E10               	movwf	(lcdPosition@line+1)^0,c
  2130  0069A8  0E01               	movlw	1
  2131  0069AA  6E0F               	movwf	lcdPosition@line^0,c
  2132  0069AC  0E00               	movlw	0
  2133  0069AE  6E12               	movwf	(lcdPosition@col+1)^0,c
  2134  0069B0  0E07               	movlw	7
  2135  0069B2  6E11               	movwf	lcdPosition@col^0,c
  2136  0069B4  EC6F  F02D         	call	_lcdPosition	;wreg free
  2137  0069B8                     
  2138                           ;newmain1.c: 32:         lcdString("  Kg:");
  2139  0069B8  0EF3               	movlw	low STR_1
  2140  0069BA  6E0F               	movwf	lcdString@msg^0,c
  2141  0069BC  0E7F               	movlw	high STR_1
  2142  0069BE  6E10               	movwf	(lcdString@msg+1)^0,c
  2143  0069C0  EC5E  F02E         	call	_lcdString	;wreg free
  2144  0069C4                     
  2145                           ;newmain1.c: 34:         lcdChar((((200 * potenc) / 1023)) / 100 % 10 + 48);
  2146  0069C4  0EFF               	movlw	255
  2147  0069C6  6E11               	movwf	___lldiv@divisor^0,c
  2148  0069C8  0E03               	movlw	3
  2149  0069CA  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2150  0069CC  0E00               	movlw	0
  2151  0069CE  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2152  0069D0  0E00               	movlw	0
  2153  0069D2  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2154  0069D4  C04E  F001         	movff	_potenc,___lmul@multiplier
  2155  0069D8  C04F  F002         	movff	_potenc+1,___lmul@multiplier+1
  2156  0069DC  C050  F003         	movff	_potenc+2,___lmul@multiplier+2
  2157  0069E0  C051  F004         	movff	_potenc+3,___lmul@multiplier+3
  2158  0069E4  0EC8               	movlw	200
  2159  0069E6  6E05               	movwf	___lmul@multiplicand^0,c
  2160  0069E8  0E00               	movlw	0
  2161  0069EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2162  0069EC  0E00               	movlw	0
  2163  0069EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2164  0069F0  0E00               	movlw	0
  2165  0069F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2166  0069F4  EC75  F02F         	call	___lmul	;wreg free
  2167  0069F8  C001  F00D         	movff	?___lmul,___lldiv@dividend
  2168  0069FC  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  2169  006A00  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  2170  006A04  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  2171  006A08  EC7B  F030         	call	___lldiv	;wreg free
  2172  006A0C  C00D  F027         	movff	?___lldiv,_qtdComidaLeitura$1414
  2173  006A10  C00E  F028         	movff	?___lldiv+1,_qtdComidaLeitura$1414+1
  2174  006A14  C00F  F029         	movff	?___lldiv+2,_qtdComidaLeitura$1414+2
  2175  006A18  C010  F02A         	movff	?___lldiv+3,_qtdComidaLeitura$1414+3
  2176  006A1C                     
  2177                           ;newmain1.c: 34:         lcdChar((((200 * potenc) / 1023)) / 100 % 10 + 48);
  2178  006A1C  0E64               	movlw	100
  2179  006A1E  6E11               	movwf	___lldiv@divisor^0,c
  2180  006A20  0E00               	movlw	0
  2181  006A22  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2182  006A24  0E00               	movlw	0
  2183  006A26  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2184  006A28  0E00               	movlw	0
  2185  006A2A  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2186  006A2C  C027  F00D         	movff	_qtdComidaLeitura$1414,___lldiv@dividend
  2187  006A30  C028  F00E         	movff	_qtdComidaLeitura$1414+1,___lldiv@dividend+1
  2188  006A34  C029  F00F         	movff	_qtdComidaLeitura$1414+2,___lldiv@dividend+2
  2189  006A38  C02A  F010         	movff	_qtdComidaLeitura$1414+3,___lldiv@dividend+3
  2190  006A3C  EC7B  F030         	call	___lldiv	;wreg free
  2191  006A40  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  2192  006A44  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  2193  006A48  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  2194  006A4C  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  2195  006A50  0E0A               	movlw	10
  2196  006A52  6E1E               	movwf	___llmod@divisor^0,c
  2197  006A54  0E00               	movlw	0
  2198  006A56  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2199  006A58  0E00               	movlw	0
  2200  006A5A  6E20               	movwf	(___llmod@divisor+2)^0,c
  2201  006A5C  0E00               	movlw	0
  2202  006A5E  6E21               	movwf	(___llmod@divisor+3)^0,c
  2203  006A60  ECE6  F02F         	call	___llmod	;wreg free
  2204  006A64  501A               	movf	?___llmod^0,w,c
  2205  006A66  0F30               	addlw	48
  2206  006A68  ECB6  F02C         	call	_lcdChar
  2207  006A6C                     
  2208                           ;newmain1.c: 35:         lcdChar((((200 * potenc) / 1023)) / 10 % 10 + 48);
  2209  006A6C  0EFF               	movlw	255
  2210  006A6E  6E11               	movwf	___lldiv@divisor^0,c
  2211  006A70  0E03               	movlw	3
  2212  006A72  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2213  006A74  0E00               	movlw	0
  2214  006A76  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2215  006A78  0E00               	movlw	0
  2216  006A7A  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2217  006A7C  C04E  F001         	movff	_potenc,___lmul@multiplier
  2218  006A80  C04F  F002         	movff	_potenc+1,___lmul@multiplier+1
  2219  006A84  C050  F003         	movff	_potenc+2,___lmul@multiplier+2
  2220  006A88  C051  F004         	movff	_potenc+3,___lmul@multiplier+3
  2221  006A8C  0EC8               	movlw	200
  2222  006A8E  6E05               	movwf	___lmul@multiplicand^0,c
  2223  006A90  0E00               	movlw	0
  2224  006A92  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2225  006A94  0E00               	movlw	0
  2226  006A96  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2227  006A98  0E00               	movlw	0
  2228  006A9A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2229  006A9C  EC75  F02F         	call	___lmul	;wreg free
  2230  006AA0  C001  F00D         	movff	?___lmul,___lldiv@dividend
  2231  006AA4  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  2232  006AA8  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  2233  006AAC  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  2234  006AB0  EC7B  F030         	call	___lldiv	;wreg free
  2235  006AB4  C00D  F027         	movff	?___lldiv,_qtdComidaLeitura$1414
  2236  006AB8  C00E  F028         	movff	?___lldiv+1,_qtdComidaLeitura$1414+1
  2237  006ABC  C00F  F029         	movff	?___lldiv+2,_qtdComidaLeitura$1414+2
  2238  006AC0  C010  F02A         	movff	?___lldiv+3,_qtdComidaLeitura$1414+3
  2239  006AC4                     
  2240                           ;newmain1.c: 35:         lcdChar((((200 * potenc) / 1023)) / 10 % 10 + 48);
  2241  006AC4  0E0A               	movlw	10
  2242  006AC6  6E11               	movwf	___lldiv@divisor^0,c
  2243  006AC8  0E00               	movlw	0
  2244  006ACA  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2245  006ACC  0E00               	movlw	0
  2246  006ACE  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2247  006AD0  0E00               	movlw	0
  2248  006AD2  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2249  006AD4  C027  F00D         	movff	_qtdComidaLeitura$1414,___lldiv@dividend
  2250  006AD8  C028  F00E         	movff	_qtdComidaLeitura$1414+1,___lldiv@dividend+1
  2251  006ADC  C029  F00F         	movff	_qtdComidaLeitura$1414+2,___lldiv@dividend+2
  2252  006AE0  C02A  F010         	movff	_qtdComidaLeitura$1414+3,___lldiv@dividend+3
  2253  006AE4  EC7B  F030         	call	___lldiv	;wreg free
  2254  006AE8  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  2255  006AEC  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  2256  006AF0  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  2257  006AF4  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  2258  006AF8  0E0A               	movlw	10
  2259  006AFA  6E1E               	movwf	___llmod@divisor^0,c
  2260  006AFC  0E00               	movlw	0
  2261  006AFE  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2262  006B00  0E00               	movlw	0
  2263  006B02  6E20               	movwf	(___llmod@divisor+2)^0,c
  2264  006B04  0E00               	movlw	0
  2265  006B06  6E21               	movwf	(___llmod@divisor+3)^0,c
  2266  006B08  ECE6  F02F         	call	___llmod	;wreg free
  2267  006B0C  501A               	movf	?___llmod^0,w,c
  2268  006B0E  0F30               	addlw	48
  2269  006B10  ECB6  F02C         	call	_lcdChar
  2270  006B14                     
  2271                           ;newmain1.c: 36:         lcdChar((((200 * potenc) / 1023)) % 10 + 48);
  2272  006B14  0EFF               	movlw	255
  2273  006B16  6E11               	movwf	___lldiv@divisor^0,c
  2274  006B18  0E03               	movlw	3
  2275  006B1A  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2276  006B1C  0E00               	movlw	0
  2277  006B1E  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2278  006B20  0E00               	movlw	0
  2279  006B22  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2280  006B24  C04E  F001         	movff	_potenc,___lmul@multiplier
  2281  006B28  C04F  F002         	movff	_potenc+1,___lmul@multiplier+1
  2282  006B2C  C050  F003         	movff	_potenc+2,___lmul@multiplier+2
  2283  006B30  C051  F004         	movff	_potenc+3,___lmul@multiplier+3
  2284  006B34  0EC8               	movlw	200
  2285  006B36  6E05               	movwf	___lmul@multiplicand^0,c
  2286  006B38  0E00               	movlw	0
  2287  006B3A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2288  006B3C  0E00               	movlw	0
  2289  006B3E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2290  006B40  0E00               	movlw	0
  2291  006B42  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2292  006B44  EC75  F02F         	call	___lmul	;wreg free
  2293  006B48  C001  F00D         	movff	?___lmul,___lldiv@dividend
  2294  006B4C  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  2295  006B50  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  2296  006B54  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  2297  006B58  EC7B  F030         	call	___lldiv	;wreg free
  2298  006B5C  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  2299  006B60  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  2300  006B64  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  2301  006B68  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  2302  006B6C  0E0A               	movlw	10
  2303  006B6E  6E1E               	movwf	___llmod@divisor^0,c
  2304  006B70  0E00               	movlw	0
  2305  006B72  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2306  006B74  0E00               	movlw	0
  2307  006B76  6E20               	movwf	(___llmod@divisor+2)^0,c
  2308  006B78  0E00               	movlw	0
  2309  006B7A  6E21               	movwf	(___llmod@divisor+3)^0,c
  2310  006B7C  ECE6  F02F         	call	___llmod	;wreg free
  2311  006B80  501A               	movf	?___llmod^0,w,c
  2312  006B82  0F30               	addlw	48
  2313  006B84  ECB6  F02C         	call	_lcdChar
  2314  006B88                     l3262:
  2315  006B88  0012               	return		;funcret
  2316  006B8A                     __end_of_qtdComidaLeitura:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _adcRead *****************
  2320 ;; Defined at:
  2321 ;;		line 38 in file "adc.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  channel         2    0[COMRAM] unsigned int 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  ADvalor         2    2[COMRAM] unsigned int 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2    0[COMRAM] int 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2335 ;;      Params:         2       0       0       0       0       0       0
  2336 ;;      Locals:         2       0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0
  2338 ;;      Totals:         4       0       0       0       0       0       0
  2339 ;;Total ram usage:        4 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_qtdComidaLeitura
  2345 ;;		_serial
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text11
  2350  005C6C                     __ptext11:
  2351                           	callstack 0
  2352  005C6C                     _adcRead:
  2353                           	callstack 29
  2354  005C6C                     
  2355                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  2356  005C6C  0EC3               	movlw	195
  2357  005C6E  16C2               	andwf	194,f,c	;volatile
  2358                           
  2359                           ;adc.c: 41:     if (channel < 3) {
  2360  005C70  5002               	movf	(adcRead@channel+1)^0,w,c
  2361  005C72  E107               	bnz	u2761
  2362  005C74  0E03               	movlw	3
  2363  005C76  5C01               	subwf	adcRead@channel^0,w,c
  2364  005C78  B0D8               	btfsc	status,0,c
  2365  005C7A  EF41  F02E         	goto	u2761
  2366  005C7E  EF43  F02E         	goto	u2760
  2367  005C82                     u2761:
  2368  005C82  EF47  F02E         	goto	l2980
  2369  005C86                     u2760:
  2370  005C86                     
  2371                           ;adc.c: 42:         ADCON0 |= channel << 2;
  2372  005C86  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  2373  005C88  46E8               	rlncf	wreg,f,c
  2374  005C8A  0BFC               	andlw	252
  2375  005C8C  12C2               	iorwf	194,f,c	;volatile
  2376  005C8E                     l2980:
  2377                           
  2378                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  2379  005C8E  82C2               	bsf	194,1,c	;volatile
  2380  005C90                     l19:
  2381  005C90  B2C2               	btfsc	194,1,c	;volatile
  2382  005C92  EF4D  F02E         	goto	u2771
  2383  005C96  EF4F  F02E         	goto	u2770
  2384  005C9A                     u2771:
  2385  005C9A  EF48  F02E         	goto	l19
  2386  005C9E                     u2770:
  2387  005C9E                     
  2388                           ;adc.c: 49:     ADvalor = ADRESH;
  2389  005C9E  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  2390  005CA2  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  2391  005CA4                     
  2392                           ;adc.c: 50:     ADvalor <<= 8;
  2393  005CA4  5003               	movf	adcRead@ADvalor^0,w,c
  2394  005CA6  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  2395  005CA8  6A03               	clrf	adcRead@ADvalor^0,c
  2396  005CAA                     
  2397                           ;adc.c: 51:     ADvalor += ADRESL;
  2398  005CAA  50C3               	movf	195,w,c	;volatile
  2399  005CAC  2603               	addwf	adcRead@ADvalor^0,f,c
  2400  005CAE  0E00               	movlw	0
  2401  005CB0  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  2402  005CB2                     
  2403                           ;adc.c: 52:     return ADvalor;
  2404  005CB2  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  2405  005CB6  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  2406  005CBA  0012               	return		;funcret
  2407  005CBC                     __end_of_adcRead:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _leituraTeclas *****************
  2411 ;; Defined at:
  2412 ;;		line 81 in file "newmain1.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  tecla           1   46[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2426 ;;      Params:         0       0       0       0       0       0       0
  2427 ;;      Locals:         1       0       0       0       0       0       0
  2428 ;;      Temps:          2       0       0       0       0       0       0
  2429 ;;      Totals:         3       0       0       0       0       0       0
  2430 ;;Total ram usage:        3 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 6
  2433 ;; This function calls:
  2434 ;;		_kpDebounce
  2435 ;;		_kpRead
  2436 ;;		_kpReadKey
  2437 ;;		_lcdCommand
  2438 ;;		_lcdPosition
  2439 ;;		_lcdString
  2440 ;;		_relogio
  2441 ;;		_turnOff
  2442 ;;		_turnOn
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text12
  2449  00726A                     __ptext12:
  2450                           	callstack 0
  2451  00726A                     _leituraTeclas:
  2452                           	callstack 24
  2453  00726A                     
  2454                           ;newmain1.c: 82:     unsigned char tecla;;newmain1.c: 83:     kpDebounce();
  2455  00726A  EC08  F032         	call	_kpDebounce	;wreg free
  2456                           
  2457                           ;newmain1.c: 84:     if (kpRead() != tecla) {
  2458  00726E  502F               	movf	leituraTeclas@tecla^0,w,c
  2459  007270  6E2D               	movwf	??_leituraTeclas^0,c
  2460  007272  6A2E               	clrf	(??_leituraTeclas+1)^0,c
  2461  007274  EC77  F02C         	call	_kpRead	;wreg free
  2462  007278  502D               	movf	??_leituraTeclas^0,w,c
  2463  00727A  1801               	xorwf	?_kpRead^0,w,c
  2464  00727C  E109               	bnz	u3160
  2465  00727E  502E               	movf	(??_leituraTeclas+1)^0,w,c
  2466  007280  1802               	xorwf	(?_kpRead+1)^0,w,c
  2467  007282  B4D8               	btfsc	status,2,c
  2468  007284  EF46  F039         	goto	u3161
  2469  007288  EF48  F039         	goto	u3160
  2470  00728C                     u3161:
  2471  00728C  EF09  F03B         	goto	l538
  2472  007290                     u3160:
  2473  007290  EC77  F02C         	call	_kpRead	;wreg free
  2474                           
  2475                           ;newmain1.c: 87:         switch (kpReadKey()) {
  2476  007294  EFDF  F03A         	goto	l3386
  2477  007298                     l3268:
  2478                           
  2479                           ;newmain1.c: 90:                 PORTD = 0b00000011;
  2480  007298  0E03               	movlw	3
  2481  00729A  6E83               	movwf	131,c	;volatile
  2482  00729C                     
  2483                           ;newmain1.c: 91:                 lcdCommand(0x80);
  2484  00729C  0E80               	movlw	128
  2485  00729E  ECA7  F02C         	call	_lcdCommand
  2486  0072A2                     
  2487                           ;newmain1.c: 92:                 lcdString("CAVALOS   ");
  2488  0072A2  0E17               	movlw	low STR_2
  2489  0072A4  6E0F               	movwf	lcdString@msg^0,c
  2490  0072A6  0E7F               	movlw	high STR_2
  2491  0072A8  6E10               	movwf	(lcdString@msg+1)^0,c
  2492  0072AA  EC5E  F02E         	call	_lcdString	;wreg free
  2493  0072AE                     
  2494                           ;newmain1.c: 93:                 lcdCommand(0xC0);
  2495  0072AE  0EC0               	movlw	192
  2496  0072B0  ECA7  F02C         	call	_lcdCommand
  2497  0072B4                     
  2498                           ;newmain1.c: 94:                 lcdPosition(0, 7);
  2499  0072B4  0E00               	movlw	0
  2500  0072B6  6E10               	movwf	(lcdPosition@line+1)^0,c
  2501  0072B8  0E00               	movlw	0
  2502  0072BA  6E0F               	movwf	lcdPosition@line^0,c
  2503  0072BC  0E00               	movlw	0
  2504  0072BE  6E12               	movwf	(lcdPosition@col+1)^0,c
  2505  0072C0  0E07               	movlw	7
  2506  0072C2  6E11               	movwf	lcdPosition@col^0,c
  2507  0072C4  EC6F  F02D         	call	_lcdPosition	;wreg free
  2508  0072C8                     
  2509                           ;newmain1.c: 95:                 lcdString("  L:190Kg");
  2510  0072C8  0E73               	movlw	low STR_3
  2511  0072CA  6E0F               	movwf	lcdString@msg^0,c
  2512  0072CC  0E7F               	movlw	high STR_3
  2513  0072CE  6E10               	movwf	(lcdString@msg+1)^0,c
  2514  0072D0  EC5E  F02E         	call	_lcdString	;wreg free
  2515  0072D4                     
  2516                           ;newmain1.c: 96:                 lcdPosition(1, 0);
  2517  0072D4  0E00               	movlw	0
  2518  0072D6  6E10               	movwf	(lcdPosition@line+1)^0,c
  2519  0072D8  0E01               	movlw	1
  2520  0072DA  6E0F               	movwf	lcdPosition@line^0,c
  2521  0072DC  0E00               	movlw	0
  2522  0072DE  6E12               	movwf	(lcdPosition@col+1)^0,c
  2523  0072E0  0E00               	movlw	0
  2524  0072E2  6E11               	movwf	lcdPosition@col^0,c
  2525  0072E4  EC6F  F02D         	call	_lcdPosition	;wreg free
  2526  0072E8                     
  2527                           ;newmain1.c: 97:                 lcdString("Qtd: 25");
  2528  0072E8  0ED4               	movlw	low STR_4
  2529  0072EA  6E0F               	movwf	lcdString@msg^0,c
  2530  0072EC  0E7F               	movlw	high STR_4
  2531  0072EE  6E10               	movwf	(lcdString@msg+1)^0,c
  2532  0072F0  EC5E  F02E         	call	_lcdString	;wreg free
  2533  0072F4                     
  2534                           ;newmain1.c: 98:                 comidaMax = 190;
  2535  0072F4  0EBE               	movlw	190
  2536  0072F6  6E3A               	movwf	_comidaMax^0,c
  2537  0072F8  0E00               	movlw	0
  2538  0072FA  6E3B               	movwf	(_comidaMax+1)^0,c
  2539  0072FC  0E00               	movlw	0
  2540  0072FE  6E3C               	movwf	(_comidaMax+2)^0,c
  2541  007300  0E00               	movlw	0
  2542  007302  6E3D               	movwf	(_comidaMax+3)^0,c
  2543  007304                     
  2544                           ;newmain1.c: 99:                 tempoParaEncher = 18000;
  2545  007304  0E46               	movlw	70
  2546  007306  6E3F               	movwf	(_tempoParaEncher+1)^0,c
  2547  007308  0E50               	movlw	80
  2548  00730A  6E3E               	movwf	_tempoParaEncher^0,c
  2549                           
  2550                           ;newmain1.c: 100:                 break;
  2551  00730C  EF09  F03B         	goto	l538
  2552  007310                     l3288:
  2553                           
  2554                           ;newmain1.c: 103:                 lcdCommand(0x80);
  2555  007310  0E80               	movlw	128
  2556  007312  ECA7  F02C         	call	_lcdCommand
  2557  007316                     
  2558                           ;newmain1.c: 104:                 lcdString("VACAS   ");
  2559  007316  0E7D               	movlw	low STR_5
  2560  007318  6E0F               	movwf	lcdString@msg^0,c
  2561  00731A  0E7F               	movlw	high STR_5
  2562  00731C  6E10               	movwf	(lcdString@msg+1)^0,c
  2563  00731E  EC5E  F02E         	call	_lcdString	;wreg free
  2564  007322                     
  2565                           ;newmain1.c: 105:                 lcdCommand(0xC0);
  2566  007322  0EC0               	movlw	192
  2567  007324  ECA7  F02C         	call	_lcdCommand
  2568  007328                     
  2569                           ;newmain1.c: 106:                 lcdPosition(0, 7);
  2570  007328  0E00               	movlw	0
  2571  00732A  6E10               	movwf	(lcdPosition@line+1)^0,c
  2572  00732C  0E00               	movlw	0
  2573  00732E  6E0F               	movwf	lcdPosition@line^0,c
  2574  007330  0E00               	movlw	0
  2575  007332  6E12               	movwf	(lcdPosition@col+1)^0,c
  2576  007334  0E07               	movlw	7
  2577  007336  6E11               	movwf	lcdPosition@col^0,c
  2578  007338  EC6F  F02D         	call	_lcdPosition	;wreg free
  2579  00733C                     
  2580                           ;newmain1.c: 107:                 lcdString("  L:150Kg");
  2581  00733C  0E69               	movlw	low STR_6
  2582  00733E  6E0F               	movwf	lcdString@msg^0,c
  2583  007340  0E7F               	movlw	high STR_6
  2584  007342  6E10               	movwf	(lcdString@msg+1)^0,c
  2585  007344  EC5E  F02E         	call	_lcdString	;wreg free
  2586                           
  2587                           ;newmain1.c: 108:                 lcdPosition(1, 0);
  2588  007348  0E00               	movlw	0
  2589  00734A  6E10               	movwf	(lcdPosition@line+1)^0,c
  2590  00734C  0E01               	movlw	1
  2591  00734E  6E0F               	movwf	lcdPosition@line^0,c
  2592  007350  0E00               	movlw	0
  2593  007352  6E12               	movwf	(lcdPosition@col+1)^0,c
  2594  007354  0E00               	movlw	0
  2595  007356  6E11               	movwf	lcdPosition@col^0,c
  2596  007358  EC6F  F02D         	call	_lcdPosition	;wreg free
  2597  00735C                     
  2598                           ;newmain1.c: 109:                 lcdString("Qtd: 15");
  2599  00735C  0ECC               	movlw	low STR_7
  2600  00735E  6E0F               	movwf	lcdString@msg^0,c
  2601  007360  0E7F               	movlw	high STR_7
  2602  007362  6E10               	movwf	(lcdString@msg+1)^0,c
  2603  007364  EC5E  F02E         	call	_lcdString	;wreg free
  2604  007368                     
  2605                           ;newmain1.c: 110:                 comidaMax = 150;
  2606  007368  0E96               	movlw	150
  2607  00736A  6E3A               	movwf	_comidaMax^0,c
  2608  00736C  0E00               	movlw	0
  2609  00736E  6E3B               	movwf	(_comidaMax+1)^0,c
  2610  007370  0E00               	movlw	0
  2611  007372  6E3C               	movwf	(_comidaMax+2)^0,c
  2612  007374  0E00               	movlw	0
  2613  007376  6E3D               	movwf	(_comidaMax+3)^0,c
  2614  007378                     
  2615                           ;newmain1.c: 111:                 tempoParaEncher = 15000;
  2616  007378  0E3A               	movlw	58
  2617  00737A  6E3F               	movwf	(_tempoParaEncher+1)^0,c
  2618  00737C  0E98               	movlw	152
  2619  00737E  6E3E               	movwf	_tempoParaEncher^0,c
  2620                           
  2621                           ;newmain1.c: 112:                 break;
  2622  007380  EF09  F03B         	goto	l538
  2623  007384                     l3304:
  2624                           
  2625                           ;newmain1.c: 115:                 lcdCommand(0x80);
  2626  007384  0E80               	movlw	128
  2627  007386  ECA7  F02C         	call	_lcdCommand
  2628  00738A                     
  2629                           ;newmain1.c: 116:                 lcdString("PORCOS  ");
  2630  00738A  0E86               	movlw	low STR_8
  2631  00738C  6E0F               	movwf	lcdString@msg^0,c
  2632  00738E  0E7F               	movlw	high STR_8
  2633  007390  6E10               	movwf	(lcdString@msg+1)^0,c
  2634  007392  EC5E  F02E         	call	_lcdString	;wreg free
  2635  007396                     
  2636                           ;newmain1.c: 117:                 lcdCommand(0xC0);
  2637  007396  0EC0               	movlw	192
  2638  007398  ECA7  F02C         	call	_lcdCommand
  2639  00739C                     
  2640                           ;newmain1.c: 118:                 lcdPosition(0, 7);
  2641  00739C  0E00               	movlw	0
  2642  00739E  6E10               	movwf	(lcdPosition@line+1)^0,c
  2643  0073A0  0E00               	movlw	0
  2644  0073A2  6E0F               	movwf	lcdPosition@line^0,c
  2645  0073A4  0E00               	movlw	0
  2646  0073A6  6E12               	movwf	(lcdPosition@col+1)^0,c
  2647  0073A8  0E07               	movlw	7
  2648  0073AA  6E11               	movwf	lcdPosition@col^0,c
  2649  0073AC  EC6F  F02D         	call	_lcdPosition	;wreg free
  2650  0073B0                     
  2651                           ;newmain1.c: 119:                 lcdString("  L:110Kg");
  2652  0073B0  0E41               	movlw	low STR_9
  2653  0073B2  6E0F               	movwf	lcdString@msg^0,c
  2654  0073B4  0E7F               	movlw	high STR_9
  2655  0073B6  6E10               	movwf	(lcdString@msg+1)^0,c
  2656  0073B8  EC5E  F02E         	call	_lcdString	;wreg free
  2657                           
  2658                           ;newmain1.c: 120:                 lcdPosition(1, 0);
  2659  0073BC  0E00               	movlw	0
  2660  0073BE  6E10               	movwf	(lcdPosition@line+1)^0,c
  2661  0073C0  0E01               	movlw	1
  2662  0073C2  6E0F               	movwf	lcdPosition@line^0,c
  2663  0073C4  0E00               	movlw	0
  2664  0073C6  6E12               	movwf	(lcdPosition@col+1)^0,c
  2665  0073C8  0E00               	movlw	0
  2666  0073CA  6E11               	movwf	lcdPosition@col^0,c
  2667  0073CC  EC6F  F02D         	call	_lcdPosition	;wreg free
  2668  0073D0                     
  2669                           ;newmain1.c: 121:                 lcdString("Qtd: 40");
  2670  0073D0  0EC4               	movlw	low STR_10
  2671  0073D2  6E0F               	movwf	lcdString@msg^0,c
  2672  0073D4  0E7F               	movlw	high STR_10
  2673  0073D6  6E10               	movwf	(lcdString@msg+1)^0,c
  2674  0073D8  EC5E  F02E         	call	_lcdString	;wreg free
  2675  0073DC                     
  2676                           ;newmain1.c: 122:                 comidaMax = 110;
  2677  0073DC  0E6E               	movlw	110
  2678  0073DE  6E3A               	movwf	_comidaMax^0,c
  2679  0073E0  0E00               	movlw	0
  2680  0073E2  6E3B               	movwf	(_comidaMax+1)^0,c
  2681  0073E4  0E00               	movlw	0
  2682  0073E6  6E3C               	movwf	(_comidaMax+2)^0,c
  2683  0073E8  0E00               	movlw	0
  2684  0073EA  6E3D               	movwf	(_comidaMax+3)^0,c
  2685  0073EC                     
  2686                           ;newmain1.c: 123:                 tempoParaEncher = 13000;
  2687  0073EC  0E32               	movlw	50
  2688  0073EE  6E3F               	movwf	(_tempoParaEncher+1)^0,c
  2689  0073F0  0EC8               	movlw	200
  2690  0073F2  6E3E               	movwf	_tempoParaEncher^0,c
  2691                           
  2692                           ;newmain1.c: 124:                 break;
  2693  0073F4  EF09  F03B         	goto	l538
  2694  0073F8                     l3320:
  2695                           
  2696                           ;newmain1.c: 127:                 lcdCommand(0x80);
  2697  0073F8  0E80               	movlw	128
  2698  0073FA  ECA7  F02C         	call	_lcdCommand
  2699  0073FE                     
  2700                           ;newmain1.c: 128:                 lcdString("GALINHAS  ");
  2701  0073FE  0E22               	movlw	low STR_11
  2702  007400  6E0F               	movwf	lcdString@msg^0,c
  2703  007402  0E7F               	movlw	high STR_11
  2704  007404  6E10               	movwf	(lcdString@msg+1)^0,c
  2705  007406  EC5E  F02E         	call	_lcdString	;wreg free
  2706  00740A                     
  2707                           ;newmain1.c: 129:                 lcdCommand(0xC0);
  2708  00740A  0EC0               	movlw	192
  2709  00740C  ECA7  F02C         	call	_lcdCommand
  2710  007410                     
  2711                           ;newmain1.c: 130:                 lcdPosition(0, 7);
  2712  007410  0E00               	movlw	0
  2713  007412  6E10               	movwf	(lcdPosition@line+1)^0,c
  2714  007414  0E00               	movlw	0
  2715  007416  6E0F               	movwf	lcdPosition@line^0,c
  2716  007418  0E00               	movlw	0
  2717  00741A  6E12               	movwf	(lcdPosition@col+1)^0,c
  2718  00741C  0E07               	movlw	7
  2719  00741E  6E11               	movwf	lcdPosition@col^0,c
  2720  007420  EC6F  F02D         	call	_lcdPosition	;wreg free
  2721  007424                     
  2722                           ;newmain1.c: 131:                 lcdString("  L: 30Kg");
  2723  007424  0E55               	movlw	low STR_12
  2724  007426  6E0F               	movwf	lcdString@msg^0,c
  2725  007428  0E7F               	movlw	high STR_12
  2726  00742A  6E10               	movwf	(lcdString@msg+1)^0,c
  2727  00742C  EC5E  F02E         	call	_lcdString	;wreg free
  2728                           
  2729                           ;newmain1.c: 132:                 lcdPosition(1, 0);
  2730  007430  0E00               	movlw	0
  2731  007432  6E10               	movwf	(lcdPosition@line+1)^0,c
  2732  007434  0E01               	movlw	1
  2733  007436  6E0F               	movwf	lcdPosition@line^0,c
  2734  007438  0E00               	movlw	0
  2735  00743A  6E12               	movwf	(lcdPosition@col+1)^0,c
  2736  00743C  0E00               	movlw	0
  2737  00743E  6E11               	movwf	lcdPosition@col^0,c
  2738  007440  EC6F  F02D         	call	_lcdPosition	;wreg free
  2739  007444                     
  2740                           ;newmain1.c: 133:                 lcdString("Qtd: 90 ");
  2741  007444  0EAA               	movlw	low STR_13
  2742  007446  6E0F               	movwf	lcdString@msg^0,c
  2743  007448  0E7F               	movlw	high STR_13
  2744  00744A  6E10               	movwf	(lcdString@msg+1)^0,c
  2745  00744C  EC5E  F02E         	call	_lcdString	;wreg free
  2746  007450                     
  2747                           ;newmain1.c: 134:                 comidaMax = 30;
  2748  007450  0E1E               	movlw	30
  2749  007452  6E3A               	movwf	_comidaMax^0,c
  2750  007454  0E00               	movlw	0
  2751  007456  6E3B               	movwf	(_comidaMax+1)^0,c
  2752  007458  0E00               	movlw	0
  2753  00745A  6E3C               	movwf	(_comidaMax+2)^0,c
  2754  00745C  0E00               	movlw	0
  2755  00745E  6E3D               	movwf	(_comidaMax+3)^0,c
  2756  007460                     
  2757                           ;newmain1.c: 135:                 tempoParaEncher = 2000;
  2758  007460  0E07               	movlw	7
  2759  007462  6E3F               	movwf	(_tempoParaEncher+1)^0,c
  2760  007464  0ED0               	movlw	208
  2761  007466  6E3E               	movwf	_tempoParaEncher^0,c
  2762                           
  2763                           ;newmain1.c: 136:                 break;
  2764  007468  EF09  F03B         	goto	l538
  2765  00746C                     l3336:
  2766                           
  2767                           ;newmain1.c: 139:                 lcdCommand(0x80);
  2768  00746C  0E80               	movlw	128
  2769  00746E  ECA7  F02C         	call	_lcdCommand
  2770  007472                     
  2771                           ;newmain1.c: 140:                 lcdString("OVELHAS  ");
  2772  007472  0E2D               	movlw	low STR_14
  2773  007474  6E0F               	movwf	lcdString@msg^0,c
  2774  007476  0E7F               	movlw	high STR_14
  2775  007478  6E10               	movwf	(lcdString@msg+1)^0,c
  2776  00747A  EC5E  F02E         	call	_lcdString	;wreg free
  2777  00747E                     
  2778                           ;newmain1.c: 141:                 lcdCommand(0xC0);
  2779  00747E  0EC0               	movlw	192
  2780  007480  ECA7  F02C         	call	_lcdCommand
  2781  007484                     
  2782                           ;newmain1.c: 142:                 lcdPosition(0, 7);
  2783  007484  0E00               	movlw	0
  2784  007486  6E10               	movwf	(lcdPosition@line+1)^0,c
  2785  007488  0E00               	movlw	0
  2786  00748A  6E0F               	movwf	lcdPosition@line^0,c
  2787  00748C  0E00               	movlw	0
  2788  00748E  6E12               	movwf	(lcdPosition@col+1)^0,c
  2789  007490  0E07               	movlw	7
  2790  007492  6E11               	movwf	lcdPosition@col^0,c
  2791  007494  EC6F  F02D         	call	_lcdPosition	;wreg free
  2792  007498                     
  2793                           ;newmain1.c: 143:                 lcdString("  L: 50Kg");
  2794  007498  0E5F               	movlw	low STR_15
  2795  00749A  6E0F               	movwf	lcdString@msg^0,c
  2796  00749C  0E7F               	movlw	high STR_15
  2797  00749E  6E10               	movwf	(lcdString@msg+1)^0,c
  2798  0074A0  EC5E  F02E         	call	_lcdString	;wreg free
  2799                           
  2800                           ;newmain1.c: 144:                 lcdPosition(1, 0);
  2801  0074A4  0E00               	movlw	0
  2802  0074A6  6E10               	movwf	(lcdPosition@line+1)^0,c
  2803  0074A8  0E01               	movlw	1
  2804  0074AA  6E0F               	movwf	lcdPosition@line^0,c
  2805  0074AC  0E00               	movlw	0
  2806  0074AE  6E12               	movwf	(lcdPosition@col+1)^0,c
  2807  0074B0  0E00               	movlw	0
  2808  0074B2  6E11               	movwf	lcdPosition@col^0,c
  2809  0074B4  EC6F  F02D         	call	_lcdPosition	;wreg free
  2810  0074B8                     
  2811                           ;newmain1.c: 145:                 lcdString("Qtd: 10 ");
  2812  0074B8  0E98               	movlw	low STR_16
  2813  0074BA  6E0F               	movwf	lcdString@msg^0,c
  2814  0074BC  0E7F               	movlw	high STR_16
  2815  0074BE  6E10               	movwf	(lcdString@msg+1)^0,c
  2816  0074C0  EC5E  F02E         	call	_lcdString	;wreg free
  2817  0074C4                     
  2818                           ;newmain1.c: 146:                 comidaMax = 50;
  2819  0074C4  0E32               	movlw	50
  2820  0074C6  6E3A               	movwf	_comidaMax^0,c
  2821  0074C8  0E00               	movlw	0
  2822  0074CA  6E3B               	movwf	(_comidaMax+1)^0,c
  2823  0074CC  0E00               	movlw	0
  2824  0074CE  6E3C               	movwf	(_comidaMax+2)^0,c
  2825  0074D0  0E00               	movlw	0
  2826  0074D2  6E3D               	movwf	(_comidaMax+3)^0,c
  2827  0074D4                     
  2828                           ;newmain1.c: 147:                 tempoParaEncher = 4000;
  2829  0074D4  0E0F               	movlw	15
  2830  0074D6  6E3F               	movwf	(_tempoParaEncher+1)^0,c
  2831  0074D8  0EA0               	movlw	160
  2832  0074DA  6E3E               	movwf	_tempoParaEncher^0,c
  2833                           
  2834                           ;newmain1.c: 148:                 break;
  2835  0074DC  EF09  F03B         	goto	l538
  2836  0074E0                     l3352:
  2837                           
  2838                           ;newmain1.c: 151:                 lcdCommand(0x80);
  2839  0074E0  0E80               	movlw	128
  2840  0074E2  ECA7  F02C         	call	_lcdCommand
  2841  0074E6                     
  2842                           ;newmain1.c: 152:                 lcdString("TOUROS  ");
  2843  0074E6  0E8F               	movlw	low STR_17
  2844  0074E8  6E0F               	movwf	lcdString@msg^0,c
  2845  0074EA  0E7F               	movlw	high STR_17
  2846  0074EC  6E10               	movwf	(lcdString@msg+1)^0,c
  2847  0074EE  EC5E  F02E         	call	_lcdString	;wreg free
  2848  0074F2                     
  2849                           ;newmain1.c: 153:                 lcdCommand(0xC0);
  2850  0074F2  0EC0               	movlw	192
  2851  0074F4  ECA7  F02C         	call	_lcdCommand
  2852  0074F8                     
  2853                           ;newmain1.c: 154:                 lcdPosition(0, 7);
  2854  0074F8  0E00               	movlw	0
  2855  0074FA  6E10               	movwf	(lcdPosition@line+1)^0,c
  2856  0074FC  0E00               	movlw	0
  2857  0074FE  6E0F               	movwf	lcdPosition@line^0,c
  2858  007500  0E00               	movlw	0
  2859  007502  6E12               	movwf	(lcdPosition@col+1)^0,c
  2860  007504  0E07               	movlw	7
  2861  007506  6E11               	movwf	lcdPosition@col^0,c
  2862  007508  EC6F  F02D         	call	_lcdPosition	;wreg free
  2863  00750C                     
  2864                           ;newmain1.c: 155:                 lcdString("  L:120Kg");
  2865  00750C  0E4B               	movlw	low STR_18
  2866  00750E  6E0F               	movwf	lcdString@msg^0,c
  2867  007510  0E7F               	movlw	high STR_18
  2868  007512  6E10               	movwf	(lcdString@msg+1)^0,c
  2869  007514  EC5E  F02E         	call	_lcdString	;wreg free
  2870                           
  2871                           ;newmain1.c: 156:                 lcdPosition(1, 0);
  2872  007518  0E00               	movlw	0
  2873  00751A  6E10               	movwf	(lcdPosition@line+1)^0,c
  2874  00751C  0E01               	movlw	1
  2875  00751E  6E0F               	movwf	lcdPosition@line^0,c
  2876  007520  0E00               	movlw	0
  2877  007522  6E12               	movwf	(lcdPosition@col+1)^0,c
  2878  007524  0E00               	movlw	0
  2879  007526  6E11               	movwf	lcdPosition@col^0,c
  2880  007528  EC6F  F02D         	call	_lcdPosition	;wreg free
  2881  00752C                     
  2882                           ;newmain1.c: 157:                 lcdString("Qtd: 8 ");
  2883  00752C  0EBC               	movlw	low STR_19
  2884  00752E  6E0F               	movwf	lcdString@msg^0,c
  2885  007530  0E7F               	movlw	high STR_19
  2886  007532  6E10               	movwf	(lcdString@msg+1)^0,c
  2887  007534  EC5E  F02E         	call	_lcdString	;wreg free
  2888  007538                     
  2889                           ;newmain1.c: 158:                 comidaMax = 120;
  2890  007538  0E78               	movlw	120
  2891  00753A  6E3A               	movwf	_comidaMax^0,c
  2892  00753C  0E00               	movlw	0
  2893  00753E  6E3B               	movwf	(_comidaMax+1)^0,c
  2894  007540  0E00               	movlw	0
  2895  007542  6E3C               	movwf	(_comidaMax+2)^0,c
  2896  007544  0E00               	movlw	0
  2897  007546  6E3D               	movwf	(_comidaMax+3)^0,c
  2898  007548                     
  2899                           ;newmain1.c: 159:                 tempoParaEncher = 10000;
  2900  007548  0E27               	movlw	39
  2901  00754A  6E3F               	movwf	(_tempoParaEncher+1)^0,c
  2902  00754C  0E10               	movlw	16
  2903  00754E  6E3E               	movwf	_tempoParaEncher^0,c
  2904                           
  2905                           ;newmain1.c: 160:                 break;
  2906  007550  EF09  F03B         	goto	l538
  2907  007554                     l3368:
  2908                           
  2909                           ;newmain1.c: 163:                 turnOn(2);
  2910  007554  0E00               	movlw	0
  2911  007556  6E08               	movwf	(turnOn@led+1)^0,c
  2912  007558  0E02               	movlw	2
  2913  00755A  6E07               	movwf	turnOn@led^0,c
  2914  00755C  EC41  F02F         	call	_turnOn	;wreg free
  2915                           
  2916                           ;newmain1.c: 164:                 lcdCommand(0x80);
  2917  007560  0E80               	movlw	128
  2918  007562  ECA7  F02C         	call	_lcdCommand
  2919  007566                     
  2920                           ;newmain1.c: 165:                 lcdString("Enchendo o Cocho");
  2921  007566  0EF9               	movlw	low STR_20
  2922  007568  6E0F               	movwf	lcdString@msg^0,c
  2923  00756A  0E7E               	movlw	high STR_20
  2924  00756C  6E10               	movwf	(lcdString@msg+1)^0,c
  2925  00756E  EC5E  F02E         	call	_lcdString	;wreg free
  2926  007572                     
  2927                           ;newmain1.c: 166:                 lcdCommand(0xC0);
  2928  007572  0EC0               	movlw	192
  2929  007574  ECA7  F02C         	call	_lcdCommand
  2930  007578                     
  2931                           ;newmain1.c: 167:                 lcdPosition(1,0);
  2932  007578  0E00               	movlw	0
  2933  00757A  6E10               	movwf	(lcdPosition@line+1)^0,c
  2934  00757C  0E01               	movlw	1
  2935  00757E  6E0F               	movwf	lcdPosition@line^0,c
  2936  007580  0E00               	movlw	0
  2937  007582  6E12               	movwf	(lcdPosition@col+1)^0,c
  2938  007584  0E00               	movlw	0
  2939  007586  6E11               	movwf	lcdPosition@col^0,c
  2940  007588  EC6F  F02D         	call	_lcdPosition	;wreg free
  2941  00758C                     
  2942                           ;newmain1.c: 168:                 lcdString("Aguarde");
  2943  00758C  0EE4               	movlw	low STR_21
  2944  00758E  6E0F               	movwf	lcdString@msg^0,c
  2945  007590  0E7F               	movlw	high STR_21
  2946  007592  6E10               	movwf	(lcdString@msg+1)^0,c
  2947  007594  EC5E  F02E         	call	_lcdString	;wreg free
  2948  007598                     
  2949                           ;newmain1.c: 169:                 relogio();
  2950  007598  ECC5  F035         	call	_relogio	;wreg free
  2951  00759C                     
  2952                           ;newmain1.c: 170:                 lcdCommand(0x01);
  2953  00759C  0E01               	movlw	1
  2954  00759E  ECA7  F02C         	call	_lcdCommand
  2955                           
  2956                           ;newmain1.c: 171:                 lcdString("Cocho Cheio!");
  2957  0075A2  0E0A               	movlw	low STR_22
  2958  0075A4  6E0F               	movwf	lcdString@msg^0,c
  2959  0075A6  0E7F               	movlw	high STR_22
  2960  0075A8  6E10               	movwf	(lcdString@msg+1)^0,c
  2961  0075AA  EC5E  F02E         	call	_lcdString	;wreg free
  2962  0075AE                     
  2963                           ;newmain1.c: 172:                 turnOff(2);
  2964  0075AE  0E00               	movlw	0
  2965  0075B0  6E08               	movwf	(turnOff@led+1)^0,c
  2966  0075B2  0E02               	movlw	2
  2967  0075B4  6E07               	movwf	turnOff@led^0,c
  2968  0075B6  EC0D  F02F         	call	_turnOff	;wreg free
  2969                           
  2970                           ;newmain1.c: 173:                 break;
  2971  0075BA  EF09  F03B         	goto	l538
  2972  0075BE                     l3386:
  2973  0075BE  ECAA  F02F         	call	_kpReadKey	;wreg free
  2974  0075C2  6E2D               	movwf	??_leituraTeclas^0,c
  2975  0075C4  6A2E               	clrf	(??_leituraTeclas+1)^0,c
  2976                           
  2977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2978                           ; Switch size 1, requested type "simple"
  2979                           ; Number of cases is 1, Range of values is 0 to 0
  2980                           ; switch strategies available:
  2981                           ; Name         Instructions Cycles
  2982                           ; simple_byte            4     3 (average)
  2983                           ;	Chosen strategy is simple_byte
  2984  0075C6  502E               	movf	(??_leituraTeclas+1)^0,w,c
  2985  0075C8  0A00               	xorlw	0	; case 0
  2986  0075CA  B4D8               	btfsc	status,2,c
  2987  0075CC  EFEA  F03A         	goto	l3644
  2988  0075D0  EF09  F03B         	goto	l538
  2989  0075D4                     l3644:
  2990                           
  2991                           ; Switch size 1, requested type "simple"
  2992                           ; Number of cases is 7, Range of values is 65 to 88
  2993                           ; switch strategies available:
  2994                           ; Name         Instructions Cycles
  2995                           ; simple_byte           22    12 (average)
  2996                           ;	Chosen strategy is simple_byte
  2997  0075D4  502D               	movf	??_leituraTeclas^0,w,c
  2998  0075D6  0A41               	xorlw	65	; case 65
  2999  0075D8  B4D8               	btfsc	status,2,c
  3000  0075DA  EF70  F03A         	goto	l3352
  3001  0075DE  0A05               	xorlw	5	; case 68
  3002  0075E0  B4D8               	btfsc	status,2,c
  3003  0075E2  EFC2  F039         	goto	l3304
  3004  0075E6  0A08               	xorlw	8	; case 76
  3005  0075E8  B4D8               	btfsc	status,2,c
  3006  0075EA  EF88  F039         	goto	l3288
  3007  0075EE  0A1E               	xorlw	30	; case 82
  3008  0075F0  B4D8               	btfsc	status,2,c
  3009  0075F2  EFFC  F039         	goto	l3320
  3010  0075F6  0A01               	xorlw	1	; case 83
  3011  0075F8  B4D8               	btfsc	status,2,c
  3012  0075FA  EF36  F03A         	goto	l3336
  3013  0075FE  0A06               	xorlw	6	; case 85
  3014  007600  B4D8               	btfsc	status,2,c
  3015  007602  EF4C  F039         	goto	l3268
  3016  007606  0A0D               	xorlw	13	; case 88
  3017  007608  B4D8               	btfsc	status,2,c
  3018  00760A  EFAA  F03A         	goto	l3368
  3019  00760E  EF09  F03B         	goto	l538
  3020  007612                     l538:
  3021  007612  0012               	return		;funcret
  3022  007614                     __end_of_leituraTeclas:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function _turnOn *****************
  3026 ;; Defined at:
  3027 ;;		line 21 in file "rgb.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  led             2    6[COMRAM] int 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3041 ;;      Params:         2       0       0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0
  3044 ;;      Totals:         2       0       0       0       0       0       0
  3045 ;;Total ram usage:        2 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; Hardware stack levels required when called: 1
  3048 ;; This function calls:
  3049 ;;		_digitalWrite
  3050 ;; This function is called by:
  3051 ;;		_leituraTeclas
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text13
  3056  005E82                     __ptext13:
  3057                           	callstack 0
  3058  005E82                     _turnOn:
  3059                           	callstack 28
  3060  005E82                     
  3061                           ;rgb.c: 22:  if (led & 1) {
  3062  005E82  A007               	btfss	turnOn@led^0,0,c
  3063  005E84  EF46  F02F         	goto	u2931
  3064  005E88  EF48  F02F         	goto	u2930
  3065  005E8C                     u2931:
  3066  005E8C  EF52  F02F         	goto	l3056
  3067  005E90                     u2930:
  3068  005E90                     
  3069                           ;rgb.c: 23:   digitalWrite(PIN_D0, 1);
  3070  005E90  0E00               	movlw	0
  3071  005E92  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3072  005E94  0E18               	movlw	24
  3073  005E96  6E01               	movwf	digitalWrite@pin^0,c
  3074  005E98  0E00               	movlw	0
  3075  005E9A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3076  005E9C  0E01               	movlw	1
  3077  005E9E  6E03               	movwf	digitalWrite@value^0,c
  3078  005EA0  EC0E  F038         	call	_digitalWrite	;wreg free
  3079  005EA4                     l3056:
  3080                           
  3081                           ;rgb.c: 25:  if (led & 2) {
  3082  005EA4  A207               	btfss	turnOn@led^0,1,c
  3083  005EA6  EF57  F02F         	goto	u2941
  3084  005EAA  EF59  F02F         	goto	u2940
  3085  005EAE                     u2941:
  3086  005EAE  EF63  F02F         	goto	l3060
  3087  005EB2                     u2940:
  3088  005EB2                     
  3089                           ;rgb.c: 26:   digitalWrite(PIN_D1, 1);
  3090  005EB2  0E00               	movlw	0
  3091  005EB4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3092  005EB6  0E19               	movlw	25
  3093  005EB8  6E01               	movwf	digitalWrite@pin^0,c
  3094  005EBA  0E00               	movlw	0
  3095  005EBC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3096  005EBE  0E01               	movlw	1
  3097  005EC0  6E03               	movwf	digitalWrite@value^0,c
  3098  005EC2  EC0E  F038         	call	_digitalWrite	;wreg free
  3099  005EC6                     l3060:
  3100                           
  3101                           ;rgb.c: 28:  if (led & 4) {
  3102  005EC6  A407               	btfss	turnOn@led^0,2,c
  3103  005EC8  EF68  F02F         	goto	u2951
  3104  005ECC  EF6A  F02F         	goto	u2950
  3105  005ED0                     u2951:
  3106  005ED0  EF74  F02F         	goto	l327
  3107  005ED4                     u2950:
  3108  005ED4                     
  3109                           ;rgb.c: 29:   digitalWrite(PIN_D2, 1);
  3110  005ED4  0E00               	movlw	0
  3111  005ED6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3112  005ED8  0E1A               	movlw	26
  3113  005EDA  6E01               	movwf	digitalWrite@pin^0,c
  3114  005EDC  0E00               	movlw	0
  3115  005EDE  6E04               	movwf	(digitalWrite@value+1)^0,c
  3116  005EE0  0E01               	movlw	1
  3117  005EE2  6E03               	movwf	digitalWrite@value^0,c
  3118  005EE4  EC0E  F038         	call	_digitalWrite	;wreg free
  3119  005EE8                     l327:
  3120  005EE8  0012               	return		;funcret
  3121  005EEA                     __end_of_turnOn:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _turnOff *****************
  3125 ;; Defined at:
  3126 ;;		line 33 in file "rgb.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  led             2    6[COMRAM] int 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3140 ;;      Params:         2       0       0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0
  3143 ;;      Totals:         2       0       0       0       0       0       0
  3144 ;;Total ram usage:        2 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 1
  3147 ;; This function calls:
  3148 ;;		_digitalWrite
  3149 ;; This function is called by:
  3150 ;;		_leituraTeclas
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text14
  3155  005E1A                     __ptext14:
  3156                           	callstack 0
  3157  005E1A                     _turnOff:
  3158                           	callstack 28
  3159  005E1A                     
  3160                           ;rgb.c: 34:  if (led & 1) {
  3161  005E1A  A007               	btfss	turnOff@led^0,0,c
  3162  005E1C  EF12  F02F         	goto	u2961
  3163  005E20  EF14  F02F         	goto	u2960
  3164  005E24                     u2961:
  3165  005E24  EF1E  F02F         	goto	l3068
  3166  005E28                     u2960:
  3167  005E28                     
  3168                           ;rgb.c: 35:   digitalWrite(PIN_D0, 0);
  3169  005E28  0E00               	movlw	0
  3170  005E2A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3171  005E2C  0E18               	movlw	24
  3172  005E2E  6E01               	movwf	digitalWrite@pin^0,c
  3173  005E30  0E00               	movlw	0
  3174  005E32  6E04               	movwf	(digitalWrite@value+1)^0,c
  3175  005E34  0E00               	movlw	0
  3176  005E36  6E03               	movwf	digitalWrite@value^0,c
  3177  005E38  EC0E  F038         	call	_digitalWrite	;wreg free
  3178  005E3C                     l3068:
  3179                           
  3180                           ;rgb.c: 37:  if (led & 2) {
  3181  005E3C  A207               	btfss	turnOff@led^0,1,c
  3182  005E3E  EF23  F02F         	goto	u2971
  3183  005E42  EF25  F02F         	goto	u2970
  3184  005E46                     u2971:
  3185  005E46  EF2F  F02F         	goto	l3072
  3186  005E4A                     u2970:
  3187  005E4A                     
  3188                           ;rgb.c: 38:   digitalWrite(PIN_D1, 0);
  3189  005E4A  0E00               	movlw	0
  3190  005E4C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3191  005E4E  0E19               	movlw	25
  3192  005E50  6E01               	movwf	digitalWrite@pin^0,c
  3193  005E52  0E00               	movlw	0
  3194  005E54  6E04               	movwf	(digitalWrite@value+1)^0,c
  3195  005E56  0E00               	movlw	0
  3196  005E58  6E03               	movwf	digitalWrite@value^0,c
  3197  005E5A  EC0E  F038         	call	_digitalWrite	;wreg free
  3198  005E5E                     l3072:
  3199                           
  3200                           ;rgb.c: 40:  if (led & 4) {
  3201  005E5E  A407               	btfss	turnOff@led^0,2,c
  3202  005E60  EF34  F02F         	goto	u2981
  3203  005E64  EF36  F02F         	goto	u2980
  3204  005E68                     u2981:
  3205  005E68  EF40  F02F         	goto	l333
  3206  005E6C                     u2980:
  3207  005E6C                     
  3208                           ;rgb.c: 41:   digitalWrite(PIN_D2, 0);
  3209  005E6C  0E00               	movlw	0
  3210  005E6E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3211  005E70  0E1A               	movlw	26
  3212  005E72  6E01               	movwf	digitalWrite@pin^0,c
  3213  005E74  0E00               	movlw	0
  3214  005E76  6E04               	movwf	(digitalWrite@value+1)^0,c
  3215  005E78  0E00               	movlw	0
  3216  005E7A  6E03               	movwf	digitalWrite@value^0,c
  3217  005E7C  EC0E  F038         	call	_digitalWrite	;wreg free
  3218  005E80                     l333:
  3219  005E80  0012               	return		;funcret
  3220  005E82                     __end_of_turnOff:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _relogio *****************
  3224 ;; Defined at:
  3225 ;;		line 63 in file "newmain1.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  cont            4   40[COMRAM] unsigned long 
  3230 ;;  tempo           4   36[COMRAM] float 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         0       0       0       0       0       0       0
  3241 ;;      Locals:         8       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0
  3243 ;;      Totals:         8       0       0       0       0       0       0
  3244 ;;Total ram usage:        8 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 4
  3247 ;; This function calls:
  3248 ;;		_EraseDisplay
  3249 ;;		___fladd
  3250 ;;		___flge
  3251 ;;		___lldiv
  3252 ;;		___llmod
  3253 ;;		_ssdDigit
  3254 ;;		_ssdUpdate
  3255 ;; This function is called by:
  3256 ;;		_leituraTeclas
  3257 ;;		_serial
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text15
  3262  006B8A                     __ptext15:
  3263                           	callstack 0
  3264  006B8A                     _relogio:
  3265                           	callstack 25
  3266  006B8A                     
  3267                           ;newmain1.c: 67:         for (cont = tempoParaEncher; cont>0; cont--) {
  3268  006B8A  C03E  F029         	movff	_tempoParaEncher,relogio@cont
  3269  006B8E  C03F  F02A         	movff	_tempoParaEncher+1,relogio@cont+1
  3270  006B92  6A2B               	clrf	(relogio@cont+2)^0,c
  3271  006B94  6A2C               	clrf	(relogio@cont+3)^0,c
  3272  006B96  5029               	movf	relogio@cont^0,w,c
  3273  006B98  102A               	iorwf	(relogio@cont+1)^0,w,c
  3274  006B9A  102B               	iorwf	(relogio@cont+2)^0,w,c
  3275  006B9C  102C               	iorwf	(relogio@cont+3)^0,w,c
  3276  006B9E  A4D8               	btfss	status,2,c
  3277  006BA0  EFD4  F035         	goto	u3021
  3278  006BA4  EFD6  F035         	goto	u3020
  3279  006BA8                     u3021:
  3280  006BA8  EFD8  F035         	goto	l3104
  3281  006BAC                     u3020:
  3282  006BAC  EFE4  F036         	goto	l3118
  3283  006BB0                     l3104:
  3284                           
  3285                           ;newmain1.c: 69:                 ssdDigit(((cont / 100) % 10), 3);
  3286  006BB0  0E03               	movlw	3
  3287  006BB2  6E23               	movwf	ssdDigit@pos^0,c
  3288  006BB4  0E64               	movlw	100
  3289  006BB6  6E11               	movwf	___lldiv@divisor^0,c
  3290  006BB8  0E00               	movlw	0
  3291  006BBA  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3292  006BBC  0E00               	movlw	0
  3293  006BBE  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3294  006BC0  0E00               	movlw	0
  3295  006BC2  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3296  006BC4  C029  F00D         	movff	relogio@cont,___lldiv@dividend
  3297  006BC8  C02A  F00E         	movff	relogio@cont+1,___lldiv@dividend+1
  3298  006BCC  C02B  F00F         	movff	relogio@cont+2,___lldiv@dividend+2
  3299  006BD0  C02C  F010         	movff	relogio@cont+3,___lldiv@dividend+3
  3300  006BD4  EC7B  F030         	call	___lldiv	;wreg free
  3301  006BD8  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  3302  006BDC  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  3303  006BE0  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  3304  006BE4  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  3305  006BE8  0E0A               	movlw	10
  3306  006BEA  6E1E               	movwf	___llmod@divisor^0,c
  3307  006BEC  0E00               	movlw	0
  3308  006BEE  6E1F               	movwf	(___llmod@divisor+1)^0,c
  3309  006BF0  0E00               	movlw	0
  3310  006BF2  6E20               	movwf	(___llmod@divisor+2)^0,c
  3311  006BF4  0E00               	movlw	0
  3312  006BF6  6E21               	movwf	(___llmod@divisor+3)^0,c
  3313  006BF8  ECE6  F02F         	call	___llmod	;wreg free
  3314  006BFC  501A               	movf	?___llmod^0,w,c
  3315  006BFE  ECB4  F02E         	call	_ssdDigit
  3316                           
  3317                           ;newmain1.c: 70:                 ssdDigit(((cont / 1000) % 6), 2);
  3318  006C02  0E02               	movlw	2
  3319  006C04  6E23               	movwf	ssdDigit@pos^0,c
  3320  006C06  0EE8               	movlw	232
  3321  006C08  6E11               	movwf	___lldiv@divisor^0,c
  3322  006C0A  0E03               	movlw	3
  3323  006C0C  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3324  006C0E  0E00               	movlw	0
  3325  006C10  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3326  006C12  0E00               	movlw	0
  3327  006C14  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3328  006C16  C029  F00D         	movff	relogio@cont,___lldiv@dividend
  3329  006C1A  C02A  F00E         	movff	relogio@cont+1,___lldiv@dividend+1
  3330  006C1E  C02B  F00F         	movff	relogio@cont+2,___lldiv@dividend+2
  3331  006C22  C02C  F010         	movff	relogio@cont+3,___lldiv@dividend+3
  3332  006C26  EC7B  F030         	call	___lldiv	;wreg free
  3333  006C2A  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  3334  006C2E  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  3335  006C32  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  3336  006C36  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  3337  006C3A  0E06               	movlw	6
  3338  006C3C  6E1E               	movwf	___llmod@divisor^0,c
  3339  006C3E  0E00               	movlw	0
  3340  006C40  6E1F               	movwf	(___llmod@divisor+1)^0,c
  3341  006C42  0E00               	movlw	0
  3342  006C44  6E20               	movwf	(___llmod@divisor+2)^0,c
  3343  006C46  0E00               	movlw	0
  3344  006C48  6E21               	movwf	(___llmod@divisor+3)^0,c
  3345  006C4A  ECE6  F02F         	call	___llmod	;wreg free
  3346  006C4E  501A               	movf	?___llmod^0,w,c
  3347  006C50  ECB4  F02E         	call	_ssdDigit
  3348                           
  3349                           ;newmain1.c: 71:                 ssdDigit(((cont / 6000) % 10), 1);
  3350  006C54  0E01               	movlw	1
  3351  006C56  6E23               	movwf	ssdDigit@pos^0,c
  3352  006C58  0E70               	movlw	112
  3353  006C5A  6E11               	movwf	___lldiv@divisor^0,c
  3354  006C5C  0E17               	movlw	23
  3355  006C5E  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3356  006C60  0E00               	movlw	0
  3357  006C62  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3358  006C64  0E00               	movlw	0
  3359  006C66  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3360  006C68  C029  F00D         	movff	relogio@cont,___lldiv@dividend
  3361  006C6C  C02A  F00E         	movff	relogio@cont+1,___lldiv@dividend+1
  3362  006C70  C02B  F00F         	movff	relogio@cont+2,___lldiv@dividend+2
  3363  006C74  C02C  F010         	movff	relogio@cont+3,___lldiv@dividend+3
  3364  006C78  EC7B  F030         	call	___lldiv	;wreg free
  3365  006C7C  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  3366  006C80  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  3367  006C84  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  3368  006C88  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  3369  006C8C  0E0A               	movlw	10
  3370  006C8E  6E1E               	movwf	___llmod@divisor^0,c
  3371  006C90  0E00               	movlw	0
  3372  006C92  6E1F               	movwf	(___llmod@divisor+1)^0,c
  3373  006C94  0E00               	movlw	0
  3374  006C96  6E20               	movwf	(___llmod@divisor+2)^0,c
  3375  006C98  0E00               	movlw	0
  3376  006C9A  6E21               	movwf	(___llmod@divisor+3)^0,c
  3377  006C9C  ECE6  F02F         	call	___llmod	;wreg free
  3378  006CA0  501A               	movf	?___llmod^0,w,c
  3379  006CA2  ECB4  F02E         	call	_ssdDigit
  3380                           
  3381                           ;newmain1.c: 72:                 ssdDigit(((cont / 60000) % 10), 0);
  3382  006CA6  0E00               	movlw	0
  3383  006CA8  6E23               	movwf	ssdDigit@pos^0,c
  3384  006CAA  0E60               	movlw	96
  3385  006CAC  6E11               	movwf	___lldiv@divisor^0,c
  3386  006CAE  0EEA               	movlw	234
  3387  006CB0  6E12               	movwf	(___lldiv@divisor+1)^0,c
  3388  006CB2  0E00               	movlw	0
  3389  006CB4  6E13               	movwf	(___lldiv@divisor+2)^0,c
  3390  006CB6  0E00               	movlw	0
  3391  006CB8  6E14               	movwf	(___lldiv@divisor+3)^0,c
  3392  006CBA  C029  F00D         	movff	relogio@cont,___lldiv@dividend
  3393  006CBE  C02A  F00E         	movff	relogio@cont+1,___lldiv@dividend+1
  3394  006CC2  C02B  F00F         	movff	relogio@cont+2,___lldiv@dividend+2
  3395  006CC6  C02C  F010         	movff	relogio@cont+3,___lldiv@dividend+3
  3396  006CCA  EC7B  F030         	call	___lldiv	;wreg free
  3397  006CCE  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  3398  006CD2  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  3399  006CD6  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  3400  006CDA  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  3401  006CDE  0E0A               	movlw	10
  3402  006CE0  6E1E               	movwf	___llmod@divisor^0,c
  3403  006CE2  0E00               	movlw	0
  3404  006CE4  6E1F               	movwf	(___llmod@divisor+1)^0,c
  3405  006CE6  0E00               	movlw	0
  3406  006CE8  6E20               	movwf	(___llmod@divisor+2)^0,c
  3407  006CEA  0E00               	movlw	0
  3408  006CEC  6E21               	movwf	(___llmod@divisor+3)^0,c
  3409  006CEE  ECE6  F02F         	call	___llmod	;wreg free
  3410  006CF2  501A               	movf	?___llmod^0,w,c
  3411  006CF4  ECB4  F02E         	call	_ssdDigit
  3412  006CF8                     
  3413                           ;newmain1.c: 74:                 ssdUpdate();
  3414  006CF8  ECFB  F033         	call	_ssdUpdate	;wreg free
  3415  006CFC                     
  3416                           ;newmain1.c: 76:                 for (tempo = 0.0; tempo < 150.0; tempo++);
  3417  006CFC  0E00               	movlw	0
  3418  006CFE  6E25               	movwf	relogio@tempo^0,c
  3419  006D00  0E00               	movlw	0
  3420  006D02  6E26               	movwf	(relogio@tempo+1)^0,c
  3421  006D04  0E00               	movlw	0
  3422  006D06  6E27               	movwf	(relogio@tempo+2)^0,c
  3423  006D08  0E00               	movlw	0
  3424  006D0A  6E28               	movwf	(relogio@tempo+3)^0,c
  3425  006D0C  C025  F001         	movff	relogio@tempo,___flge@ff1
  3426  006D10  C026  F002         	movff	relogio@tempo+1,___flge@ff1+1
  3427  006D14  C027  F003         	movff	relogio@tempo+2,___flge@ff1+2
  3428  006D18  C028  F004         	movff	relogio@tempo+3,___flge@ff1+3
  3429  006D1C  0E00               	movlw	0
  3430  006D1E  6E05               	movwf	___flge@ff2^0,c
  3431  006D20  0E00               	movlw	0
  3432  006D22  6E06               	movwf	(___flge@ff2+1)^0,c
  3433  006D24  0E16               	movlw	22
  3434  006D26  6E07               	movwf	(___flge@ff2+2)^0,c
  3435  006D28  0E43               	movlw	67
  3436  006D2A  6E08               	movwf	(___flge@ff2+3)^0,c
  3437  006D2C  EC86  F031         	call	___flge	;wreg free
  3438  006D30  A0D8               	btfss	status,0,c
  3439  006D32  EF9D  F036         	goto	u3031
  3440  006D36  EF9F  F036         	goto	u3030
  3441  006D3A                     u3031:
  3442  006D3A  EFA1  F036         	goto	l3114
  3443  006D3E                     u3030:
  3444  006D3E  EFD4  F036         	goto	l3116
  3445  006D42                     l3114:
  3446  006D42  C025  F001         	movff	relogio@tempo,___fladd@b
  3447  006D46  C026  F002         	movff	relogio@tempo+1,___fladd@b+1
  3448  006D4A  C027  F003         	movff	relogio@tempo+2,___fladd@b+2
  3449  006D4E  C028  F004         	movff	relogio@tempo+3,___fladd@b+3
  3450  006D52  0E00               	movlw	0
  3451  006D54  6E05               	movwf	___fladd@a^0,c
  3452  006D56  0E00               	movlw	0
  3453  006D58  6E06               	movwf	(___fladd@a+1)^0,c
  3454  006D5A  0E80               	movlw	128
  3455  006D5C  6E07               	movwf	(___fladd@a+2)^0,c
  3456  006D5E  0E3F               	movlw	63
  3457  006D60  6E08               	movwf	(___fladd@a+3)^0,c
  3458  006D62  EC0F  F03D         	call	___fladd	;wreg free
  3459  006D66  C001  F025         	movff	?___fladd,relogio@tempo
  3460  006D6A  C002  F026         	movff	?___fladd+1,relogio@tempo+1
  3461  006D6E  C003  F027         	movff	?___fladd+2,relogio@tempo+2
  3462  006D72  C004  F028         	movff	?___fladd+3,relogio@tempo+3
  3463  006D76  C025  F001         	movff	relogio@tempo,___flge@ff1
  3464  006D7A  C026  F002         	movff	relogio@tempo+1,___flge@ff1+1
  3465  006D7E  C027  F003         	movff	relogio@tempo+2,___flge@ff1+2
  3466  006D82  C028  F004         	movff	relogio@tempo+3,___flge@ff1+3
  3467  006D86  0E00               	movlw	0
  3468  006D88  6E05               	movwf	___flge@ff2^0,c
  3469  006D8A  0E00               	movlw	0
  3470  006D8C  6E06               	movwf	(___flge@ff2+1)^0,c
  3471  006D8E  0E16               	movlw	22
  3472  006D90  6E07               	movwf	(___flge@ff2+2)^0,c
  3473  006D92  0E43               	movlw	67
  3474  006D94  6E08               	movwf	(___flge@ff2+3)^0,c
  3475  006D96  EC86  F031         	call	___flge	;wreg free
  3476  006D9A  A0D8               	btfss	status,0,c
  3477  006D9C  EFD2  F036         	goto	u3041
  3478  006DA0  EFD4  F036         	goto	u3040
  3479  006DA4                     u3041:
  3480  006DA4  EFA1  F036         	goto	l3114
  3481  006DA8                     u3040:
  3482  006DA8                     l3116:
  3483                           
  3484                           ;newmain1.c: 77:     }
  3485  006DA8  0629               	decf	relogio@cont^0,f,c
  3486  006DAA  0E00               	movlw	0
  3487  006DAC  5A2A               	subwfb	(relogio@cont+1)^0,f,c
  3488  006DAE  5A2B               	subwfb	(relogio@cont+2)^0,f,c
  3489  006DB0  5A2C               	subwfb	(relogio@cont+3)^0,f,c
  3490  006DB2  5029               	movf	relogio@cont^0,w,c
  3491  006DB4  102A               	iorwf	(relogio@cont+1)^0,w,c
  3492  006DB6  102B               	iorwf	(relogio@cont+2)^0,w,c
  3493  006DB8  102C               	iorwf	(relogio@cont+3)^0,w,c
  3494  006DBA  A4D8               	btfss	status,2,c
  3495  006DBC  EFE2  F036         	goto	u3051
  3496  006DC0  EFE4  F036         	goto	u3050
  3497  006DC4                     u3051:
  3498  006DC4  EFD8  F035         	goto	l3104
  3499  006DC8                     u3050:
  3500  006DC8                     l3118:
  3501                           
  3502                           ;newmain1.c: 78:     EraseDisplay();
  3503  006DC8  ECE9  F02C         	call	_EraseDisplay	;wreg free
  3504  006DCC  0012               	return		;funcret
  3505  006DCE                     __end_of_relogio:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _ssdUpdate *****************
  3509 ;; Defined at:
  3510 ;;		line 50 in file "ssd.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3524 ;;      Params:         0       0       0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0
  3526 ;;      Temps:          2       0       0       0       0       0       0
  3527 ;;      Totals:         2       0       0       0       0       0       0
  3528 ;;Total ram usage:        2 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 3
  3531 ;; This function calls:
  3532 ;;		_digitalWrite
  3533 ;;		_soWrite
  3534 ;; This function is called by:
  3535 ;;		_relogio
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text16
  3541  0067F6                     __ptext16:
  3542                           	callstack 0
  3543  0067F6                     _ssdUpdate:
  3544                           	callstack 27
  3545  0067F6                     
  3546                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  3547  0067F6  0E00               	movlw	0
  3548  0067F8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3549  0067FA  0E18               	movlw	24
  3550  0067FC  6E01               	movwf	digitalWrite@pin^0,c
  3551  0067FE  0E00               	movlw	0
  3552  006800  6E04               	movwf	(digitalWrite@value+1)^0,c
  3553  006802  0E00               	movlw	0
  3554  006804  6E03               	movwf	digitalWrite@value^0,c
  3555  006806  EC0E  F038         	call	_digitalWrite	;wreg free
  3556                           
  3557                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  3558  00680A  0E00               	movlw	0
  3559  00680C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3560  00680E  0E19               	movlw	25
  3561  006810  6E01               	movwf	digitalWrite@pin^0,c
  3562  006812  0E00               	movlw	0
  3563  006814  6E04               	movwf	(digitalWrite@value+1)^0,c
  3564  006816  0E00               	movlw	0
  3565  006818  6E03               	movwf	digitalWrite@value^0,c
  3566  00681A  EC0E  F038         	call	_digitalWrite	;wreg free
  3567                           
  3568                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  3569  00681E  0E00               	movlw	0
  3570  006820  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3571  006822  0E1A               	movlw	26
  3572  006824  6E01               	movwf	digitalWrite@pin^0,c
  3573  006826  0E00               	movlw	0
  3574  006828  6E04               	movwf	(digitalWrite@value+1)^0,c
  3575  00682A  0E00               	movlw	0
  3576  00682C  6E03               	movwf	digitalWrite@value^0,c
  3577  00682E  EC0E  F038         	call	_digitalWrite	;wreg free
  3578                           
  3579                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  3580  006832  0E00               	movlw	0
  3581  006834  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3582  006836  0E1B               	movlw	27
  3583  006838  6E01               	movwf	digitalWrite@pin^0,c
  3584  00683A  0E00               	movlw	0
  3585  00683C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3586  00683E  0E00               	movlw	0
  3587  006840  6E03               	movwf	digitalWrite@value^0,c
  3588  006842  EC0E  F038         	call	_digitalWrite	;wreg free
  3589                           
  3590                           ;ssd.c: 60:     soWrite(0x00);
  3591  006846  0E00               	movlw	0
  3592  006848  6E08               	movwf	(soWrite@value+1)^0,c
  3593  00684A  0E00               	movlw	0
  3594  00684C  6E07               	movwf	soWrite@value^0,c
  3595  00684E  EC0F  F02E         	call	_soWrite	;wreg free
  3596                           
  3597                           ;ssd.c: 62:     switch (display)
  3598  006852  EF93  F034         	goto	l2706
  3599  006856                     l2678:
  3600                           
  3601                           ;ssd.c: 65:             soWrite(valor[v0]);
  3602  006856  0EDF               	movlw	low _valor
  3603  006858  244A               	addwf	_v0^0,w,c
  3604  00685A  6EF6               	movwf	tblptrl,c
  3605  00685C  6AF7               	clrf	tblptrh,c
  3606  00685E  0E7E               	movlw	high _valor
  3607  006860  22F7               	addwfc	tblptrh,f,c
  3608  006862                     	if	0	;There are less than 3 active tblptr bytes
  3609  006862                     	endif
  3610  006862  0008               	tblrd		*
  3611  006864  50F5               	movf	tablat,w,c
  3612  006866  6E07               	movwf	soWrite@value^0,c
  3613  006868  6A08               	clrf	(soWrite@value+1)^0,c
  3614  00686A  EC0F  F02E         	call	_soWrite	;wreg free
  3615  00686E                     
  3616                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  3617  00686E  0E00               	movlw	0
  3618  006870  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3619  006872  0E18               	movlw	24
  3620  006874  6E01               	movwf	digitalWrite@pin^0,c
  3621  006876  0E00               	movlw	0
  3622  006878  6E04               	movwf	(digitalWrite@value+1)^0,c
  3623  00687A  0E01               	movlw	1
  3624  00687C  6E03               	movwf	digitalWrite@value^0,c
  3625  00687E  EC0E  F038         	call	_digitalWrite	;wreg free
  3626  006882                     
  3627                           ;ssd.c: 67:             display = 1;
  3628  006882  0E01               	movlw	1
  3629  006884  6E4B               	movwf	_display^0,c
  3630                           
  3631                           ;ssd.c: 68:             break;
  3632  006886  EFB0  F034         	goto	l423
  3633  00688A                     l2684:
  3634                           
  3635                           ;ssd.c: 71:             soWrite(valor[v1]);
  3636  00688A  0EDF               	movlw	low _valor
  3637  00688C  2449               	addwf	_v1^0,w,c
  3638  00688E  6EF6               	movwf	tblptrl,c
  3639  006890  6AF7               	clrf	tblptrh,c
  3640  006892  0E7E               	movlw	high _valor
  3641  006894  22F7               	addwfc	tblptrh,f,c
  3642  006896                     	if	0	;There are less than 3 active tblptr bytes
  3643  006896                     	endif
  3644  006896  0008               	tblrd		*
  3645  006898  50F5               	movf	tablat,w,c
  3646  00689A  6E07               	movwf	soWrite@value^0,c
  3647  00689C  6A08               	clrf	(soWrite@value+1)^0,c
  3648  00689E  EC0F  F02E         	call	_soWrite	;wreg free
  3649  0068A2                     
  3650                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  3651  0068A2  0E00               	movlw	0
  3652  0068A4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3653  0068A6  0E19               	movlw	25
  3654  0068A8  6E01               	movwf	digitalWrite@pin^0,c
  3655  0068AA  0E00               	movlw	0
  3656  0068AC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3657  0068AE  0E01               	movlw	1
  3658  0068B0  6E03               	movwf	digitalWrite@value^0,c
  3659  0068B2  EC0E  F038         	call	_digitalWrite	;wreg free
  3660  0068B6                     
  3661                           ;ssd.c: 73:             display = 2;
  3662  0068B6  0E02               	movlw	2
  3663  0068B8  6E4B               	movwf	_display^0,c
  3664                           
  3665                           ;ssd.c: 74:             break;
  3666  0068BA  EFB0  F034         	goto	l423
  3667  0068BE                     l2690:
  3668                           
  3669                           ;ssd.c: 77:             soWrite(valor[v2]);
  3670  0068BE  0EDF               	movlw	low _valor
  3671  0068C0  2448               	addwf	_v2^0,w,c
  3672  0068C2  6EF6               	movwf	tblptrl,c
  3673  0068C4  6AF7               	clrf	tblptrh,c
  3674  0068C6  0E7E               	movlw	high _valor
  3675  0068C8  22F7               	addwfc	tblptrh,f,c
  3676  0068CA                     	if	0	;There are less than 3 active tblptr bytes
  3677  0068CA                     	endif
  3678  0068CA  0008               	tblrd		*
  3679  0068CC  50F5               	movf	tablat,w,c
  3680  0068CE  6E07               	movwf	soWrite@value^0,c
  3681  0068D0  6A08               	clrf	(soWrite@value+1)^0,c
  3682  0068D2  EC0F  F02E         	call	_soWrite	;wreg free
  3683  0068D6                     
  3684                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  3685  0068D6  0E00               	movlw	0
  3686  0068D8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3687  0068DA  0E1A               	movlw	26
  3688  0068DC  6E01               	movwf	digitalWrite@pin^0,c
  3689  0068DE  0E00               	movlw	0
  3690  0068E0  6E04               	movwf	(digitalWrite@value+1)^0,c
  3691  0068E2  0E01               	movlw	1
  3692  0068E4  6E03               	movwf	digitalWrite@value^0,c
  3693  0068E6  EC0E  F038         	call	_digitalWrite	;wreg free
  3694  0068EA                     
  3695                           ;ssd.c: 79:             display = 3;
  3696  0068EA  0E03               	movlw	3
  3697  0068EC  6E4B               	movwf	_display^0,c
  3698                           
  3699                           ;ssd.c: 80:             break;
  3700  0068EE  EFB0  F034         	goto	l423
  3701  0068F2                     l2696:
  3702                           
  3703                           ;ssd.c: 83:             soWrite(valor[v3]);
  3704  0068F2  0EDF               	movlw	low _valor
  3705  0068F4  2447               	addwf	_v3^0,w,c
  3706  0068F6  6EF6               	movwf	tblptrl,c
  3707  0068F8  6AF7               	clrf	tblptrh,c
  3708  0068FA  0E7E               	movlw	high _valor
  3709  0068FC  22F7               	addwfc	tblptrh,f,c
  3710  0068FE                     	if	0	;There are less than 3 active tblptr bytes
  3711  0068FE                     	endif
  3712  0068FE  0008               	tblrd		*
  3713  006900  50F5               	movf	tablat,w,c
  3714  006902  6E07               	movwf	soWrite@value^0,c
  3715  006904  6A08               	clrf	(soWrite@value+1)^0,c
  3716  006906  EC0F  F02E         	call	_soWrite	;wreg free
  3717  00690A                     
  3718                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  3719  00690A  0E00               	movlw	0
  3720  00690C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3721  00690E  0E1B               	movlw	27
  3722  006910  6E01               	movwf	digitalWrite@pin^0,c
  3723  006912  0E00               	movlw	0
  3724  006914  6E04               	movwf	(digitalWrite@value+1)^0,c
  3725  006916  0E01               	movlw	1
  3726  006918  6E03               	movwf	digitalWrite@value^0,c
  3727  00691A  EC0E  F038         	call	_digitalWrite	;wreg free
  3728  00691E                     l2700:
  3729                           
  3730                           ;ssd.c: 85:             display = 0;
  3731  00691E  0E00               	movlw	0
  3732  006920  6E4B               	movwf	_display^0,c
  3733                           
  3734                           ;ssd.c: 86:             break;
  3735  006922  EFB0  F034         	goto	l423
  3736  006926                     l2706:
  3737  006926  504B               	movf	_display^0,w,c
  3738  006928  6E0A               	movwf	??_ssdUpdate^0,c
  3739  00692A  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  3740                           
  3741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 1, Range of values is 0 to 0
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte            4     3 (average)
  3747                           ;	Chosen strategy is simple_byte
  3748  00692C  500B               	movf	(??_ssdUpdate+1)^0,w,c
  3749  00692E  0A00               	xorlw	0	; case 0
  3750  006930  B4D8               	btfsc	status,2,c
  3751  006932  EF9D  F034         	goto	l3646
  3752  006936  EF8F  F034         	goto	l2700
  3753  00693A                     l3646:
  3754                           
  3755                           ; Switch size 1, requested type "simple"
  3756                           ; Number of cases is 4, Range of values is 0 to 3
  3757                           ; switch strategies available:
  3758                           ; Name         Instructions Cycles
  3759                           ; simple_byte           13     7 (average)
  3760                           ;	Chosen strategy is simple_byte
  3761  00693A  500A               	movf	??_ssdUpdate^0,w,c
  3762  00693C  0A00               	xorlw	0	; case 0
  3763  00693E  B4D8               	btfsc	status,2,c
  3764  006940  EF2B  F034         	goto	l2678
  3765  006944  0A01               	xorlw	1	; case 1
  3766  006946  B4D8               	btfsc	status,2,c
  3767  006948  EF45  F034         	goto	l2684
  3768  00694C  0A03               	xorlw	3	; case 2
  3769  00694E  B4D8               	btfsc	status,2,c
  3770  006950  EF5F  F034         	goto	l2690
  3771  006954  0A01               	xorlw	1	; case 3
  3772  006956  B4D8               	btfsc	status,2,c
  3773  006958  EF79  F034         	goto	l2696
  3774  00695C  EF8F  F034         	goto	l2700
  3775  006960                     l423:
  3776  006960  0012               	return		;funcret
  3777  006962                     __end_of_ssdUpdate:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function ___flge *****************
  3781 ;; Defined at:
  3782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  ff1             4    0[COMRAM] void 
  3785 ;;  ff2             4    4[COMRAM] void 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;		None               void
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3797 ;;      Params:         8       0       0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0
  3799 ;;      Temps:          4       0       0       0       0       0       0
  3800 ;;      Totals:        12       0       0       0       0       0       0
  3801 ;;Total ram usage:       12 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_relogio
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text17
  3811  00630C                     __ptext17:
  3812                           	callstack 0
  3813  00630C                     ___flge:
  3814                           	callstack 28
  3815  00630C  0E00               	movlw	0
  3816  00630E  1401               	andwf	___flge@ff1^0,w,c
  3817  006310  6E09               	movwf	??___flge^0,c
  3818  006312  0E00               	movlw	0
  3819  006314  1402               	andwf	(___flge@ff1+1)^0,w,c
  3820  006316  6E0A               	movwf	(??___flge+1)^0,c
  3821  006318  0E80               	movlw	128
  3822  00631A  1403               	andwf	(___flge@ff1+2)^0,w,c
  3823  00631C  6E0B               	movwf	(??___flge+2)^0,c
  3824  00631E  0E7F               	movlw	127
  3825  006320  1404               	andwf	(___flge@ff1+3)^0,w,c
  3826  006322  6E0C               	movwf	(??___flge+3)^0,c
  3827  006324  5009               	movf	??___flge^0,w,c
  3828  006326  100A               	iorwf	(??___flge+1)^0,w,c
  3829  006328  100B               	iorwf	(??___flge+2)^0,w,c
  3830  00632A  100C               	iorwf	(??___flge+3)^0,w,c
  3831  00632C  A4D8               	btfss	status,2,c
  3832  00632E  EF9B  F031         	goto	u2681
  3833  006332  EF9D  F031         	goto	u2680
  3834  006336                     u2681:
  3835  006336  EFA5  F031         	goto	l2942
  3836  00633A                     u2680:
  3837  00633A  0E00               	movlw	0
  3838  00633C  6E01               	movwf	___flge@ff1^0,c
  3839  00633E  0E00               	movlw	0
  3840  006340  6E02               	movwf	(___flge@ff1+1)^0,c
  3841  006342  0E00               	movlw	0
  3842  006344  6E03               	movwf	(___flge@ff1+2)^0,c
  3843  006346  0E00               	movlw	0
  3844  006348  6E04               	movwf	(___flge@ff1+3)^0,c
  3845  00634A                     l2942:
  3846  00634A  0E00               	movlw	0
  3847  00634C  1405               	andwf	___flge@ff2^0,w,c
  3848  00634E  6E09               	movwf	??___flge^0,c
  3849  006350  0E00               	movlw	0
  3850  006352  1406               	andwf	(___flge@ff2+1)^0,w,c
  3851  006354  6E0A               	movwf	(??___flge+1)^0,c
  3852  006356  0E80               	movlw	128
  3853  006358  1407               	andwf	(___flge@ff2+2)^0,w,c
  3854  00635A  6E0B               	movwf	(??___flge+2)^0,c
  3855  00635C  0E7F               	movlw	127
  3856  00635E  1408               	andwf	(___flge@ff2+3)^0,w,c
  3857  006360  6E0C               	movwf	(??___flge+3)^0,c
  3858  006362  5009               	movf	??___flge^0,w,c
  3859  006364  100A               	iorwf	(??___flge+1)^0,w,c
  3860  006366  100B               	iorwf	(??___flge+2)^0,w,c
  3861  006368  100C               	iorwf	(??___flge+3)^0,w,c
  3862  00636A  A4D8               	btfss	status,2,c
  3863  00636C  EFBA  F031         	goto	u2691
  3864  006370  EFBC  F031         	goto	u2690
  3865  006374                     u2691:
  3866  006374  EFC4  F031         	goto	l2946
  3867  006378                     u2690:
  3868  006378  0E00               	movlw	0
  3869  00637A  6E05               	movwf	___flge@ff2^0,c
  3870  00637C  0E00               	movlw	0
  3871  00637E  6E06               	movwf	(___flge@ff2+1)^0,c
  3872  006380  0E00               	movlw	0
  3873  006382  6E07               	movwf	(___flge@ff2+2)^0,c
  3874  006384  0E00               	movlw	0
  3875  006386  6E08               	movwf	(___flge@ff2+3)^0,c
  3876  006388                     l2946:
  3877  006388  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3878  00638A  EFC9  F031         	goto	u2701
  3879  00638E  EFCB  F031         	goto	u2700
  3880  006392                     u2701:
  3881  006392  EFD4  F031         	goto	l2950
  3882  006396                     u2700:
  3883  006396  6C01               	negf	___flge@ff1^0,c
  3884  006398  1E02               	comf	(___flge@ff1+1)^0,f,c
  3885  00639A  B0D8               	btfsc	status,0,c
  3886  00639C  2A02               	incf	(___flge@ff1+1)^0,f,c
  3887  00639E  1E03               	comf	(___flge@ff1+2)^0,f,c
  3888  0063A0  B0D8               	btfsc	status,0,c
  3889  0063A2  2A03               	incf	(___flge@ff1+2)^0,f,c
  3890  0063A4  0E80               	movlw	128
  3891  0063A6  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3892  0063A8                     l2950:
  3893  0063A8  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3894  0063AA  EFD9  F031         	goto	u2711
  3895  0063AE  EFDB  F031         	goto	u2710
  3896  0063B2                     u2711:
  3897  0063B2  EFE4  F031         	goto	l852
  3898  0063B6                     u2710:
  3899  0063B6  6C05               	negf	___flge@ff2^0,c
  3900  0063B8  1E06               	comf	(___flge@ff2+1)^0,f,c
  3901  0063BA  B0D8               	btfsc	status,0,c
  3902  0063BC  2A06               	incf	(___flge@ff2+1)^0,f,c
  3903  0063BE  1E07               	comf	(___flge@ff2+2)^0,f,c
  3904  0063C0  B0D8               	btfsc	status,0,c
  3905  0063C2  2A07               	incf	(___flge@ff2+2)^0,f,c
  3906  0063C4  0E80               	movlw	128
  3907  0063C6  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3908  0063C8                     l852:
  3909  0063C8  0E00               	movlw	0
  3910  0063CA  1A01               	xorwf	___flge@ff1^0,f,c
  3911  0063CC  0E00               	movlw	0
  3912  0063CE  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3913  0063D0  0E00               	movlw	0
  3914  0063D2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3915  0063D4  0E80               	movlw	128
  3916  0063D6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3917  0063D8  0E00               	movlw	0
  3918  0063DA  1A05               	xorwf	___flge@ff2^0,f,c
  3919  0063DC  0E00               	movlw	0
  3920  0063DE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3921  0063E0  0E00               	movlw	0
  3922  0063E2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3923  0063E4  0E80               	movlw	128
  3924  0063E6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3925  0063E8  5005               	movf	___flge@ff2^0,w,c
  3926  0063EA  5C01               	subwf	___flge@ff1^0,w,c
  3927  0063EC  5006               	movf	(___flge@ff2+1)^0,w,c
  3928  0063EE  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3929  0063F0  5007               	movf	(___flge@ff2+2)^0,w,c
  3930  0063F2  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3931  0063F4  5008               	movf	(___flge@ff2+3)^0,w,c
  3932  0063F6  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3933  0063F8  B0D8               	btfsc	status,0,c
  3934  0063FA  EF01  F032         	goto	u2721
  3935  0063FE  EF03  F032         	goto	u2720
  3936  006402                     u2721:
  3937  006402  EF06  F032         	goto	l2956
  3938  006406                     u2720:
  3939  006406  90D8               	bcf	status,0,c
  3940  006408  EF07  F032         	goto	l857
  3941  00640C                     l2956:
  3942  00640C  80D8               	bsf	status,0,c
  3943  00640E                     l857:
  3944  00640E  0012               	return		;funcret
  3945  006410                     __end_of___flge:
  3946                           	callstack 0
  3947                           
  3948 ;; *************** function ___fladd *****************
  3949 ;; Defined at:
  3950 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  b               4    0[COMRAM] void 
  3953 ;;  a               4    4[COMRAM] void 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  grs             1   15[COMRAM] unsigned char 
  3956 ;;  bexp            1   14[COMRAM] unsigned char 
  3957 ;;  aexp            1   13[COMRAM] unsigned char 
  3958 ;;  signs           1   12[COMRAM] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  4    0[COMRAM] unsigned char 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3968 ;;      Params:         8       0       0       0       0       0       0
  3969 ;;      Locals:         4       0       0       0       0       0       0
  3970 ;;      Temps:          4       0       0       0       0       0       0
  3971 ;;      Totals:        16       0       0       0       0       0       0
  3972 ;;Total ram usage:       16 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_relogio
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text18
  3982  007A1E                     __ptext18:
  3983                           	callstack 0
  3984  007A1E                     ___fladd:
  3985                           	callstack 28
  3986  007A1E  5004               	movf	(___fladd@b+3)^0,w,c
  3987  007A20  0B80               	andlw	128
  3988  007A22  6E0D               	movwf	___fladd@signs^0,c
  3989  007A24  5004               	movf	(___fladd@b+3)^0,w,c
  3990  007A26  2404               	addwf	(___fladd@b+3)^0,w,c
  3991  007A28  6E0F               	movwf	___fladd@bexp^0,c
  3992  007A2A  AE03               	btfss	(___fladd@b+2)^0,7,c
  3993  007A2C  EF1A  F03D         	goto	u2291
  3994  007A30  EF1C  F03D         	goto	u2290
  3995  007A34                     u2291:
  3996  007A34  EF1D  F03D         	goto	l2742
  3997  007A38                     u2290:
  3998  007A38  800F               	bsf	___fladd@bexp^0,0,c
  3999  007A3A                     l2742:
  4000  007A3A  500F               	movf	___fladd@bexp^0,w,c
  4001  007A3C  B4D8               	btfsc	status,2,c
  4002  007A3E  EF23  F03D         	goto	u2301
  4003  007A42  EF25  F03D         	goto	u2300
  4004  007A46                     u2301:
  4005  007A46  EF3A  F03D         	goto	l2752
  4006  007A4A                     u2300:
  4007  007A4A  280F               	incf	___fladd@bexp^0,w,c
  4008  007A4C  A4D8               	btfss	status,2,c
  4009  007A4E  EF2B  F03D         	goto	u2311
  4010  007A52  EF2D  F03D         	goto	u2310
  4011  007A56                     u2311:
  4012  007A56  EF35  F03D         	goto	l2748
  4013  007A5A                     u2310:
  4014  007A5A  0E00               	movlw	0
  4015  007A5C  6E01               	movwf	___fladd@b^0,c
  4016  007A5E  0E00               	movlw	0
  4017  007A60  6E02               	movwf	(___fladd@b+1)^0,c
  4018  007A62  0E00               	movlw	0
  4019  007A64  6E03               	movwf	(___fladd@b+2)^0,c
  4020  007A66  0E00               	movlw	0
  4021  007A68  6E04               	movwf	(___fladd@b+3)^0,c
  4022  007A6A                     l2748:
  4023  007A6A  8E03               	bsf	(___fladd@b+2)^0,7,c
  4024  007A6C  0E00               	movlw	0
  4025  007A6E  6E04               	movwf	(___fladd@b+3)^0,c
  4026  007A70  EF42  F03D         	goto	l2754
  4027  007A74                     l2752:
  4028  007A74  0E00               	movlw	0
  4029  007A76  6E01               	movwf	___fladd@b^0,c
  4030  007A78  0E00               	movlw	0
  4031  007A7A  6E02               	movwf	(___fladd@b+1)^0,c
  4032  007A7C  0E00               	movlw	0
  4033  007A7E  6E03               	movwf	(___fladd@b+2)^0,c
  4034  007A80  0E00               	movlw	0
  4035  007A82  6E04               	movwf	(___fladd@b+3)^0,c
  4036  007A84                     l2754:
  4037  007A84  5008               	movf	(___fladd@a+3)^0,w,c
  4038  007A86  0B80               	andlw	128
  4039  007A88  6E0E               	movwf	___fladd@aexp^0,c
  4040  007A8A  500D               	movf	___fladd@signs^0,w,c
  4041  007A8C  180E               	xorwf	___fladd@aexp^0,w,c
  4042  007A8E  B4D8               	btfsc	status,2,c
  4043  007A90  EF4C  F03D         	goto	u2321
  4044  007A94  EF4E  F03D         	goto	u2320
  4045  007A98                     u2321:
  4046  007A98  EF4F  F03D         	goto	l2760
  4047  007A9C                     u2320:
  4048  007A9C  8C0D               	bsf	___fladd@signs^0,6,c
  4049  007A9E                     l2760:
  4050  007A9E  5008               	movf	(___fladd@a+3)^0,w,c
  4051  007AA0  2408               	addwf	(___fladd@a+3)^0,w,c
  4052  007AA2  6E0E               	movwf	___fladd@aexp^0,c
  4053  007AA4  AE07               	btfss	(___fladd@a+2)^0,7,c
  4054  007AA6  EF57  F03D         	goto	u2331
  4055  007AAA  EF59  F03D         	goto	u2330
  4056  007AAE                     u2331:
  4057  007AAE  EF5A  F03D         	goto	l2766
  4058  007AB2                     u2330:
  4059  007AB2  800E               	bsf	___fladd@aexp^0,0,c
  4060  007AB4                     l2766:
  4061  007AB4  500E               	movf	___fladd@aexp^0,w,c
  4062  007AB6  B4D8               	btfsc	status,2,c
  4063  007AB8  EF60  F03D         	goto	u2341
  4064  007ABC  EF62  F03D         	goto	u2340
  4065  007AC0                     u2341:
  4066  007AC0  EF77  F03D         	goto	l2776
  4067  007AC4                     u2340:
  4068  007AC4  280E               	incf	___fladd@aexp^0,w,c
  4069  007AC6  A4D8               	btfss	status,2,c
  4070  007AC8  EF68  F03D         	goto	u2351
  4071  007ACC  EF6A  F03D         	goto	u2350
  4072  007AD0                     u2351:
  4073  007AD0  EF72  F03D         	goto	l2772
  4074  007AD4                     u2350:
  4075  007AD4  0E00               	movlw	0
  4076  007AD6  6E05               	movwf	___fladd@a^0,c
  4077  007AD8  0E00               	movlw	0
  4078  007ADA  6E06               	movwf	(___fladd@a+1)^0,c
  4079  007ADC  0E00               	movlw	0
  4080  007ADE  6E07               	movwf	(___fladd@a+2)^0,c
  4081  007AE0  0E00               	movlw	0
  4082  007AE2  6E08               	movwf	(___fladd@a+3)^0,c
  4083  007AE4                     l2772:
  4084  007AE4  8E07               	bsf	(___fladd@a+2)^0,7,c
  4085  007AE6  0E00               	movlw	0
  4086  007AE8  6E08               	movwf	(___fladd@a+3)^0,c
  4087  007AEA  EF7F  F03D         	goto	l2778
  4088  007AEE                     l2776:
  4089  007AEE  0E00               	movlw	0
  4090  007AF0  6E05               	movwf	___fladd@a^0,c
  4091  007AF2  0E00               	movlw	0
  4092  007AF4  6E06               	movwf	(___fladd@a+1)^0,c
  4093  007AF6  0E00               	movlw	0
  4094  007AF8  6E07               	movwf	(___fladd@a+2)^0,c
  4095  007AFA  0E00               	movlw	0
  4096  007AFC  6E08               	movwf	(___fladd@a+3)^0,c
  4097  007AFE                     l2778:
  4098  007AFE  500F               	movf	___fladd@bexp^0,w,c
  4099  007B00  5C0E               	subwf	___fladd@aexp^0,w,c
  4100  007B02  B0D8               	btfsc	status,0,c
  4101  007B04  EF86  F03D         	goto	u2361
  4102  007B08  EF88  F03D         	goto	u2360
  4103  007B0C                     u2361:
  4104  007B0C  EFAF  F03D         	goto	l2814
  4105  007B10                     u2360:
  4106  007B10  AC0D               	btfss	___fladd@signs^0,6,c
  4107  007B12  EF8D  F03D         	goto	u2371
  4108  007B16  EF8F  F03D         	goto	u2370
  4109  007B1A                     u2371:
  4110  007B1A  EF91  F03D         	goto	l2784
  4111  007B1E                     u2370:
  4112  007B1E  0E80               	movlw	128
  4113  007B20  1A0D               	xorwf	___fladd@signs^0,f,c
  4114  007B22                     l2784:
  4115  007B22  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4116  007B26  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4117  007B2A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4118  007B2E  C001  F010         	movff	___fladd@b,___fladd@grs
  4119  007B32  C005  F001         	movff	___fladd@a,___fladd@b
  4120  007B36  C010  F005         	movff	___fladd@grs,___fladd@a
  4121  007B3A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4122  007B3E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4123  007B42  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4124  007B46  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4125  007B4A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4126  007B4E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4127  007B52  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4128  007B56  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4129  007B5A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4130  007B5E                     l2814:
  4131  007B5E  0E00               	movlw	0
  4132  007B60  6E10               	movwf	___fladd@grs^0,c
  4133  007B62  500F               	movf	___fladd@bexp^0,w,c
  4134  007B64  C00E  F009         	movff	___fladd@aexp,??___fladd
  4135  007B68  6A0A               	clrf	(??___fladd+1)^0,c
  4136  007B6A  5E09               	subwf	??___fladd^0,f,c
  4137  007B6C  0E00               	movlw	0
  4138  007B6E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4139  007B70  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4140  007B72  EFC4  F03D         	goto	u2381
  4141  007B76  500A               	movf	(??___fladd+1)^0,w,c
  4142  007B78  E109               	bnz	u2380
  4143  007B7A  0E1A               	movlw	26
  4144  007B7C  5C09               	subwf	??___fladd^0,w,c
  4145  007B7E  A0D8               	btfss	status,0,c
  4146  007B80  EFC4  F03D         	goto	u2381
  4147  007B84  EFC6  F03D         	goto	u2380
  4148  007B88                     u2381:
  4149  007B88  EFFD  F03D         	goto	l1116
  4150  007B8C                     u2380:
  4151  007B8C  5001               	movf	___fladd@b^0,w,c
  4152  007B8E  1002               	iorwf	(___fladd@b+1)^0,w,c
  4153  007B90  1003               	iorwf	(___fladd@b+2)^0,w,c
  4154  007B92  1004               	iorwf	(___fladd@b+3)^0,w,c
  4155  007B94  A4D8               	btfss	status,2,c
  4156  007B96  EFCF  F03D         	goto	u2391
  4157  007B9A  EFD2  F03D         	goto	u2390
  4158  007B9E                     u2391:
  4159  007B9E  0E01               	movlw	1
  4160  007BA0  EFD3  F03D         	goto	u2400
  4161  007BA4                     u2390:
  4162  007BA4  0E00               	movlw	0
  4163  007BA6                     u2400:
  4164  007BA6  6E10               	movwf	___fladd@grs^0,c
  4165  007BA8  0E00               	movlw	0
  4166  007BAA  6E01               	movwf	___fladd@b^0,c
  4167  007BAC  0E00               	movlw	0
  4168  007BAE  6E02               	movwf	(___fladd@b+1)^0,c
  4169  007BB0  0E00               	movlw	0
  4170  007BB2  6E03               	movwf	(___fladd@b+2)^0,c
  4171  007BB4  0E00               	movlw	0
  4172  007BB6  6E04               	movwf	(___fladd@b+3)^0,c
  4173  007BB8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4174  007BBC  EF06  F03E         	goto	l1115
  4175  007BC0                     l1117:
  4176  007BC0  A010               	btfss	___fladd@grs^0,0,c
  4177  007BC2  EFE5  F03D         	goto	u2411
  4178  007BC6  EFE7  F03D         	goto	u2410
  4179  007BCA                     u2411:
  4180  007BCA  EFED  F03D         	goto	l2826
  4181  007BCE                     u2410:
  4182  007BCE  90D8               	bcf	status,0,c
  4183  007BD0  3010               	rrcf	___fladd@grs^0,w,c
  4184  007BD2  0901               	iorlw	1
  4185  007BD4  6E10               	movwf	___fladd@grs^0,c
  4186  007BD6  EFEF  F03D         	goto	l2828
  4187  007BDA                     l2826:
  4188  007BDA  90D8               	bcf	status,0,c
  4189  007BDC  3210               	rrcf	___fladd@grs^0,f,c
  4190  007BDE                     l2828:
  4191  007BDE  A001               	btfss	___fladd@b^0,0,c
  4192  007BE0  EFF4  F03D         	goto	u2421
  4193  007BE4  EFF6  F03D         	goto	u2420
  4194  007BE8                     u2421:
  4195  007BE8  EFF7  F03D         	goto	l2832
  4196  007BEC                     u2420:
  4197  007BEC  8E10               	bsf	___fladd@grs^0,7,c
  4198  007BEE                     l2832:
  4199  007BEE  3404               	rlcf	(___fladd@b+3)^0,w,c
  4200  007BF0  3204               	rrcf	(___fladd@b+3)^0,f,c
  4201  007BF2  3203               	rrcf	(___fladd@b+2)^0,f,c
  4202  007BF4  3202               	rrcf	(___fladd@b+1)^0,f,c
  4203  007BF6  3201               	rrcf	___fladd@b^0,f,c
  4204  007BF8  2A0F               	incf	___fladd@bexp^0,f,c
  4205  007BFA                     l1116:
  4206  007BFA  500E               	movf	___fladd@aexp^0,w,c
  4207  007BFC  5C0F               	subwf	___fladd@bexp^0,w,c
  4208  007BFE  A0D8               	btfss	status,0,c
  4209  007C00  EF04  F03E         	goto	u2431
  4210  007C04  EF06  F03E         	goto	u2430
  4211  007C08                     u2431:
  4212  007C08  EFE0  F03D         	goto	l1117
  4213  007C0C                     u2430:
  4214  007C0C                     l1115:
  4215  007C0C  BC0D               	btfsc	___fladd@signs^0,6,c
  4216  007C0E  EF0B  F03E         	goto	u2441
  4217  007C12  EF0D  F03E         	goto	u2440
  4218  007C16                     u2441:
  4219  007C16  EF4D  F03E         	goto	l2860
  4220  007C1A                     u2440:
  4221  007C1A  500F               	movf	___fladd@bexp^0,w,c
  4222  007C1C  A4D8               	btfss	status,2,c
  4223  007C1E  EF13  F03E         	goto	u2451
  4224  007C22  EF15  F03E         	goto	u2450
  4225  007C26                     u2451:
  4226  007C26  EF1F  F03E         	goto	l2842
  4227  007C2A                     u2450:
  4228  007C2A  0E00               	movlw	0
  4229  007C2C  6E01               	movwf	?___fladd^0,c
  4230  007C2E  0E00               	movlw	0
  4231  007C30  6E02               	movwf	(?___fladd+1)^0,c
  4232  007C32  0E00               	movlw	0
  4233  007C34  6E03               	movwf	(?___fladd+2)^0,c
  4234  007C36  0E00               	movlw	0
  4235  007C38  6E04               	movwf	(?___fladd+3)^0,c
  4236  007C3A  EF6E  F03F         	goto	l1124
  4237  007C3E                     l2842:
  4238  007C3E  5005               	movf	___fladd@a^0,w,c
  4239  007C40  2601               	addwf	___fladd@b^0,f,c
  4240  007C42  5006               	movf	(___fladd@a+1)^0,w,c
  4241  007C44  2202               	addwfc	(___fladd@b+1)^0,f,c
  4242  007C46  5007               	movf	(___fladd@a+2)^0,w,c
  4243  007C48  2203               	addwfc	(___fladd@b+2)^0,f,c
  4244  007C4A  5008               	movf	(___fladd@a+3)^0,w,c
  4245  007C4C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4246  007C4E  A004               	btfss	(___fladd@b+3)^0,0,c
  4247  007C50  EF2C  F03E         	goto	u2461
  4248  007C54  EF2E  F03E         	goto	u2460
  4249  007C58                     u2461:
  4250  007C58  EFDA  F03E         	goto	l2896
  4251  007C5C                     u2460:
  4252  007C5C  A010               	btfss	___fladd@grs^0,0,c
  4253  007C5E  EF33  F03E         	goto	u2471
  4254  007C62  EF35  F03E         	goto	u2470
  4255  007C66                     u2471:
  4256  007C66  EF3B  F03E         	goto	l2850
  4257  007C6A                     u2470:
  4258  007C6A  90D8               	bcf	status,0,c
  4259  007C6C  3010               	rrcf	___fladd@grs^0,w,c
  4260  007C6E  0901               	iorlw	1
  4261  007C70  6E10               	movwf	___fladd@grs^0,c
  4262  007C72  EF3D  F03E         	goto	l2852
  4263  007C76                     l2850:
  4264  007C76  90D8               	bcf	status,0,c
  4265  007C78  3210               	rrcf	___fladd@grs^0,f,c
  4266  007C7A                     l2852:
  4267  007C7A  A001               	btfss	___fladd@b^0,0,c
  4268  007C7C  EF42  F03E         	goto	u2481
  4269  007C80  EF44  F03E         	goto	u2480
  4270  007C84                     u2481:
  4271  007C84  EF45  F03E         	goto	l2856
  4272  007C88                     u2480:
  4273  007C88  8E10               	bsf	___fladd@grs^0,7,c
  4274  007C8A                     l2856:
  4275  007C8A  3404               	rlcf	(___fladd@b+3)^0,w,c
  4276  007C8C  3204               	rrcf	(___fladd@b+3)^0,f,c
  4277  007C8E  3203               	rrcf	(___fladd@b+2)^0,f,c
  4278  007C90  3202               	rrcf	(___fladd@b+1)^0,f,c
  4279  007C92  3201               	rrcf	___fladd@b^0,f,c
  4280  007C94  2A0F               	incf	___fladd@bexp^0,f,c
  4281  007C96  EFDA  F03E         	goto	l2896
  4282  007C9A                     l2860:
  4283  007C9A  5005               	movf	___fladd@a^0,w,c
  4284  007C9C  5C01               	subwf	___fladd@b^0,w,c
  4285  007C9E  5006               	movf	(___fladd@a+1)^0,w,c
  4286  007CA0  5802               	subwfb	(___fladd@b+1)^0,w,c
  4287  007CA2  5007               	movf	(___fladd@a+2)^0,w,c
  4288  007CA4  5803               	subwfb	(___fladd@b+2)^0,w,c
  4289  007CA6  5004               	movf	(___fladd@b+3)^0,w,c
  4290  007CA8  0A80               	xorlw	128
  4291  007CAA  6E09               	movwf	??___fladd^0,c
  4292  007CAC  5008               	movf	(___fladd@a+3)^0,w,c
  4293  007CAE  0A80               	xorlw	128
  4294  007CB0  5809               	subwfb	??___fladd^0,w,c
  4295  007CB2  B0D8               	btfsc	status,0,c
  4296  007CB4  EF5E  F03E         	goto	u2491
  4297  007CB8  EF60  F03E         	goto	u2490
  4298  007CBC                     u2491:
  4299  007CBC  EF8B  F03E         	goto	l2870
  4300  007CC0                     u2490:
  4301  007CC0  5001               	movf	___fladd@b^0,w,c
  4302  007CC2  5C05               	subwf	___fladd@a^0,w,c
  4303  007CC4  6E09               	movwf	??___fladd^0,c
  4304  007CC6  5002               	movf	(___fladd@b+1)^0,w,c
  4305  007CC8  5806               	subwfb	(___fladd@a+1)^0,w,c
  4306  007CCA  6E0A               	movwf	(??___fladd+1)^0,c
  4307  007CCC  5003               	movf	(___fladd@b+2)^0,w,c
  4308  007CCE  5807               	subwfb	(___fladd@a+2)^0,w,c
  4309  007CD0  6E0B               	movwf	(??___fladd+2)^0,c
  4310  007CD2  5004               	movf	(___fladd@b+3)^0,w,c
  4311  007CD4  5808               	subwfb	(___fladd@a+3)^0,w,c
  4312  007CD6  6E0C               	movwf	(??___fladd+3)^0,c
  4313  007CD8  0EFF               	movlw	255
  4314  007CDA  2409               	addwf	??___fladd^0,w,c
  4315  007CDC  6E01               	movwf	___fladd@b^0,c
  4316  007CDE  0EFF               	movlw	255
  4317  007CE0  200A               	addwfc	(??___fladd+1)^0,w,c
  4318  007CE2  6E02               	movwf	(___fladd@b+1)^0,c
  4319  007CE4  0EFF               	movlw	255
  4320  007CE6  200B               	addwfc	(??___fladd+2)^0,w,c
  4321  007CE8  6E03               	movwf	(___fladd@b+2)^0,c
  4322  007CEA  0EFF               	movlw	255
  4323  007CEC  200C               	addwfc	(??___fladd+3)^0,w,c
  4324  007CEE  6E04               	movwf	(___fladd@b+3)^0,c
  4325  007CF0  0E80               	movlw	128
  4326  007CF2  1A0D               	xorwf	___fladd@signs^0,f,c
  4327  007CF4  6C10               	negf	___fladd@grs^0,c
  4328  007CF6  5010               	movf	___fladd@grs^0,w,c
  4329  007CF8  A4D8               	btfss	status,2,c
  4330  007CFA  EF81  F03E         	goto	u2501
  4331  007CFE  EF83  F03E         	goto	u2500
  4332  007D02                     u2501:
  4333  007D02  EF93  F03E         	goto	l1132
  4334  007D06                     u2500:
  4335  007D06  0E01               	movlw	1
  4336  007D08  2601               	addwf	___fladd@b^0,f,c
  4337  007D0A  0E00               	movlw	0
  4338  007D0C  2202               	addwfc	(___fladd@b+1)^0,f,c
  4339  007D0E  2203               	addwfc	(___fladd@b+2)^0,f,c
  4340  007D10  2204               	addwfc	(___fladd@b+3)^0,f,c
  4341  007D12  EF93  F03E         	goto	l1132
  4342  007D16                     l2870:
  4343  007D16  5005               	movf	___fladd@a^0,w,c
  4344  007D18  5E01               	subwf	___fladd@b^0,f,c
  4345  007D1A  5006               	movf	(___fladd@a+1)^0,w,c
  4346  007D1C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4347  007D1E  5007               	movf	(___fladd@a+2)^0,w,c
  4348  007D20  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4349  007D22  5008               	movf	(___fladd@a+3)^0,w,c
  4350  007D24  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4351  007D26                     l1132:
  4352  007D26  5001               	movf	___fladd@b^0,w,c
  4353  007D28  1002               	iorwf	(___fladd@b+1)^0,w,c
  4354  007D2A  1003               	iorwf	(___fladd@b+2)^0,w,c
  4355  007D2C  1004               	iorwf	(___fladd@b+3)^0,w,c
  4356  007D2E  A4D8               	btfss	status,2,c
  4357  007D30  EF9C  F03E         	goto	u2511
  4358  007D34  EF9E  F03E         	goto	u2510
  4359  007D38                     u2511:
  4360  007D38  EFD3  F03E         	goto	l2894
  4361  007D3C                     u2510:
  4362  007D3C  5010               	movf	___fladd@grs^0,w,c
  4363  007D3E  A4D8               	btfss	status,2,c
  4364  007D40  EFA4  F03E         	goto	u2521
  4365  007D44  EFA6  F03E         	goto	u2520
  4366  007D48                     u2521:
  4367  007D48  EFD3  F03E         	goto	l2894
  4368  007D4C                     u2520:
  4369  007D4C  0E00               	movlw	0
  4370  007D4E  6E01               	movwf	?___fladd^0,c
  4371  007D50  0E00               	movlw	0
  4372  007D52  6E02               	movwf	(?___fladd+1)^0,c
  4373  007D54  0E00               	movlw	0
  4374  007D56  6E03               	movwf	(?___fladd+2)^0,c
  4375  007D58  0E00               	movlw	0
  4376  007D5A  6E04               	movwf	(?___fladd+3)^0,c
  4377  007D5C  EF6E  F03F         	goto	l1124
  4378  007D60                     l2878:
  4379  007D60  90D8               	bcf	status,0,c
  4380  007D62  3601               	rlcf	___fladd@b^0,f,c
  4381  007D64  3602               	rlcf	(___fladd@b+1)^0,f,c
  4382  007D66  3603               	rlcf	(___fladd@b+2)^0,f,c
  4383  007D68  3604               	rlcf	(___fladd@b+3)^0,f,c
  4384  007D6A  AE10               	btfss	___fladd@grs^0,7,c
  4385  007D6C  EFBA  F03E         	goto	u2531
  4386  007D70  EFBC  F03E         	goto	u2530
  4387  007D74                     u2531:
  4388  007D74  EFBD  F03E         	goto	l2884
  4389  007D78                     u2530:
  4390  007D78  8001               	bsf	___fladd@b^0,0,c
  4391  007D7A                     l2884:
  4392  007D7A  A010               	btfss	___fladd@grs^0,0,c
  4393  007D7C  EFC2  F03E         	goto	u2541
  4394  007D80  EFC4  F03E         	goto	u2540
  4395  007D84                     u2541:
  4396  007D84  EFC8  F03E         	goto	l2888
  4397  007D88                     u2540:
  4398  007D88  80D8               	bsf	status,0,c
  4399  007D8A  3610               	rlcf	___fladd@grs^0,f,c
  4400  007D8C  EFCA  F03E         	goto	l2890
  4401  007D90                     l2888:
  4402  007D90  90D8               	bcf	status,0,c
  4403  007D92  3610               	rlcf	___fladd@grs^0,f,c
  4404  007D94                     l2890:
  4405  007D94  500F               	movf	___fladd@bexp^0,w,c
  4406  007D96  B4D8               	btfsc	status,2,c
  4407  007D98  EFD0  F03E         	goto	u2551
  4408  007D9C  EFD2  F03E         	goto	u2550
  4409  007DA0                     u2551:
  4410  007DA0  EFD3  F03E         	goto	l2894
  4411  007DA4                     u2550:
  4412  007DA4  060F               	decf	___fladd@bexp^0,f,c
  4413  007DA6                     l2894:
  4414  007DA6  AE03               	btfss	(___fladd@b+2)^0,7,c
  4415  007DA8  EFD8  F03E         	goto	u2561
  4416  007DAC  EFDA  F03E         	goto	u2560
  4417  007DB0                     u2561:
  4418  007DB0  EFB0  F03E         	goto	l2878
  4419  007DB4                     u2560:
  4420  007DB4                     l2896:
  4421  007DB4  0E00               	movlw	0
  4422  007DB6  6E0E               	movwf	___fladd@aexp^0,c
  4423  007DB8  AE10               	btfss	___fladd@grs^0,7,c
  4424  007DBA  EFE1  F03E         	goto	u2571
  4425  007DBE  EFE3  F03E         	goto	u2570
  4426  007DC2                     u2571:
  4427  007DC2  EFFB  F03E         	goto	l1141
  4428  007DC6                     u2570:
  4429  007DC6  C010  F009         	movff	___fladd@grs,??___fladd
  4430  007DCA  0E7F               	movlw	127
  4431  007DCC  1609               	andwf	??___fladd^0,f,c
  4432  007DCE  B4D8               	btfsc	status,2,c
  4433  007DD0  EFEC  F03E         	goto	u2581
  4434  007DD4  EFEE  F03E         	goto	u2580
  4435  007DD8                     u2581:
  4436  007DD8  EFF2  F03E         	goto	l1142
  4437  007DDC                     u2580:
  4438  007DDC                     l2902:
  4439  007DDC  0E01               	movlw	1
  4440  007DDE  6E0E               	movwf	___fladd@aexp^0,c
  4441  007DE0  EFFB  F03E         	goto	l1141
  4442  007DE4                     l1142:
  4443  007DE4  A001               	btfss	___fladd@b^0,0,c
  4444  007DE6  EFF7  F03E         	goto	u2591
  4445  007DEA  EFF9  F03E         	goto	u2590
  4446  007DEE                     u2591:
  4447  007DEE  EFFB  F03E         	goto	l1141
  4448  007DF2                     u2590:
  4449  007DF2  EFEE  F03E         	goto	l2902
  4450  007DF6                     l1141:
  4451  007DF6  500E               	movf	___fladd@aexp^0,w,c
  4452  007DF8  B4D8               	btfsc	status,2,c
  4453  007DFA  EF01  F03F         	goto	u2601
  4454  007DFE  EF03  F03F         	goto	u2600
  4455  007E02                     u2601:
  4456  007E02  EF2E  F03F         	goto	l2914
  4457  007E06                     u2600:
  4458  007E06  0E01               	movlw	1
  4459  007E08  2601               	addwf	___fladd@b^0,f,c
  4460  007E0A  0E00               	movlw	0
  4461  007E0C  2202               	addwfc	(___fladd@b+1)^0,f,c
  4462  007E0E  2203               	addwfc	(___fladd@b+2)^0,f,c
  4463  007E10  2204               	addwfc	(___fladd@b+3)^0,f,c
  4464  007E12  A004               	btfss	(___fladd@b+3)^0,0,c
  4465  007E14  EF0E  F03F         	goto	u2611
  4466  007E18  EF10  F03F         	goto	u2610
  4467  007E1C                     u2611:
  4468  007E1C  EF2E  F03F         	goto	l2914
  4469  007E20                     u2610:
  4470  007E20  C001  F009         	movff	___fladd@b,??___fladd
  4471  007E24  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4472  007E28  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4473  007E2C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4474  007E30  340C               	rlcf	(??___fladd+3)^0,w,c
  4475  007E32  320C               	rrcf	(??___fladd+3)^0,f,c
  4476  007E34  320B               	rrcf	(??___fladd+2)^0,f,c
  4477  007E36  320A               	rrcf	(??___fladd+1)^0,f,c
  4478  007E38  3209               	rrcf	??___fladd^0,f,c
  4479  007E3A  C009  F001         	movff	??___fladd,___fladd@b
  4480  007E3E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4481  007E42  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4482  007E46  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4483  007E4A  280F               	incf	___fladd@bexp^0,w,c
  4484  007E4C  B4D8               	btfsc	status,2,c
  4485  007E4E  EF2B  F03F         	goto	u2621
  4486  007E52  EF2D  F03F         	goto	u2620
  4487  007E56                     u2621:
  4488  007E56  EF2E  F03F         	goto	l2914
  4489  007E5A                     u2620:
  4490  007E5A  2A0F               	incf	___fladd@bexp^0,f,c
  4491  007E5C                     l2914:
  4492  007E5C  280F               	incf	___fladd@bexp^0,w,c
  4493  007E5E  B4D8               	btfsc	status,2,c
  4494  007E60  EF34  F03F         	goto	u2631
  4495  007E64  EF36  F03F         	goto	u2630
  4496  007E68                     u2631:
  4497  007E68  EF3E  F03F         	goto	l2918
  4498  007E6C                     u2630:
  4499  007E6C  500F               	movf	___fladd@bexp^0,w,c
  4500  007E6E  A4D8               	btfss	status,2,c
  4501  007E70  EF3C  F03F         	goto	u2641
  4502  007E74  EF3E  F03F         	goto	u2640
  4503  007E78                     u2641:
  4504  007E78  EF50  F03F         	goto	l2922
  4505  007E7C                     u2640:
  4506  007E7C                     l2918:
  4507  007E7C  0E00               	movlw	0
  4508  007E7E  6E01               	movwf	___fladd@b^0,c
  4509  007E80  0E00               	movlw	0
  4510  007E82  6E02               	movwf	(___fladd@b+1)^0,c
  4511  007E84  0E00               	movlw	0
  4512  007E86  6E03               	movwf	(___fladd@b+2)^0,c
  4513  007E88  0E00               	movlw	0
  4514  007E8A  6E04               	movwf	(___fladd@b+3)^0,c
  4515  007E8C  500F               	movf	___fladd@bexp^0,w,c
  4516  007E8E  A4D8               	btfss	status,2,c
  4517  007E90  EF4C  F03F         	goto	u2651
  4518  007E94  EF4E  F03F         	goto	u2650
  4519  007E98                     u2651:
  4520  007E98  EF50  F03F         	goto	l2922
  4521  007E9C                     u2650:
  4522  007E9C  0E00               	movlw	0
  4523  007E9E  6E0D               	movwf	___fladd@signs^0,c
  4524  007EA0                     l2922:
  4525  007EA0  A00F               	btfss	___fladd@bexp^0,0,c
  4526  007EA2  EF55  F03F         	goto	u2661
  4527  007EA6  EF57  F03F         	goto	u2660
  4528  007EAA                     u2661:
  4529  007EAA  EF5A  F03F         	goto	l2926
  4530  007EAE                     u2660:
  4531  007EAE  8E03               	bsf	(___fladd@b+2)^0,7,c
  4532  007EB0  EF5B  F03F         	goto	l2928
  4533  007EB4                     l2926:
  4534  007EB4  9E03               	bcf	(___fladd@b+2)^0,7,c
  4535  007EB6                     l2928:
  4536  007EB6  90D8               	bcf	status,0,c
  4537  007EB8  300F               	rrcf	___fladd@bexp^0,w,c
  4538  007EBA  6E04               	movwf	(___fladd@b+3)^0,c
  4539  007EBC  AE0D               	btfss	___fladd@signs^0,7,c
  4540  007EBE  EF63  F03F         	goto	u2671
  4541  007EC2  EF65  F03F         	goto	u2670
  4542  007EC6                     u2671:
  4543  007EC6  EF66  F03F         	goto	l2934
  4544  007ECA                     u2670:
  4545  007ECA  8E04               	bsf	(___fladd@b+3)^0,7,c
  4546  007ECC                     l2934:
  4547  007ECC  C001  F001         	movff	___fladd@b,?___fladd
  4548  007ED0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4549  007ED4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4550  007ED8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4551  007EDC                     l1124:
  4552  007EDC  0012               	return		;funcret
  4553  007EDE                     __end_of___fladd:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function _lcdString *****************
  4557 ;; Defined at:
  4558 ;;		line 57 in file "lcd.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  msg             2   14[COMRAM] PTR unsigned char 
  4561 ;;		 -> STR_38(10), STR_37(13), STR_36(8), STR_35(17), 
  4562 ;;		 -> STR_34(8), STR_33(9), STR_32(9), STR_31(10), 
  4563 ;;		 -> STR_30(9), STR_29(9), STR_28(9), STR_27(7), 
  4564 ;;		 -> STR_26(8), STR_25(6), STR_24(8), STR_23(8), 
  4565 ;;		 -> STR_22(13), STR_21(8), STR_20(17), STR_19(8), 
  4566 ;;		 -> STR_18(10), STR_17(9), STR_16(9), STR_15(10), 
  4567 ;;		 -> STR_14(10), STR_13(9), STR_12(10), STR_11(11), 
  4568 ;;		 -> STR_10(8), STR_9(10), STR_8(9), STR_7(8), 
  4569 ;;		 -> STR_6(10), STR_5(9), STR_4(8), STR_3(10), 
  4570 ;;		 -> STR_2(11), STR_1(6), 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  i               2   18[COMRAM] int 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4582 ;;      Params:         2       0       0       0       0       0       0
  4583 ;;      Locals:         2       0       0       0       0       0       0
  4584 ;;      Temps:          2       0       0       0       0       0       0
  4585 ;;      Totals:         6       0       0       0       0       0       0
  4586 ;;Total ram usage:        6 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; Hardware stack levels required when called: 5
  4589 ;; This function calls:
  4590 ;;		_lcdChar
  4591 ;; This function is called by:
  4592 ;;		_qtdComidaLeitura
  4593 ;;		_leituraTeclas
  4594 ;;		_serial
  4595 ;;		_main
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text19
  4600  005CBC                     __ptext19:
  4601                           	callstack 0
  4602  005CBC                     _lcdString:
  4603                           	callstack 24
  4604  005CBC                     
  4605                           ;lcd.c: 58:  int i = 0;
  4606  005CBC  0E00               	movlw	0
  4607  005CBE  6E14               	movwf	(lcdString@i+1)^0,c
  4608  005CC0  0E00               	movlw	0
  4609  005CC2  6E13               	movwf	lcdString@i^0,c
  4610                           
  4611                           ;lcd.c: 59:  while (msg[i] != 0) {
  4612  005CC4  EF74  F02E         	goto	l3050
  4613  005CC8                     l3046:
  4614                           
  4615                           ;lcd.c: 60:   lcdChar(msg[i]);
  4616  005CC8  5013               	movf	lcdString@i^0,w,c
  4617  005CCA  240F               	addwf	lcdString@msg^0,w,c
  4618  005CCC  6E11               	movwf	??_lcdString^0,c
  4619  005CCE  5014               	movf	(lcdString@i+1)^0,w,c
  4620  005CD0  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4621  005CD2  6E12               	movwf	(??_lcdString+1)^0,c
  4622  005CD4  C011  FFF6         	movff	??_lcdString,tblptrl
  4623  005CD8  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4624  005CDC                     	if	0	;tblptru may be non-zero
  4625  005CDC                     	endif
  4626  005CDC                     	if	0	;tblptru may be non-zero
  4627  005CDC                     	endif
  4628  005CDC  0008               	tblrd		*
  4629  005CDE  50F5               	movf	tablat,w,c
  4630  005CE0  ECB6  F02C         	call	_lcdChar
  4631  005CE4                     
  4632                           ;lcd.c: 61:   i++;
  4633  005CE4  4A13               	infsnz	lcdString@i^0,f,c
  4634  005CE6  2A14               	incf	(lcdString@i+1)^0,f,c
  4635  005CE8                     l3050:
  4636                           
  4637                           ;lcd.c: 59:  while (msg[i] != 0) {
  4638  005CE8  5013               	movf	lcdString@i^0,w,c
  4639  005CEA  240F               	addwf	lcdString@msg^0,w,c
  4640  005CEC  6E11               	movwf	??_lcdString^0,c
  4641  005CEE  5014               	movf	(lcdString@i+1)^0,w,c
  4642  005CF0  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4643  005CF2  6E12               	movwf	(??_lcdString+1)^0,c
  4644  005CF4  C011  FFF6         	movff	??_lcdString,tblptrl
  4645  005CF8  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4646  005CFC                     	if	0	;tblptru may be non-zero
  4647  005CFC                     	endif
  4648  005CFC                     	if	0	;tblptru may be non-zero
  4649  005CFC                     	endif
  4650  005CFC  0008               	tblrd		*
  4651  005CFE  50F5               	movf	tablat,w,c
  4652  005D00  0900               	iorlw	0
  4653  005D02  A4D8               	btfss	status,2,c
  4654  005D04  EF86  F02E         	goto	u2921
  4655  005D08  EF88  F02E         	goto	u2920
  4656  005D0C                     u2921:
  4657  005D0C  EF64  F02E         	goto	l3046
  4658  005D10                     u2920:
  4659  005D10  0012               	return		;funcret
  4660  005D12                     __end_of_lcdString:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _lcdChar *****************
  4664 ;; Defined at:
  4665 ;;		line 52 in file "lcd.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  value           1    wreg     unsigned char 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  value           1   13[COMRAM] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4679 ;;      Params:         0       0       0       0       0       0       0
  4680 ;;      Locals:         1       0       0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0
  4682 ;;      Totals:         1       0       0       0       0       0       0
  4683 ;;Total ram usage:        1 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 4
  4686 ;; This function calls:
  4687 ;;		_delayMicro
  4688 ;;		_pushByte
  4689 ;; This function is called by:
  4690 ;;		_lcdString
  4691 ;;		_qtdComidaLeitura
  4692 ;;		_lcdNumber
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text20
  4697  00596C                     __ptext20:
  4698                           	callstack 0
  4699  00596C                     _lcdChar:
  4700                           	callstack 24
  4701                           
  4702                           ;incstack = 0
  4703                           ;lcdChar@value stored from wreg
  4704  00596C  6E0E               	movwf	lcdChar@value^0,c
  4705  00596E                     
  4706                           ;lcd.c: 53:  pushByte(value, 1);
  4707  00596E  0E00               	movlw	0
  4708  005970  6E0B               	movwf	(pushByte@rs+1)^0,c
  4709  005972  0E01               	movlw	1
  4710  005974  6E0A               	movwf	pushByte@rs^0,c
  4711  005976  500E               	movf	lcdChar@value^0,w,c
  4712  005978  ECE0  F02E         	call	_pushByte
  4713  00597C                     
  4714                           ;lcd.c: 54:  delayMicro(80);
  4715  00597C  0E00               	movlw	0
  4716  00597E  6E02               	movwf	(delayMicro@a+1)^0,c
  4717  005980  0E50               	movlw	80
  4718  005982  6E01               	movwf	delayMicro@a^0,c
  4719  005984  EC72  F02C         	call	_delayMicro	;wreg free
  4720  005988  0012               	return		;funcret
  4721  00598A                     __end_of_lcdChar:
  4722                           	callstack 0
  4723                           
  4724 ;; *************** function _lcdPosition *****************
  4725 ;; Defined at:
  4726 ;;		line 44 in file "lcd.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  line            2   14[COMRAM] int 
  4729 ;;  col             2   16[COMRAM] int 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0, cstack
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4741 ;;      Params:         4       0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0
  4744 ;;      Totals:         4       0       0       0       0       0       0
  4745 ;;Total ram usage:        4 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 5
  4748 ;; This function calls:
  4749 ;;		_lcdCommand
  4750 ;; This function is called by:
  4751 ;;		_qtdComidaLeitura
  4752 ;;		_leituraTeclas
  4753 ;;		_serial
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text21
  4758  005ADE                     __ptext21:
  4759                           	callstack 0
  4760  005ADE                     _lcdPosition:
  4761                           	callstack 24
  4762  005ADE                     
  4763                           ;lcd.c: 45:  if (line == 0) {
  4764  005ADE  500F               	movf	lcdPosition@line^0,w,c
  4765  005AE0  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  4766  005AE2  A4D8               	btfss	status,2,c
  4767  005AE4  EF76  F02D         	goto	u2901
  4768  005AE8  EF78  F02D         	goto	u2900
  4769  005AEC                     u2901:
  4770  005AEC  EF7D  F02D         	goto	l3040
  4771  005AF0                     u2900:
  4772  005AF0                     
  4773                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  4774  005AF0  5011               	movf	lcdPosition@col^0,w,c
  4775  005AF2  0B0F               	andlw	15
  4776  005AF4  0F80               	addlw	128
  4777  005AF6  ECA7  F02C         	call	_lcdCommand
  4778  005AFA                     l3040:
  4779                           
  4780                           ;lcd.c: 48:  if (line == 1) {
  4781  005AFA  040F               	decf	lcdPosition@line^0,w,c
  4782  005AFC  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  4783  005AFE  A4D8               	btfss	status,2,c
  4784  005B00  EF84  F02D         	goto	u2911
  4785  005B04  EF86  F02D         	goto	u2910
  4786  005B08                     u2911:
  4787  005B08  EF8B  F02D         	goto	l271
  4788  005B0C                     u2910:
  4789  005B0C                     
  4790                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  4791  005B0C  5011               	movf	lcdPosition@col^0,w,c
  4792  005B0E  0B0F               	andlw	15
  4793  005B10  0FC0               	addlw	192
  4794  005B12  ECA7  F02C         	call	_lcdCommand
  4795  005B16                     l271:
  4796  005B16  0012               	return		;funcret
  4797  005B18                     __end_of_lcdPosition:
  4798                           	callstack 0
  4799                           
  4800 ;; *************** function _kpReadKey *****************
  4801 ;; Defined at:
  4802 ;;		line 17 in file "keypad.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;		None
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  i               2    3[COMRAM] int 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      unsigned char 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4816 ;;      Params:         0       0       0       0       0       0       0
  4817 ;;      Locals:         2       0       0       0       0       0       0
  4818 ;;      Temps:          3       0       0       0       0       0       0
  4819 ;;      Totals:         5       0       0       0       0       0       0
  4820 ;;Total ram usage:        5 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_leituraTeclas
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text22
  4830  005F54                     __ptext22:
  4831                           	callstack 0
  4832  005F54                     _kpReadKey:
  4833                           	callstack 29
  4834  005F54                     
  4835                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  4836  005F54  0E00               	movlw	0
  4837  005F56  6E05               	movwf	(kpReadKey@i+1)^0,c
  4838  005F58  0E00               	movlw	0
  4839  005F5A  6E04               	movwf	kpReadKey@i^0,c
  4840  005F5C                     l1770:
  4841                           
  4842                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  4843  005F5C  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  4844  005F60  0E01               	movlw	1
  4845  005F62  6E02               	movwf	(??_kpReadKey+1)^0,c
  4846  005F64  0E00               	movlw	0
  4847  005F66  6E03               	movwf	(??_kpReadKey+2)^0,c
  4848  005F68  2A01               	incf	??_kpReadKey^0,f,c
  4849  005F6A  EFBA  F02F         	goto	u1134
  4850  005F6E                     u1135:
  4851  005F6E  90D8               	bcf	status,0,c
  4852  005F70  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  4853  005F72  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  4854  005F74                     u1134:
  4855  005F74  2E01               	decfsz	??_kpReadKey^0,f,c
  4856  005F76  EFB7  F02F         	goto	u1135
  4857  005F7A  5044               	movf	_keys^0,w,c
  4858  005F7C  1602               	andwf	(??_kpReadKey+1)^0,f,c
  4859  005F7E  5045               	movf	(_keys+1)^0,w,c
  4860  005F80  1603               	andwf	(??_kpReadKey+2)^0,f,c
  4861  005F82  5002               	movf	(??_kpReadKey+1)^0,w,c
  4862  005F84  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  4863  005F86  B4D8               	btfsc	status,2,c
  4864  005F88  EFC8  F02F         	goto	u1141
  4865  005F8C  EFCA  F02F         	goto	u1140
  4866  005F90                     u1141:
  4867  005F90  EFD4  F02F         	goto	l1776
  4868  005F94                     u1140:
  4869  005F94                     
  4870                           ;keypad.c: 21:    return charKey[i];
  4871  005F94  0EEF               	movlw	low _charKey
  4872  005F96  2404               	addwf	kpReadKey@i^0,w,c
  4873  005F98  6EF6               	movwf	tblptrl,c
  4874  005F9A  0E7E               	movlw	high _charKey
  4875  005F9C  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  4876  005F9E  6EF7               	movwf	tblptrh,c
  4877  005FA0                     	if	0	;There are less than 3 active tblptr bytes
  4878  005FA0                     	endif
  4879  005FA0  0008               	tblrd		*
  4880  005FA2  50F5               	movf	tablat,w,c
  4881  005FA4  EFE5  F02F         	goto	l218
  4882  005FA8                     l1776:
  4883                           
  4884                           ;keypad.c: 23:  }
  4885  005FA8  4A04               	infsnz	kpReadKey@i^0,f,c
  4886  005FAA  2A05               	incf	(kpReadKey@i+1)^0,f,c
  4887  005FAC  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  4888  005FAE  EFE2  F02F         	goto	u1151
  4889  005FB2  5005               	movf	(kpReadKey@i+1)^0,w,c
  4890  005FB4  E109               	bnz	u1150
  4891  005FB6  0E0A               	movlw	10
  4892  005FB8  5C04               	subwf	kpReadKey@i^0,w,c
  4893  005FBA  A0D8               	btfss	status,0,c
  4894  005FBC  EFE2  F02F         	goto	u1151
  4895  005FC0  EFE4  F02F         	goto	u1150
  4896  005FC4                     u1151:
  4897  005FC4  EFAE  F02F         	goto	l1770
  4898  005FC8                     u1150:
  4899  005FC8                     
  4900                           ;keypad.c: 25:  return 0;
  4901  005FC8  0E00               	movlw	0
  4902  005FCA                     l218:
  4903  005FCA  0012               	return		;funcret
  4904  005FCC                     __end_of_kpReadKey:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _kpRead *****************
  4908 ;; Defined at:
  4909 ;;		line 14 in file "keypad.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  2    0[COMRAM] unsigned int 
  4916 ;; Registers used:
  4917 ;;		None
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4923 ;;      Params:         2       0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0
  4926 ;;      Totals:         2       0       0       0       0       0       0
  4927 ;;Total ram usage:        2 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_leituraTeclas
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text23
  4937  0058EE                     __ptext23:
  4938                           	callstack 0
  4939  0058EE                     _kpRead:
  4940                           	callstack 29
  4941  0058EE                     
  4942                           ;keypad.c: 15:     return keys;
  4943  0058EE  C044  F001         	movff	_keys,?_kpRead
  4944  0058F2  C045  F002         	movff	_keys+1,?_kpRead+1
  4945  0058F6  0012               	return		;funcret
  4946  0058F8                     __end_of_kpRead:
  4947                           	callstack 0
  4948                           
  4949 ;; *************** function _kpDebounce *****************
  4950 ;; Defined at:
  4951 ;;		line 27 in file "keypad.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  i               2   12[COMRAM] int 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4965 ;;      Params:         0       0       0       0       0       0       0
  4966 ;;      Locals:         2       0       0       0       0       0       0
  4967 ;;      Temps:          3       0       0       0       0       0       0
  4968 ;;      Totals:         5       0       0       0       0       0       0
  4969 ;;Total ram usage:        5 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 3
  4972 ;; This function calls:
  4973 ;;		_digitalRead
  4974 ;;		_soWrite
  4975 ;; This function is called by:
  4976 ;;		_leituraTeclas
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text24
  4981  006410                     __ptext24:
  4982                           	callstack 0
  4983  006410                     _kpDebounce:
  4984                           	callstack 26
  4985  006410                     
  4986                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  4987  006410  0E00               	movlw	0
  4988  006412  6E43               	movwf	(kpDebounce@newRead+1)^0,c
  4989  006414  0E00               	movlw	0
  4990  006416  6E42               	movwf	kpDebounce@newRead^0,c
  4991                           
  4992                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  4993  006418  0E00               	movlw	0
  4994  00641A  6E0E               	movwf	(kpDebounce@i+1)^0,c
  4995  00641C  0E00               	movlw	0
  4996  00641E  6E0D               	movwf	kpDebounce@i^0,c
  4997  006420                     l3006:
  4998  006420  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  4999  006422  EF1C  F032         	goto	u2821
  5000  006426  500E               	movf	(kpDebounce@i+1)^0,w,c
  5001  006428  E109               	bnz	u2820
  5002  00642A  0E05               	movlw	5
  5003  00642C  5C0D               	subwf	kpDebounce@i^0,w,c
  5004  00642E  A0D8               	btfss	status,0,c
  5005  006430  EF1C  F032         	goto	u2821
  5006  006434  EF1E  F032         	goto	u2820
  5007  006438                     u2821:
  5008  006438  EF20  F032         	goto	l3010
  5009  00643C                     u2820:
  5010  00643C  EF81  F032         	goto	l3022
  5011  006440                     l3010:
  5012                           
  5013                           ;keypad.c: 35:       soWrite(1<<(i+3));
  5014  006440  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  5015  006444  0E03               	movlw	3
  5016  006446  260A               	addwf	??_kpDebounce^0,f,c
  5017  006448  0E01               	movlw	1
  5018  00644A  6E0B               	movwf	(??_kpDebounce+1)^0,c
  5019  00644C  0E00               	movlw	0
  5020  00644E  6E0C               	movwf	(??_kpDebounce+2)^0,c
  5021  006450  2A0A               	incf	??_kpDebounce^0,f,c
  5022  006452  EF2E  F032         	goto	u2834
  5023  006456                     u2835:
  5024  006456  90D8               	bcf	status,0,c
  5025  006458  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  5026  00645A  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  5027  00645C                     u2834:
  5028  00645C  2E0A               	decfsz	??_kpDebounce^0,f,c
  5029  00645E  EF2B  F032         	goto	u2835
  5030  006462  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  5031  006466  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  5032  00646A  EC0F  F02E         	call	_soWrite	;wreg free
  5033                           
  5034                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  5035  00646E  0E00               	movlw	0
  5036  006470  6E02               	movwf	(digitalRead@pin+1)^0,c
  5037  006472  0E0A               	movlw	10
  5038  006474  6E01               	movwf	digitalRead@pin^0,c
  5039  006476  EC46  F033         	call	_digitalRead	;wreg free
  5040  00647A  5001               	movf	?_digitalRead^0,w,c
  5041  00647C  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5042  00647E  B4D8               	btfsc	status,2,c
  5043  006480  EF44  F032         	goto	u2841
  5044  006484  EF46  F032         	goto	u2840
  5045  006488                     u2841:
  5046  006488  EF59  F032         	goto	l3014
  5047  00648C                     u2840:
  5048  00648C                     
  5049                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  5050  00648C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  5051  006490  0E01               	movlw	1
  5052  006492  6E0B               	movwf	(??_kpDebounce+1)^0,c
  5053  006494  0E00               	movlw	0
  5054  006496  6E0C               	movwf	(??_kpDebounce+2)^0,c
  5055  006498  2A0A               	incf	??_kpDebounce^0,f,c
  5056  00649A  EF52  F032         	goto	u2854
  5057  00649E                     u2855:
  5058  00649E  90D8               	bcf	status,0,c
  5059  0064A0  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  5060  0064A2  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  5061  0064A4                     u2854:
  5062  0064A4  2E0A               	decfsz	??_kpDebounce^0,f,c
  5063  0064A6  EF4F  F032         	goto	u2855
  5064  0064AA  500B               	movf	(??_kpDebounce+1)^0,w,c
  5065  0064AC  1242               	iorwf	kpDebounce@newRead^0,f,c
  5066  0064AE  500C               	movf	(??_kpDebounce+2)^0,w,c
  5067  0064B0  1243               	iorwf	(kpDebounce@newRead+1)^0,f,c
  5068  0064B2                     l3014:
  5069                           
  5070                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  5071  0064B2  0E00               	movlw	0
  5072  0064B4  6E02               	movwf	(digitalRead@pin+1)^0,c
  5073  0064B6  0E09               	movlw	9
  5074  0064B8  6E01               	movwf	digitalRead@pin^0,c
  5075  0064BA  EC46  F033         	call	_digitalRead	;wreg free
  5076  0064BE  5001               	movf	?_digitalRead^0,w,c
  5077  0064C0  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5078  0064C2  B4D8               	btfsc	status,2,c
  5079  0064C4  EF66  F032         	goto	u2861
  5080  0064C8  EF68  F032         	goto	u2860
  5081  0064CC                     u2861:
  5082  0064CC  EF7D  F032         	goto	l3018
  5083  0064D0                     u2860:
  5084  0064D0                     
  5085                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  5086  0064D0  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  5087  0064D4  0E05               	movlw	5
  5088  0064D6  260A               	addwf	??_kpDebounce^0,f,c
  5089  0064D8  0E01               	movlw	1
  5090  0064DA  6E0B               	movwf	(??_kpDebounce+1)^0,c
  5091  0064DC  0E00               	movlw	0
  5092  0064DE  6E0C               	movwf	(??_kpDebounce+2)^0,c
  5093  0064E0  2A0A               	incf	??_kpDebounce^0,f,c
  5094  0064E2  EF76  F032         	goto	u2874
  5095  0064E6                     u2875:
  5096  0064E6  90D8               	bcf	status,0,c
  5097  0064E8  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  5098  0064EA  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  5099  0064EC                     u2874:
  5100  0064EC  2E0A               	decfsz	??_kpDebounce^0,f,c
  5101  0064EE  EF73  F032         	goto	u2875
  5102  0064F2  500B               	movf	(??_kpDebounce+1)^0,w,c
  5103  0064F4  1242               	iorwf	kpDebounce@newRead^0,f,c
  5104  0064F6  500C               	movf	(??_kpDebounce+2)^0,w,c
  5105  0064F8  1243               	iorwf	(kpDebounce@newRead+1)^0,f,c
  5106  0064FA                     l3018:
  5107                           
  5108                           ;keypad.c: 42:     }
  5109  0064FA  4A0D               	infsnz	kpDebounce@i^0,f,c
  5110  0064FC  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  5111  0064FE  EF10  F032         	goto	l3006
  5112  006502                     l3022:
  5113                           
  5114                           ;keypad.c: 43:     if (oldRead == newRead) {
  5115  006502  5042               	movf	kpDebounce@newRead^0,w,c
  5116  006504  1840               	xorwf	kpDebounce@oldRead^0,w,c
  5117  006506  E107               	bnz	u2881
  5118  006508  5043               	movf	(kpDebounce@newRead+1)^0,w,c
  5119  00650A  1841               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  5120  00650C  A4D8               	btfss	status,2,c
  5121  00650E  EF8B  F032         	goto	u2881
  5122  006512  EF8D  F032         	goto	u2880
  5123  006516                     u2881:
  5124  006516  EF90  F032         	goto	l3026
  5125  00651A                     u2880:
  5126  00651A                     
  5127                           ;keypad.c: 44:         tempo--;
  5128  00651A  064C               	decf	kpDebounce@tempo^0,f,c
  5129                           
  5130                           ;keypad.c: 45:     } else {
  5131  00651C  EF96  F032         	goto	l232
  5132  006520                     l3026:
  5133                           
  5134                           ;keypad.c: 46:         tempo = 1;
  5135  006520  0E01               	movlw	1
  5136  006522  6E4C               	movwf	kpDebounce@tempo^0,c
  5137  006524                     
  5138                           ;keypad.c: 47:         oldRead = newRead;
  5139  006524  C042  F040         	movff	kpDebounce@newRead,kpDebounce@oldRead
  5140  006528  C043  F041         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  5141  00652C                     l232:
  5142                           
  5143                           ;keypad.c: 49:     if (tempo == 0) {
  5144  00652C  504C               	movf	kpDebounce@tempo^0,w,c
  5145  00652E  A4D8               	btfss	status,2,c
  5146  006530  EF9C  F032         	goto	u2891
  5147  006534  EF9E  F032         	goto	u2890
  5148  006538                     u2891:
  5149  006538  EFA2  F032         	goto	l234
  5150  00653C                     u2890:
  5151  00653C                     
  5152                           ;keypad.c: 50:         keys = oldRead;
  5153  00653C  C040  F044         	movff	kpDebounce@oldRead,_keys
  5154  006540  C041  F045         	movff	kpDebounce@oldRead+1,_keys+1
  5155  006544                     l234:
  5156  006544  0012               	return		;funcret
  5157  006546                     __end_of_kpDebounce:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _digitalRead *****************
  5161 ;; Defined at:
  5162 ;;		line 39 in file "io.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  pin             2    0[COMRAM] int 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  2    0[COMRAM] int 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5176 ;;      Params:         2       0       0       0       0       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0
  5178 ;;      Temps:          3       0       0       0       0       0       0
  5179 ;;      Totals:         5       0       0       0       0       0       0
  5180 ;;Total ram usage:        5 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_kpDebounce
  5186 ;;		_read_SCL
  5187 ;;		_read_SDA
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text25
  5192  00668C                     __ptext25:
  5193                           	callstack 0
  5194  00668C                     _digitalRead:
  5195                           	callstack 28
  5196  00668C                     
  5197                           ;io.c: 40:     if(pin <8){
  5198  00668C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5199  00668E  EF54  F033         	goto	u2160
  5200  006692  5002               	movf	(digitalRead@pin+1)^0,w,c
  5201  006694  E107               	bnz	u2161
  5202  006696  0E08               	movlw	8
  5203  006698  5C01               	subwf	digitalRead@pin^0,w,c
  5204  00669A  B0D8               	btfsc	status,0,c
  5205  00669C  EF52  F033         	goto	u2161
  5206  0066A0  EF54  F033         	goto	u2160
  5207  0066A4                     u2161:
  5208  0066A4  EF68  F033         	goto	l2640
  5209  0066A8                     u2160:
  5210  0066A8                     
  5211                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  5212  0066A8  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5213  0066AC  0E01               	movlw	1
  5214  0066AE  6E04               	movwf	(??_digitalRead+1)^0,c
  5215  0066B0  2A03               	incf	??_digitalRead^0,f,c
  5216  0066B2  EF5D  F033         	goto	u2174
  5217  0066B6                     u2175:
  5218  0066B6  90D8               	bcf	status,0,c
  5219  0066B8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5220  0066BA                     u2174:
  5221  0066BA  2E03               	decfsz	??_digitalRead^0,f,c
  5222  0066BC  EF5B  F033         	goto	u2175
  5223  0066C0  5004               	movf	(??_digitalRead+1)^0,w,c
  5224  0066C2  1480               	andwf	128,w,c	;volatile
  5225  0066C4  6E05               	movwf	(??_digitalRead+2)^0,c
  5226  0066C6  5005               	movf	(??_digitalRead+2)^0,w,c
  5227  0066C8  6E01               	movwf	?_digitalRead^0,c
  5228  0066CA  6A02               	clrf	(?_digitalRead+1)^0,c
  5229  0066CC  EFFA  F033         	goto	l165
  5230  0066D0                     l2640:
  5231  0066D0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5232  0066D2  EF76  F033         	goto	u2180
  5233  0066D6  5002               	movf	(digitalRead@pin+1)^0,w,c
  5234  0066D8  E107               	bnz	u2181
  5235  0066DA  0E10               	movlw	16
  5236  0066DC  5C01               	subwf	digitalRead@pin^0,w,c
  5237  0066DE  B0D8               	btfsc	status,0,c
  5238  0066E0  EF74  F033         	goto	u2181
  5239  0066E4  EF76  F033         	goto	u2180
  5240  0066E8                     u2181:
  5241  0066E8  EF8C  F033         	goto	l2648
  5242  0066EC                     u2180:
  5243  0066EC                     
  5244                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  5245  0066EC  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5246  0066F0  0EF8               	movlw	-8
  5247  0066F2  2603               	addwf	??_digitalRead^0,f,c
  5248  0066F4  0E01               	movlw	1
  5249  0066F6  6E04               	movwf	(??_digitalRead+1)^0,c
  5250  0066F8  2A03               	incf	??_digitalRead^0,f,c
  5251  0066FA  EF81  F033         	goto	u2194
  5252  0066FE                     u2195:
  5253  0066FE  90D8               	bcf	status,0,c
  5254  006700  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5255  006702                     u2194:
  5256  006702  2E03               	decfsz	??_digitalRead^0,f,c
  5257  006704  EF7F  F033         	goto	u2195
  5258  006708  5004               	movf	(??_digitalRead+1)^0,w,c
  5259  00670A  1481               	andwf	129,w,c	;volatile
  5260  00670C  6E05               	movwf	(??_digitalRead+2)^0,c
  5261  00670E  5005               	movf	(??_digitalRead+2)^0,w,c
  5262  006710  6E01               	movwf	?_digitalRead^0,c
  5263  006712  6A02               	clrf	(?_digitalRead+1)^0,c
  5264  006714  EFFA  F033         	goto	l165
  5265  006718                     l2648:
  5266  006718  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5267  00671A  EF9A  F033         	goto	u2200
  5268  00671E  5002               	movf	(digitalRead@pin+1)^0,w,c
  5269  006720  E107               	bnz	u2201
  5270  006722  0E18               	movlw	24
  5271  006724  5C01               	subwf	digitalRead@pin^0,w,c
  5272  006726  B0D8               	btfsc	status,0,c
  5273  006728  EF98  F033         	goto	u2201
  5274  00672C  EF9A  F033         	goto	u2200
  5275  006730                     u2201:
  5276  006730  EFB0  F033         	goto	l2656
  5277  006734                     u2200:
  5278  006734                     
  5279                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  5280  006734  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5281  006738  0EF0               	movlw	-16
  5282  00673A  2603               	addwf	??_digitalRead^0,f,c
  5283  00673C  0E01               	movlw	1
  5284  00673E  6E04               	movwf	(??_digitalRead+1)^0,c
  5285  006740  2A03               	incf	??_digitalRead^0,f,c
  5286  006742  EFA5  F033         	goto	u2214
  5287  006746                     u2215:
  5288  006746  90D8               	bcf	status,0,c
  5289  006748  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5290  00674A                     u2214:
  5291  00674A  2E03               	decfsz	??_digitalRead^0,f,c
  5292  00674C  EFA3  F033         	goto	u2215
  5293  006750  5004               	movf	(??_digitalRead+1)^0,w,c
  5294  006752  1482               	andwf	130,w,c	;volatile
  5295  006754  6E05               	movwf	(??_digitalRead+2)^0,c
  5296  006756  5005               	movf	(??_digitalRead+2)^0,w,c
  5297  006758  6E01               	movwf	?_digitalRead^0,c
  5298  00675A  6A02               	clrf	(?_digitalRead+1)^0,c
  5299  00675C  EFFA  F033         	goto	l165
  5300  006760                     l2656:
  5301  006760  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5302  006762  EFBE  F033         	goto	u2220
  5303  006766  5002               	movf	(digitalRead@pin+1)^0,w,c
  5304  006768  E107               	bnz	u2221
  5305  00676A  0E20               	movlw	32
  5306  00676C  5C01               	subwf	digitalRead@pin^0,w,c
  5307  00676E  B0D8               	btfsc	status,0,c
  5308  006770  EFBC  F033         	goto	u2221
  5309  006774  EFBE  F033         	goto	u2220
  5310  006778                     u2221:
  5311  006778  EFD4  F033         	goto	l2664
  5312  00677C                     u2220:
  5313  00677C                     
  5314                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  5315  00677C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5316  006780  0EE8               	movlw	-24
  5317  006782  2603               	addwf	??_digitalRead^0,f,c
  5318  006784  0E01               	movlw	1
  5319  006786  6E04               	movwf	(??_digitalRead+1)^0,c
  5320  006788  2A03               	incf	??_digitalRead^0,f,c
  5321  00678A  EFC9  F033         	goto	u2234
  5322  00678E                     u2235:
  5323  00678E  90D8               	bcf	status,0,c
  5324  006790  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5325  006792                     u2234:
  5326  006792  2E03               	decfsz	??_digitalRead^0,f,c
  5327  006794  EFC7  F033         	goto	u2235
  5328  006798  5004               	movf	(??_digitalRead+1)^0,w,c
  5329  00679A  1483               	andwf	131,w,c	;volatile
  5330  00679C  6E05               	movwf	(??_digitalRead+2)^0,c
  5331  00679E  5005               	movf	(??_digitalRead+2)^0,w,c
  5332  0067A0  6E01               	movwf	?_digitalRead^0,c
  5333  0067A2  6A02               	clrf	(?_digitalRead+1)^0,c
  5334  0067A4  EFFA  F033         	goto	l165
  5335  0067A8                     l2664:
  5336  0067A8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5337  0067AA  EFE2  F033         	goto	u2240
  5338  0067AE  5002               	movf	(digitalRead@pin+1)^0,w,c
  5339  0067B0  E107               	bnz	u2241
  5340  0067B2  0E28               	movlw	40
  5341  0067B4  5C01               	subwf	digitalRead@pin^0,w,c
  5342  0067B6  B0D8               	btfsc	status,0,c
  5343  0067B8  EFE0  F033         	goto	u2241
  5344  0067BC  EFE2  F033         	goto	u2240
  5345  0067C0                     u2241:
  5346  0067C0  EFF8  F033         	goto	l170
  5347  0067C4                     u2240:
  5348  0067C4                     
  5349                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  5350  0067C4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5351  0067C8  0EE0               	movlw	-32
  5352  0067CA  2603               	addwf	??_digitalRead^0,f,c
  5353  0067CC  0E01               	movlw	1
  5354  0067CE  6E04               	movwf	(??_digitalRead+1)^0,c
  5355  0067D0  2A03               	incf	??_digitalRead^0,f,c
  5356  0067D2  EFED  F033         	goto	u2254
  5357  0067D6                     u2255:
  5358  0067D6  90D8               	bcf	status,0,c
  5359  0067D8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5360  0067DA                     u2254:
  5361  0067DA  2E03               	decfsz	??_digitalRead^0,f,c
  5362  0067DC  EFEB  F033         	goto	u2255
  5363  0067E0  5004               	movf	(??_digitalRead+1)^0,w,c
  5364  0067E2  1484               	andwf	132,w,c	;volatile
  5365  0067E4  6E05               	movwf	(??_digitalRead+2)^0,c
  5366  0067E6  5005               	movf	(??_digitalRead+2)^0,w,c
  5367  0067E8  6E01               	movwf	?_digitalRead^0,c
  5368  0067EA  6A02               	clrf	(?_digitalRead+1)^0,c
  5369  0067EC  EFFA  F033         	goto	l165
  5370  0067F0                     l170:
  5371  0067F0                     
  5372                           ;io.c: 51:     return -1;
  5373  0067F0  6801               	setf	?_digitalRead^0,c
  5374  0067F2  6802               	setf	(?_digitalRead+1)^0,c
  5375  0067F4                     l165:
  5376  0067F4  0012               	return		;funcret
  5377  0067F6                     __end_of_digitalRead:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _lcdInit *****************
  5381 ;; Defined at:
  5382 ;;		line 72 in file "lcd.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, status,0, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5396 ;;      Params:         0       0       0       0       0       0       0
  5397 ;;      Locals:         0       0       0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0
  5399 ;;      Totals:         0       0       0       0       0       0       0
  5400 ;;Total ram usage:        0 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; Hardware stack levels required when called: 5
  5403 ;; This function calls:
  5404 ;;		_delayMicro
  5405 ;;		_delayMili
  5406 ;;		_lcdCommand
  5407 ;;		_pinMode
  5408 ;;		_pushNibble
  5409 ;;		_soInit
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text26
  5416  00619A                     __ptext26:
  5417                           	callstack 0
  5418  00619A                     _lcdInit:
  5419                           	callstack 25
  5420  00619A                     
  5421                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  5422  00619A  0E00               	movlw	0
  5423  00619C  6E02               	movwf	(pinMode@pin+1)^0,c
  5424  00619E  0E1C               	movlw	28
  5425  0061A0  6E01               	movwf	pinMode@pin^0,c
  5426  0061A2  0E00               	movlw	0
  5427  0061A4  6E04               	movwf	(pinMode@type+1)^0,c
  5428  0061A6  0E00               	movlw	0
  5429  0061A8  6E03               	movwf	pinMode@type^0,c
  5430  0061AA  ECE7  F036         	call	_pinMode	;wreg free
  5431                           
  5432                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  5433  0061AE  0E00               	movlw	0
  5434  0061B0  6E02               	movwf	(pinMode@pin+1)^0,c
  5435  0061B2  0E1D               	movlw	29
  5436  0061B4  6E01               	movwf	pinMode@pin^0,c
  5437  0061B6  0E00               	movlw	0
  5438  0061B8  6E04               	movwf	(pinMode@type+1)^0,c
  5439  0061BA  0E00               	movlw	0
  5440  0061BC  6E03               	movwf	pinMode@type^0,c
  5441  0061BE  ECE7  F036         	call	_pinMode	;wreg free
  5442                           
  5443                           ;lcd.c: 75:  soInit();
  5444  0061C2  EC8C  F02D         	call	_soInit	;wreg free
  5445                           
  5446                           ;lcd.c: 76:  delayMili(15);
  5447  0061C6  0E00               	movlw	0
  5448  0061C8  6E02               	movwf	(delayMili@a+1)^0,c
  5449  0061CA  0E0F               	movlw	15
  5450  0061CC  6E01               	movwf	delayMili@a^0,c
  5451  0061CE  EC3E  F02D         	call	_delayMili	;wreg free
  5452                           
  5453                           ;lcd.c: 78:  pushNibble(0x03, 0);
  5454  0061D2  0E00               	movlw	0
  5455  0061D4  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5456  0061D6  0E00               	movlw	0
  5457  0061D8  6E0A               	movwf	pushNibble@rs^0,c
  5458  0061DA  0E03               	movlw	3
  5459  0061DC  ECD6  F02C         	call	_pushNibble
  5460                           
  5461                           ;lcd.c: 79:  delayMili(5);
  5462  0061E0  0E00               	movlw	0
  5463  0061E2  6E02               	movwf	(delayMili@a+1)^0,c
  5464  0061E4  0E05               	movlw	5
  5465  0061E6  6E01               	movwf	delayMili@a^0,c
  5466  0061E8  EC3E  F02D         	call	_delayMili	;wreg free
  5467                           
  5468                           ;lcd.c: 80:  pushNibble(0x03, 0);
  5469  0061EC  0E00               	movlw	0
  5470  0061EE  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5471  0061F0  0E00               	movlw	0
  5472  0061F2  6E0A               	movwf	pushNibble@rs^0,c
  5473  0061F4  0E03               	movlw	3
  5474  0061F6  ECD6  F02C         	call	_pushNibble
  5475  0061FA                     
  5476                           ;lcd.c: 81:  delayMicro(160);
  5477  0061FA  0E00               	movlw	0
  5478  0061FC  6E02               	movwf	(delayMicro@a+1)^0,c
  5479  0061FE  0EA0               	movlw	160
  5480  006200  6E01               	movwf	delayMicro@a^0,c
  5481  006202  EC72  F02C         	call	_delayMicro	;wreg free
  5482  006206                     
  5483                           ;lcd.c: 82:  pushNibble(0x03, 0);
  5484  006206  0E00               	movlw	0
  5485  006208  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5486  00620A  0E00               	movlw	0
  5487  00620C  6E0A               	movwf	pushNibble@rs^0,c
  5488  00620E  0E03               	movlw	3
  5489  006210  ECD6  F02C         	call	_pushNibble
  5490                           
  5491                           ;lcd.c: 83:  delayMicro(160);
  5492  006214  0E00               	movlw	0
  5493  006216  6E02               	movwf	(delayMicro@a+1)^0,c
  5494  006218  0EA0               	movlw	160
  5495  00621A  6E01               	movwf	delayMicro@a^0,c
  5496  00621C  EC72  F02C         	call	_delayMicro	;wreg free
  5497  006220                     
  5498                           ;lcd.c: 85:  pushNibble(0x02, 0);
  5499  006220  0E00               	movlw	0
  5500  006222  6E0B               	movwf	(pushNibble@rs+1)^0,c
  5501  006224  0E00               	movlw	0
  5502  006226  6E0A               	movwf	pushNibble@rs^0,c
  5503  006228  0E02               	movlw	2
  5504  00622A  ECD6  F02C         	call	_pushNibble
  5505  00622E                     
  5506                           ;lcd.c: 86:  delayMili(10);
  5507  00622E  0E00               	movlw	0
  5508  006230  6E02               	movwf	(delayMili@a+1)^0,c
  5509  006232  0E0A               	movlw	10
  5510  006234  6E01               	movwf	delayMili@a^0,c
  5511  006236  EC3E  F02D         	call	_delayMili	;wreg free
  5512  00623A                     
  5513                           ;lcd.c: 88:  lcdCommand(0x28);
  5514  00623A  0E28               	movlw	40
  5515  00623C  ECA7  F02C         	call	_lcdCommand
  5516  006240                     
  5517                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  5518  006240  0E0C               	movlw	12
  5519  006242  ECA7  F02C         	call	_lcdCommand
  5520  006246                     
  5521                           ;lcd.c: 90:  lcdCommand(0x01);
  5522  006246  0E01               	movlw	1
  5523  006248  ECA7  F02C         	call	_lcdCommand
  5524  00624C  0012               	return		;funcret
  5525  00624E                     __end_of_lcdInit:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function _pushNibble *****************
  5529 ;; Defined at:
  5530 ;;		line 25 in file "lcd.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  value           1    wreg     unsigned char 
  5533 ;;  rs              2    9[COMRAM] int 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  value           1   11[COMRAM] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5545 ;;      Params:         2       0       0       0       0       0       0
  5546 ;;      Locals:         1       0       0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0
  5548 ;;      Totals:         3       0       0       0       0       0       0
  5549 ;;Total ram usage:        3 bytes
  5550 ;; Hardware stack levels used: 1
  5551 ;; Hardware stack levels required when called: 3
  5552 ;; This function calls:
  5553 ;;		_digitalWrite
  5554 ;;		_pulseEnablePin
  5555 ;;		_soWrite
  5556 ;; This function is called by:
  5557 ;;		_lcdInit
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           	psect	text27
  5562  0059AC                     __ptext27:
  5563                           	callstack 0
  5564  0059AC                     _pushNibble:
  5565                           	callstack 26
  5566                           
  5567                           ;incstack = 0
  5568                           ;pushNibble@value stored from wreg
  5569  0059AC  6E0C               	movwf	pushNibble@value^0,c
  5570  0059AE                     
  5571                           ;lcd.c: 26:  soWrite(value);
  5572  0059AE  C00C  F007         	movff	pushNibble@value,soWrite@value
  5573  0059B2  6A08               	clrf	(soWrite@value+1)^0,c
  5574  0059B4  EC0F  F02E         	call	_soWrite	;wreg free
  5575                           
  5576                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  5577  0059B8  0E00               	movlw	0
  5578  0059BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5579  0059BC  0E1D               	movlw	29
  5580  0059BE  6E01               	movwf	digitalWrite@pin^0,c
  5581  0059C0  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  5582  0059C4  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  5583  0059C8  EC0E  F038         	call	_digitalWrite	;wreg free
  5584                           
  5585                           ;lcd.c: 28:  pulseEnablePin();
  5586  0059CC  ECCA  F02D         	call	_pulseEnablePin	;wreg free
  5587  0059D0  0012               	return		;funcret
  5588  0059D2                     __end_of_pushNibble:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function _lcdCommand *****************
  5592 ;; Defined at:
  5593 ;;		line 40 in file "lcd.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  value           1    wreg     unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  value           1   13[COMRAM] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5607 ;;      Params:         0       0       0       0       0       0       0
  5608 ;;      Locals:         1       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0
  5610 ;;      Totals:         1       0       0       0       0       0       0
  5611 ;;Total ram usage:        1 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 4
  5614 ;; This function calls:
  5615 ;;		_delayMili
  5616 ;;		_pushByte
  5617 ;; This function is called by:
  5618 ;;		_lcdPosition
  5619 ;;		_lcdInit
  5620 ;;		_leituraTeclas
  5621 ;;		_serial
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text28
  5626  00594E                     __ptext28:
  5627                           	callstack 0
  5628  00594E                     _lcdCommand:
  5629                           	callstack 24
  5630                           
  5631                           ;incstack = 0
  5632                           ;lcdCommand@value stored from wreg
  5633  00594E  6E0E               	movwf	lcdCommand@value^0,c
  5634  005950                     
  5635                           ;lcd.c: 41:  pushByte(value, 0);
  5636  005950  0E00               	movlw	0
  5637  005952  6E0B               	movwf	(pushByte@rs+1)^0,c
  5638  005954  0E00               	movlw	0
  5639  005956  6E0A               	movwf	pushByte@rs^0,c
  5640  005958  500E               	movf	lcdCommand@value^0,w,c
  5641  00595A  ECE0  F02E         	call	_pushByte
  5642                           
  5643                           ;lcd.c: 42:  delayMili(2);
  5644  00595E  0E00               	movlw	0
  5645  005960  6E02               	movwf	(delayMili@a+1)^0,c
  5646  005962  0E02               	movlw	2
  5647  005964  6E01               	movwf	delayMili@a^0,c
  5648  005966  EC3E  F02D         	call	_delayMili	;wreg free
  5649  00596A  0012               	return		;funcret
  5650  00596C                     __end_of_lcdCommand:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _pushByte *****************
  5654 ;; Defined at:
  5655 ;;		line 31 in file "lcd.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  value           1    wreg     unsigned char 
  5658 ;;  rs              2    9[COMRAM] int 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  value           1   12[COMRAM] unsigned char 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      void 
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0, cstack
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5670 ;;      Params:         2       0       0       0       0       0       0
  5671 ;;      Locals:         1       0       0       0       0       0       0
  5672 ;;      Temps:          1       0       0       0       0       0       0
  5673 ;;      Totals:         4       0       0       0       0       0       0
  5674 ;;Total ram usage:        4 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 3
  5677 ;; This function calls:
  5678 ;;		_digitalWrite
  5679 ;;		_pulseEnablePin
  5680 ;;		_soWrite
  5681 ;; This function is called by:
  5682 ;;		_lcdCommand
  5683 ;;		_lcdChar
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text29
  5688  005DC0                     __ptext29:
  5689                           	callstack 0
  5690  005DC0                     _pushByte:
  5691                           	callstack 24
  5692                           
  5693                           ;incstack = 0
  5694                           ;pushByte@value stored from wreg
  5695  005DC0  6E0D               	movwf	pushByte@value^0,c
  5696  005DC2                     
  5697                           ;lcd.c: 32:  soWrite(value >> 4);
  5698  005DC2  C00D  F00C         	movff	pushByte@value,??_pushByte
  5699  005DC6  3A0C               	swapf	??_pushByte^0,f,c
  5700  005DC8  0E0F               	movlw	15
  5701  005DCA  160C               	andwf	??_pushByte^0,f,c
  5702  005DCC  500C               	movf	??_pushByte^0,w,c
  5703  005DCE  6E07               	movwf	soWrite@value^0,c
  5704  005DD0  6A08               	clrf	(soWrite@value+1)^0,c
  5705  005DD2  EC0F  F02E         	call	_soWrite	;wreg free
  5706                           
  5707                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  5708  005DD6  0E00               	movlw	0
  5709  005DD8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5710  005DDA  0E1D               	movlw	29
  5711  005DDC  6E01               	movwf	digitalWrite@pin^0,c
  5712  005DDE  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5713  005DE2  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5714  005DE6  EC0E  F038         	call	_digitalWrite	;wreg free
  5715                           
  5716                           ;lcd.c: 34:  pulseEnablePin();
  5717  005DEA  ECCA  F02D         	call	_pulseEnablePin	;wreg free
  5718                           
  5719                           ;lcd.c: 36:  soWrite(value & 0x0F);
  5720  005DEE  C00D  F00C         	movff	pushByte@value,??_pushByte
  5721  005DF2  0E0F               	movlw	15
  5722  005DF4  160C               	andwf	??_pushByte^0,f,c
  5723  005DF6  500C               	movf	??_pushByte^0,w,c
  5724  005DF8  6E07               	movwf	soWrite@value^0,c
  5725  005DFA  6A08               	clrf	(soWrite@value+1)^0,c
  5726  005DFC  EC0F  F02E         	call	_soWrite	;wreg free
  5727                           
  5728                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  5729  005E00  0E00               	movlw	0
  5730  005E02  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5731  005E04  0E1D               	movlw	29
  5732  005E06  6E01               	movwf	digitalWrite@pin^0,c
  5733  005E08  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5734  005E0C  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5735  005E10  EC0E  F038         	call	_digitalWrite	;wreg free
  5736                           
  5737                           ;lcd.c: 38:  pulseEnablePin();
  5738  005E14  ECCA  F02D         	call	_pulseEnablePin	;wreg free
  5739  005E18  0012               	return		;funcret
  5740  005E1A                     __end_of_pushByte:
  5741                           	callstack 0
  5742                           
  5743 ;; *************** function _soWrite *****************
  5744 ;; Defined at:
  5745 ;;		line 18 in file "so.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  value           2    6[COMRAM] int 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  i               1    8[COMRAM] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5759 ;;      Params:         2       0       0       0       0       0       0
  5760 ;;      Locals:         1       0       0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0
  5762 ;;      Totals:         3       0       0       0       0       0       0
  5763 ;;Total ram usage:        3 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; Hardware stack levels required when called: 2
  5766 ;; This function calls:
  5767 ;;		_PulseClockData
  5768 ;;		_PulseEnClock
  5769 ;;		_digitalWrite
  5770 ;; This function is called by:
  5771 ;;		_kpDebounce
  5772 ;;		_pushNibble
  5773 ;;		_pushByte
  5774 ;;		_ssdUpdate
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text30
  5779  005C1E                     __ptext30:
  5780                           	callstack 0
  5781  005C1E                     _soWrite:
  5782                           	callstack 27
  5783  005C1E                     
  5784                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5785  005C1E  0E00               	movlw	0
  5786  005C20  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5787  005C22  0E08               	movlw	8
  5788  005C24  6E01               	movwf	digitalWrite@pin^0,c
  5789  005C26  0E00               	movlw	0
  5790  005C28  6E04               	movwf	(digitalWrite@value+1)^0,c
  5791  005C2A  0E00               	movlw	0
  5792  005C2C  6E03               	movwf	digitalWrite@value^0,c
  5793  005C2E  EC0E  F038         	call	_digitalWrite	;wreg free
  5794  005C32                     
  5795                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5796  005C32  0E00               	movlw	0
  5797  005C34  6E09               	movwf	soWrite@i^0,c
  5798  005C36                     l2552:
  5799                           
  5800                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5801  005C36  0E00               	movlw	0
  5802  005C38  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5803  005C3A  0E1E               	movlw	30
  5804  005C3C  6E01               	movwf	digitalWrite@pin^0,c
  5805  005C3E  0E80               	movlw	128
  5806  005C40  1407               	andwf	soWrite@value^0,w,c
  5807  005C42  6E03               	movwf	digitalWrite@value^0,c
  5808  005C44  6A04               	clrf	(digitalWrite@value+1)^0,c
  5809  005C46  EC0E  F038         	call	_digitalWrite	;wreg free
  5810                           
  5811                           ;so.c: 23:   PulseClockData();
  5812  005C4A  ECFE  F02C         	call	_PulseClockData	;wreg free
  5813  005C4E                     
  5814                           ;so.c: 24:   value <<= 1;
  5815  005C4E  90D8               	bcf	status,0,c
  5816  005C50  3607               	rlcf	soWrite@value^0,f,c
  5817  005C52  3608               	rlcf	(soWrite@value+1)^0,f,c
  5818  005C54                     
  5819                           ;so.c: 25:  }
  5820  005C54  2A09               	incf	soWrite@i^0,f,c
  5821  005C56  0E07               	movlw	7
  5822  005C58  6409               	cpfsgt	soWrite@i^0,c
  5823  005C5A  EF31  F02E         	goto	u1901
  5824  005C5E  EF33  F02E         	goto	u1900
  5825  005C62                     u1901:
  5826  005C62  EF1B  F02E         	goto	l2552
  5827  005C66                     u1900:
  5828  005C66                     
  5829                           ;so.c: 26:  PulseEnClock();
  5830  005C66  EC13  F02D         	call	_PulseEnClock	;wreg free
  5831  005C6A  0012               	return		;funcret
  5832  005C6C                     __end_of_soWrite:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _PulseEnClock *****************
  5836 ;; Defined at:
  5837 ;;		line 9 in file "so.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5851 ;;      Params:         0       0       0       0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0
  5854 ;;      Totals:         0       0       0       0       0       0       0
  5855 ;;Total ram usage:        0 bytes
  5856 ;; Hardware stack levels used: 1
  5857 ;; Hardware stack levels required when called: 1
  5858 ;; This function calls:
  5859 ;;		_digitalWrite
  5860 ;; This function is called by:
  5861 ;;		_soWrite
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           	psect	text31
  5866  005A26                     __ptext31:
  5867                           	callstack 0
  5868  005A26                     _PulseEnClock:
  5869                           	callstack 27
  5870  005A26                     
  5871                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5872  005A26  0E00               	movlw	0
  5873  005A28  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5874  005A2A  0E1F               	movlw	31
  5875  005A2C  6E01               	movwf	digitalWrite@pin^0,c
  5876  005A2E  0E00               	movlw	0
  5877  005A30  6E04               	movwf	(digitalWrite@value+1)^0,c
  5878  005A32  0E01               	movlw	1
  5879  005A34  6E03               	movwf	digitalWrite@value^0,c
  5880  005A36  EC0E  F038         	call	_digitalWrite	;wreg free
  5881                           
  5882                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5883  005A3A  0E00               	movlw	0
  5884  005A3C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5885  005A3E  0E1F               	movlw	31
  5886  005A40  6E01               	movwf	digitalWrite@pin^0,c
  5887  005A42  0E00               	movlw	0
  5888  005A44  6E04               	movwf	(digitalWrite@value+1)^0,c
  5889  005A46  0E00               	movlw	0
  5890  005A48  6E03               	movwf	digitalWrite@value^0,c
  5891  005A4A  EC0E  F038         	call	_digitalWrite	;wreg free
  5892  005A4E  0012               	return		;funcret
  5893  005A50                     __end_of_PulseEnClock:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function _PulseClockData *****************
  5897 ;; Defined at:
  5898 ;;		line 14 in file "so.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5912 ;;      Params:         0       0       0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 1
  5919 ;; This function calls:
  5920 ;;		_digitalWrite
  5921 ;; This function is called by:
  5922 ;;		_soWrite
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text32
  5927  0059FC                     __ptext32:
  5928                           	callstack 0
  5929  0059FC                     _PulseClockData:
  5930                           	callstack 27
  5931  0059FC                     
  5932                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5933  0059FC  0E00               	movlw	0
  5934  0059FE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5935  005A00  0E08               	movlw	8
  5936  005A02  6E01               	movwf	digitalWrite@pin^0,c
  5937  005A04  0E00               	movlw	0
  5938  005A06  6E04               	movwf	(digitalWrite@value+1)^0,c
  5939  005A08  0E01               	movlw	1
  5940  005A0A  6E03               	movwf	digitalWrite@value^0,c
  5941  005A0C  EC0E  F038         	call	_digitalWrite	;wreg free
  5942                           
  5943                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5944  005A10  0E00               	movlw	0
  5945  005A12  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5946  005A14  0E08               	movlw	8
  5947  005A16  6E01               	movwf	digitalWrite@pin^0,c
  5948  005A18  0E00               	movlw	0
  5949  005A1A  6E04               	movwf	(digitalWrite@value+1)^0,c
  5950  005A1C  0E00               	movlw	0
  5951  005A1E  6E03               	movwf	digitalWrite@value^0,c
  5952  005A20  EC0E  F038         	call	_digitalWrite	;wreg free
  5953  005A24  0012               	return		;funcret
  5954  005A26                     __end_of_PulseClockData:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _pulseEnablePin *****************
  5958 ;; Defined at:
  5959 ;;		line 18 in file "lcd.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5973 ;;      Params:         0       0       0       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0
  5976 ;;      Totals:         0       0       0       0       0       0       0
  5977 ;;Total ram usage:        0 bytes
  5978 ;; Hardware stack levels used: 1
  5979 ;; Hardware stack levels required when called: 1
  5980 ;; This function calls:
  5981 ;;		_delayMicro
  5982 ;;		_digitalWrite
  5983 ;; This function is called by:
  5984 ;;		_pushNibble
  5985 ;;		_pushByte
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text33
  5990  005B94                     __ptext33:
  5991                           	callstack 0
  5992  005B94                     _pulseEnablePin:
  5993                           	callstack 25
  5994  005B94                     
  5995                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  5996  005B94  0E00               	movlw	0
  5997  005B96  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5998  005B98  0E1C               	movlw	28
  5999  005B9A  6E01               	movwf	digitalWrite@pin^0,c
  6000  005B9C  0E00               	movlw	0
  6001  005B9E  6E04               	movwf	(digitalWrite@value+1)^0,c
  6002  005BA0  0E01               	movlw	1
  6003  005BA2  6E03               	movwf	digitalWrite@value^0,c
  6004  005BA4  EC0E  F038         	call	_digitalWrite	;wreg free
  6005  005BA8                     
  6006                           ;lcd.c: 20:  delayMicro(5);
  6007  005BA8  0E00               	movlw	0
  6008  005BAA  6E02               	movwf	(delayMicro@a+1)^0,c
  6009  005BAC  0E05               	movlw	5
  6010  005BAE  6E01               	movwf	delayMicro@a^0,c
  6011  005BB0  EC72  F02C         	call	_delayMicro	;wreg free
  6012  005BB4                     
  6013                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  6014  005BB4  0E00               	movlw	0
  6015  005BB6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6016  005BB8  0E1C               	movlw	28
  6017  005BBA  6E01               	movwf	digitalWrite@pin^0,c
  6018  005BBC  0E00               	movlw	0
  6019  005BBE  6E04               	movwf	(digitalWrite@value+1)^0,c
  6020  005BC0  0E00               	movlw	0
  6021  005BC2  6E03               	movwf	digitalWrite@value^0,c
  6022  005BC4  EC0E  F038         	call	_digitalWrite	;wreg free
  6023                           
  6024                           ;lcd.c: 22:  delayMicro(5);
  6025  005BC8  0E00               	movlw	0
  6026  005BCA  6E02               	movwf	(delayMicro@a+1)^0,c
  6027  005BCC  0E05               	movlw	5
  6028  005BCE  6E01               	movwf	delayMicro@a^0,c
  6029  005BD0  EC72  F02C         	call	_delayMicro	;wreg free
  6030  005BD4  0012               	return		;funcret
  6031  005BD6                     __end_of_pulseEnablePin:
  6032                           	callstack 0
  6033                           
  6034 ;; *************** function _digitalWrite *****************
  6035 ;; Defined at:
  6036 ;;		line 14 in file "io.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  pin             2    0[COMRAM] int 
  6039 ;;  value           2    2[COMRAM] int 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  1    wreg      void 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6051 ;;      Params:         4       0       0       0       0       0       0
  6052 ;;      Locals:         0       0       0       0       0       0       0
  6053 ;;      Temps:          2       0       0       0       0       0       0
  6054 ;;      Totals:         6       0       0       0       0       0       0
  6055 ;;Total ram usage:        6 bytes
  6056 ;; Hardware stack levels used: 1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_pulseEnablePin
  6061 ;;		_pushNibble
  6062 ;;		_pushByte
  6063 ;;		_turnOn
  6064 ;;		_turnOff
  6065 ;;		_PulseEnClock
  6066 ;;		_PulseClockData
  6067 ;;		_soWrite
  6068 ;;		_ssdUpdate
  6069 ;;		_clear_SCL
  6070 ;;		_clear_SDA
  6071 ;;		_rgbColor
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text34
  6076  00701C                     __ptext34:
  6077                           	callstack 0
  6078  00701C                     _digitalWrite:
  6079                           	callstack 28
  6080  00701C                     
  6081                           ;io.c: 16:     if(pin <8){
  6082  00701C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6083  00701E  EF1C  F038         	goto	u1700
  6084  007022  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6085  007024  E107               	bnz	u1701
  6086  007026  0E08               	movlw	8
  6087  007028  5C01               	subwf	digitalWrite@pin^0,w,c
  6088  00702A  B0D8               	btfsc	status,0,c
  6089  00702C  EF1A  F038         	goto	u1701
  6090  007030  EF1C  F038         	goto	u1700
  6091  007034                     u1701:
  6092  007034  EF46  F038         	goto	l2508
  6093  007038                     u1700:
  6094  007038                     
  6095                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  6096  007038  5003               	movf	digitalWrite@value^0,w,c
  6097  00703A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6098  00703C  B4D8               	btfsc	status,2,c
  6099  00703E  EF23  F038         	goto	u1711
  6100  007042  EF25  F038         	goto	u1710
  6101  007046                     u1711:
  6102  007046  EF35  F038         	goto	l2506
  6103  00704A                     u1710:
  6104  00704A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6105  00704E  0E01               	movlw	1
  6106  007050  6E06               	movwf	(??_digitalWrite+1)^0,c
  6107  007052  2A05               	incf	??_digitalWrite^0,f,c
  6108  007054  EF2E  F038         	goto	u1724
  6109  007058                     u1725:
  6110  007058  90D8               	bcf	status,0,c
  6111  00705A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6112  00705C                     u1724:
  6113  00705C  2E05               	decfsz	??_digitalWrite^0,f,c
  6114  00705E  EF2C  F038         	goto	u1725
  6115  007062  5006               	movf	(??_digitalWrite+1)^0,w,c
  6116  007064  1280               	iorwf	128,f,c	;volatile
  6117  007066  EF34  F039         	goto	l161
  6118  00706A                     l2506:
  6119  00706A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6120  00706E  0E01               	movlw	1
  6121  007070  6E06               	movwf	(??_digitalWrite+1)^0,c
  6122  007072  2A05               	incf	??_digitalWrite^0,f,c
  6123  007074  EF3E  F038         	goto	u1734
  6124  007078                     u1735:
  6125  007078  90D8               	bcf	status,0,c
  6126  00707A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6127  00707C                     u1734:
  6128  00707C  2E05               	decfsz	??_digitalWrite^0,f,c
  6129  00707E  EF3C  F038         	goto	u1735
  6130  007082  5006               	movf	(??_digitalWrite+1)^0,w,c
  6131  007084  0AFF               	xorlw	255
  6132  007086  1680               	andwf	128,f,c	;volatile
  6133  007088  EF34  F039         	goto	l161
  6134  00708C                     l2508:
  6135  00708C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6136  00708E  EF54  F038         	goto	u1740
  6137  007092  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6138  007094  E107               	bnz	u1741
  6139  007096  0E10               	movlw	16
  6140  007098  5C01               	subwf	digitalWrite@pin^0,w,c
  6141  00709A  B0D8               	btfsc	status,0,c
  6142  00709C  EF52  F038         	goto	u1741
  6143  0070A0  EF54  F038         	goto	u1740
  6144  0070A4                     u1741:
  6145  0070A4  EF82  F038         	goto	l2516
  6146  0070A8                     u1740:
  6147  0070A8                     
  6148                           ;io.c: 20:         pin -=8;
  6149  0070A8  0EF8               	movlw	248
  6150  0070AA  2601               	addwf	digitalWrite@pin^0,f,c
  6151  0070AC  0EFF               	movlw	255
  6152  0070AE  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6153                           
  6154                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  6155  0070B0  5003               	movf	digitalWrite@value^0,w,c
  6156  0070B2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6157  0070B4  B4D8               	btfsc	status,2,c
  6158  0070B6  EF5F  F038         	goto	u1751
  6159  0070BA  EF61  F038         	goto	u1750
  6160  0070BE                     u1751:
  6161  0070BE  EF71  F038         	goto	l2514
  6162  0070C2                     u1750:
  6163  0070C2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6164  0070C6  0E01               	movlw	1
  6165  0070C8  6E06               	movwf	(??_digitalWrite+1)^0,c
  6166  0070CA  2A05               	incf	??_digitalWrite^0,f,c
  6167  0070CC  EF6A  F038         	goto	u1764
  6168  0070D0                     u1765:
  6169  0070D0  90D8               	bcf	status,0,c
  6170  0070D2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6171  0070D4                     u1764:
  6172  0070D4  2E05               	decfsz	??_digitalWrite^0,f,c
  6173  0070D6  EF68  F038         	goto	u1765
  6174  0070DA  5006               	movf	(??_digitalWrite+1)^0,w,c
  6175  0070DC  1281               	iorwf	129,f,c	;volatile
  6176  0070DE  EF34  F039         	goto	l161
  6177  0070E2                     l2514:
  6178  0070E2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6179  0070E6  0E01               	movlw	1
  6180  0070E8  6E06               	movwf	(??_digitalWrite+1)^0,c
  6181  0070EA  2A05               	incf	??_digitalWrite^0,f,c
  6182  0070EC  EF7A  F038         	goto	u1774
  6183  0070F0                     u1775:
  6184  0070F0  90D8               	bcf	status,0,c
  6185  0070F2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6186  0070F4                     u1774:
  6187  0070F4  2E05               	decfsz	??_digitalWrite^0,f,c
  6188  0070F6  EF78  F038         	goto	u1775
  6189  0070FA  5006               	movf	(??_digitalWrite+1)^0,w,c
  6190  0070FC  0AFF               	xorlw	255
  6191  0070FE  1681               	andwf	129,f,c	;volatile
  6192  007100  EF34  F039         	goto	l161
  6193  007104                     l2516:
  6194  007104  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6195  007106  EF90  F038         	goto	u1780
  6196  00710A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6197  00710C  E107               	bnz	u1781
  6198  00710E  0E18               	movlw	24
  6199  007110  5C01               	subwf	digitalWrite@pin^0,w,c
  6200  007112  B0D8               	btfsc	status,0,c
  6201  007114  EF8E  F038         	goto	u1781
  6202  007118  EF90  F038         	goto	u1780
  6203  00711C                     u1781:
  6204  00711C  EFBE  F038         	goto	l2524
  6205  007120                     u1780:
  6206  007120                     
  6207                           ;io.c: 24:         pin -=16;
  6208  007120  0EF0               	movlw	240
  6209  007122  2601               	addwf	digitalWrite@pin^0,f,c
  6210  007124  0EFF               	movlw	255
  6211  007126  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6212                           
  6213                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  6214  007128  5003               	movf	digitalWrite@value^0,w,c
  6215  00712A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6216  00712C  B4D8               	btfsc	status,2,c
  6217  00712E  EF9B  F038         	goto	u1791
  6218  007132  EF9D  F038         	goto	u1790
  6219  007136                     u1791:
  6220  007136  EFAD  F038         	goto	l2522
  6221  00713A                     u1790:
  6222  00713A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6223  00713E  0E01               	movlw	1
  6224  007140  6E06               	movwf	(??_digitalWrite+1)^0,c
  6225  007142  2A05               	incf	??_digitalWrite^0,f,c
  6226  007144  EFA6  F038         	goto	u1804
  6227  007148                     u1805:
  6228  007148  90D8               	bcf	status,0,c
  6229  00714A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6230  00714C                     u1804:
  6231  00714C  2E05               	decfsz	??_digitalWrite^0,f,c
  6232  00714E  EFA4  F038         	goto	u1805
  6233  007152  5006               	movf	(??_digitalWrite+1)^0,w,c
  6234  007154  1282               	iorwf	130,f,c	;volatile
  6235  007156  EF34  F039         	goto	l161
  6236  00715A                     l2522:
  6237  00715A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6238  00715E  0E01               	movlw	1
  6239  007160  6E06               	movwf	(??_digitalWrite+1)^0,c
  6240  007162  2A05               	incf	??_digitalWrite^0,f,c
  6241  007164  EFB6  F038         	goto	u1814
  6242  007168                     u1815:
  6243  007168  90D8               	bcf	status,0,c
  6244  00716A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6245  00716C                     u1814:
  6246  00716C  2E05               	decfsz	??_digitalWrite^0,f,c
  6247  00716E  EFB4  F038         	goto	u1815
  6248  007172  5006               	movf	(??_digitalWrite+1)^0,w,c
  6249  007174  0AFF               	xorlw	255
  6250  007176  1682               	andwf	130,f,c	;volatile
  6251  007178  EF34  F039         	goto	l161
  6252  00717C                     l2524:
  6253  00717C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6254  00717E  EFCC  F038         	goto	u1820
  6255  007182  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6256  007184  E107               	bnz	u1821
  6257  007186  0E20               	movlw	32
  6258  007188  5C01               	subwf	digitalWrite@pin^0,w,c
  6259  00718A  B0D8               	btfsc	status,0,c
  6260  00718C  EFCA  F038         	goto	u1821
  6261  007190  EFCC  F038         	goto	u1820
  6262  007194                     u1821:
  6263  007194  EFFA  F038         	goto	l2532
  6264  007198                     u1820:
  6265  007198                     
  6266                           ;io.c: 28:         pin -=24;
  6267  007198  0EE8               	movlw	232
  6268  00719A  2601               	addwf	digitalWrite@pin^0,f,c
  6269  00719C  0EFF               	movlw	255
  6270  00719E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6271                           
  6272                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  6273  0071A0  5003               	movf	digitalWrite@value^0,w,c
  6274  0071A2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6275  0071A4  B4D8               	btfsc	status,2,c
  6276  0071A6  EFD7  F038         	goto	u1831
  6277  0071AA  EFD9  F038         	goto	u1830
  6278  0071AE                     u1831:
  6279  0071AE  EFE9  F038         	goto	l2530
  6280  0071B2                     u1830:
  6281  0071B2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6282  0071B6  0E01               	movlw	1
  6283  0071B8  6E06               	movwf	(??_digitalWrite+1)^0,c
  6284  0071BA  2A05               	incf	??_digitalWrite^0,f,c
  6285  0071BC  EFE2  F038         	goto	u1844
  6286  0071C0                     u1845:
  6287  0071C0  90D8               	bcf	status,0,c
  6288  0071C2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6289  0071C4                     u1844:
  6290  0071C4  2E05               	decfsz	??_digitalWrite^0,f,c
  6291  0071C6  EFE0  F038         	goto	u1845
  6292  0071CA  5006               	movf	(??_digitalWrite+1)^0,w,c
  6293  0071CC  1283               	iorwf	131,f,c	;volatile
  6294  0071CE  EF34  F039         	goto	l161
  6295  0071D2                     l2530:
  6296  0071D2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6297  0071D6  0E01               	movlw	1
  6298  0071D8  6E06               	movwf	(??_digitalWrite+1)^0,c
  6299  0071DA  2A05               	incf	??_digitalWrite^0,f,c
  6300  0071DC  EFF2  F038         	goto	u1854
  6301  0071E0                     u1855:
  6302  0071E0  90D8               	bcf	status,0,c
  6303  0071E2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6304  0071E4                     u1854:
  6305  0071E4  2E05               	decfsz	??_digitalWrite^0,f,c
  6306  0071E6  EFF0  F038         	goto	u1855
  6307  0071EA  5006               	movf	(??_digitalWrite+1)^0,w,c
  6308  0071EC  0AFF               	xorlw	255
  6309  0071EE  1683               	andwf	131,f,c	;volatile
  6310  0071F0  EF34  F039         	goto	l161
  6311  0071F4                     l2532:
  6312  0071F4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6313  0071F6  EF08  F039         	goto	u1860
  6314  0071FA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6315  0071FC  E107               	bnz	u1861
  6316  0071FE  0E28               	movlw	40
  6317  007200  5C01               	subwf	digitalWrite@pin^0,w,c
  6318  007202  B0D8               	btfsc	status,0,c
  6319  007204  EF06  F039         	goto	u1861
  6320  007208  EF08  F039         	goto	u1860
  6321  00720C                     u1861:
  6322  00720C  EF34  F039         	goto	l161
  6323  007210                     u1860:
  6324  007210                     
  6325                           ;io.c: 32:         pin -=32;
  6326  007210  0EE0               	movlw	224
  6327  007212  2601               	addwf	digitalWrite@pin^0,f,c
  6328  007214  0EFF               	movlw	255
  6329  007216  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6330                           
  6331                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  6332  007218  5003               	movf	digitalWrite@value^0,w,c
  6333  00721A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6334  00721C  B4D8               	btfsc	status,2,c
  6335  00721E  EF13  F039         	goto	u1871
  6336  007222  EF15  F039         	goto	u1870
  6337  007226                     u1871:
  6338  007226  EF25  F039         	goto	l2538
  6339  00722A                     u1870:
  6340  00722A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6341  00722E  0E01               	movlw	1
  6342  007230  6E06               	movwf	(??_digitalWrite+1)^0,c
  6343  007232  2A05               	incf	??_digitalWrite^0,f,c
  6344  007234  EF1E  F039         	goto	u1884
  6345  007238                     u1885:
  6346  007238  90D8               	bcf	status,0,c
  6347  00723A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6348  00723C                     u1884:
  6349  00723C  2E05               	decfsz	??_digitalWrite^0,f,c
  6350  00723E  EF1C  F039         	goto	u1885
  6351  007242  5006               	movf	(??_digitalWrite+1)^0,w,c
  6352  007244  1284               	iorwf	132,f,c	;volatile
  6353  007246  EF34  F039         	goto	l161
  6354  00724A                     l2538:
  6355  00724A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6356  00724E  0E01               	movlw	1
  6357  007250  6E06               	movwf	(??_digitalWrite+1)^0,c
  6358  007252  2A05               	incf	??_digitalWrite^0,f,c
  6359  007254  EF2E  F039         	goto	u1894
  6360  007258                     u1895:
  6361  007258  90D8               	bcf	status,0,c
  6362  00725A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6363  00725C                     u1894:
  6364  00725C  2E05               	decfsz	??_digitalWrite^0,f,c
  6365  00725E  EF2C  F039         	goto	u1895
  6366  007262  5006               	movf	(??_digitalWrite+1)^0,w,c
  6367  007264  0AFF               	xorlw	255
  6368  007266  1684               	andwf	132,f,c	;volatile
  6369  007268                     l161:
  6370  007268  0012               	return		;funcret
  6371  00726A                     __end_of_digitalWrite:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function _delayMicro *****************
  6375 ;; Defined at:
  6376 ;;		line 5 in file "lcd.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  a               2    0[COMRAM] int 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  i               2    0        volatile int 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		None
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6390 ;;      Params:         2       0       0       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0       0
  6392 ;;      Temps:          0       0       0       0       0       0       0
  6393 ;;      Totals:         2       0       0       0       0       0       0
  6394 ;;Total ram usage:        2 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_pulseEnablePin
  6400 ;;		_lcdChar
  6401 ;;		_lcdInit
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text35
  6406  0058E4                     __ptext35:
  6407                           	callstack 0
  6408  0058E4                     _delayMicro:
  6409                           	callstack 25
  6410  0058E4  0012               	return		;funcret
  6411  0058E6                     __end_of_delayMicro:
  6412                           	callstack 0
  6413                           
  6414 ;; *************** function _delayMili *****************
  6415 ;; Defined at:
  6416 ;;		line 10 in file "lcd.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  a               2    0[COMRAM] int 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  i               2    3[COMRAM] volatile int 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6430 ;;      Params:         2       0       0       0       0       0       0
  6431 ;;      Locals:         2       0       0       0       0       0       0
  6432 ;;      Temps:          1       0       0       0       0       0       0
  6433 ;;      Totals:         5       0       0       0       0       0       0
  6434 ;;Total ram usage:        5 bytes
  6435 ;; Hardware stack levels used: 1
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_lcdCommand
  6440 ;;		_lcdInit
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text36
  6445  005A7C                     __ptext36:
  6446                           	callstack 0
  6447  005A7C                     _delayMili:
  6448                           	callstack 27
  6449  005A7C                     
  6450                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  6451  005A7C  0E00               	movlw	0
  6452  005A7E  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  6453  005A80  0E00               	movlw	0
  6454  005A82  6E04               	movwf	delayMili@i^0,c	;volatile
  6455  005A84  EF46  F02D         	goto	l2572
  6456  005A88                     l2570:
  6457                           
  6458                           ;lcd.c: 15:  }
  6459  005A88  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  6460  005A8A  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  6461  005A8C                     l2572:
  6462  005A8C  5001               	movf	delayMili@a^0,w,c
  6463  005A8E  5C04               	subwf	delayMili@i^0,w,c	;volatile
  6464  005A90  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  6465  005A92  0A80               	xorlw	128
  6466  005A94  6E03               	movwf	??_delayMili^0,c
  6467  005A96  5002               	movf	(delayMili@a+1)^0,w,c
  6468  005A98  0A80               	xorlw	128
  6469  005A9A  5803               	subwfb	??_delayMili^0,w,c
  6470  005A9C  A0D8               	btfss	status,0,c
  6471  005A9E  EF53  F02D         	goto	u1911
  6472  005AA2  EF55  F02D         	goto	u1910
  6473  005AA6                     u1911:
  6474  005AA6  EF44  F02D         	goto	l2570
  6475  005AAA                     u1910:
  6476  005AAA  0012               	return		;funcret
  6477  005AAC                     __end_of_delayMili:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _kpInit *****************
  6481 ;; Defined at:
  6482 ;;		line 54 in file "keypad.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6496 ;;      Params:         0       0       0       0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; Hardware stack levels required when called: 2
  6503 ;; This function calls:
  6504 ;;		_pinMode
  6505 ;;		_soInit
  6506 ;; This function is called by:
  6507 ;;		_main
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text37
  6512  005AAC                     __ptext37:
  6513                           	callstack 0
  6514  005AAC                     _kpInit:
  6515                           	callstack 28
  6516  005AAC                     
  6517                           ;keypad.c: 55:   soInit();
  6518  005AAC  EC8C  F02D         	call	_soInit	;wreg free
  6519                           
  6520                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  6521  005AB0  0E00               	movlw	0
  6522  005AB2  6E02               	movwf	(pinMode@pin+1)^0,c
  6523  005AB4  0E0A               	movlw	10
  6524  005AB6  6E01               	movwf	pinMode@pin^0,c
  6525  005AB8  0E00               	movlw	0
  6526  005ABA  6E04               	movwf	(pinMode@type+1)^0,c
  6527  005ABC  0E01               	movlw	1
  6528  005ABE  6E03               	movwf	pinMode@type^0,c
  6529  005AC0  ECE7  F036         	call	_pinMode	;wreg free
  6530                           
  6531                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  6532  005AC4  0E00               	movlw	0
  6533  005AC6  6E02               	movwf	(pinMode@pin+1)^0,c
  6534  005AC8  0E09               	movlw	9
  6535  005ACA  6E01               	movwf	pinMode@pin^0,c
  6536  005ACC  0E00               	movlw	0
  6537  005ACE  6E04               	movwf	(pinMode@type+1)^0,c
  6538  005AD0  0E01               	movlw	1
  6539  005AD2  6E03               	movwf	pinMode@type^0,c
  6540  005AD4  ECE7  F036         	call	_pinMode	;wreg free
  6541  005AD8                     
  6542                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  6543  005AD8  0E0C               	movlw	12
  6544  005ADA  6EC1               	movwf	193,c	;volatile
  6545  005ADC  0012               	return		;funcret
  6546  005ADE                     __end_of_kpInit:
  6547                           	callstack 0
  6548                           
  6549 ;; *************** function _soInit *****************
  6550 ;; Defined at:
  6551 ;;		line 3 in file "so.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;		None
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  1    wreg      void 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6565 ;;      Params:         0       0       0       0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0
  6568 ;;      Totals:         0       0       0       0       0       0       0
  6569 ;;Total ram usage:        0 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 1
  6572 ;; This function calls:
  6573 ;;		_pinMode
  6574 ;; This function is called by:
  6575 ;;		_kpInit
  6576 ;;		_lcdInit
  6577 ;;		_ssdInit
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text38
  6582  005B18                     __ptext38:
  6583                           	callstack 0
  6584  005B18                     _soInit:
  6585                           	callstack 28
  6586  005B18                     
  6587                           ;so.c: 4:  pinMode(PIN_D7, 0);
  6588  005B18  0E00               	movlw	0
  6589  005B1A  6E02               	movwf	(pinMode@pin+1)^0,c
  6590  005B1C  0E1F               	movlw	31
  6591  005B1E  6E01               	movwf	pinMode@pin^0,c
  6592  005B20  0E00               	movlw	0
  6593  005B22  6E04               	movwf	(pinMode@type+1)^0,c
  6594  005B24  0E00               	movlw	0
  6595  005B26  6E03               	movwf	pinMode@type^0,c
  6596  005B28  ECE7  F036         	call	_pinMode	;wreg free
  6597                           
  6598                           ;so.c: 5:  pinMode(PIN_B0, 0);
  6599  005B2C  0E00               	movlw	0
  6600  005B2E  6E02               	movwf	(pinMode@pin+1)^0,c
  6601  005B30  0E08               	movlw	8
  6602  005B32  6E01               	movwf	pinMode@pin^0,c
  6603  005B34  0E00               	movlw	0
  6604  005B36  6E04               	movwf	(pinMode@type+1)^0,c
  6605  005B38  0E00               	movlw	0
  6606  005B3A  6E03               	movwf	pinMode@type^0,c
  6607  005B3C  ECE7  F036         	call	_pinMode	;wreg free
  6608                           
  6609                           ;so.c: 6:  pinMode(PIN_D6, 0);
  6610  005B40  0E00               	movlw	0
  6611  005B42  6E02               	movwf	(pinMode@pin+1)^0,c
  6612  005B44  0E1E               	movlw	30
  6613  005B46  6E01               	movwf	pinMode@pin^0,c
  6614  005B48  0E00               	movlw	0
  6615  005B4A  6E04               	movwf	(pinMode@type+1)^0,c
  6616  005B4C  0E00               	movlw	0
  6617  005B4E  6E03               	movwf	pinMode@type^0,c
  6618  005B50  ECE7  F036         	call	_pinMode	;wreg free
  6619  005B54  0012               	return		;funcret
  6620  005B56                     __end_of_soInit:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _comparacao *****************
  6624 ;; Defined at:
  6625 ;;		line 181 in file "newmain1.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6639 ;;      Params:         0       0       0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 2
  6646 ;; This function calls:
  6647 ;;		_EraseDisplay
  6648 ;;		_ShowOnDisplay
  6649 ;;		___lldiv
  6650 ;;		___lmul
  6651 ;; This function is called by:
  6652 ;;		_main
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text39
  6657  006054                     __ptext39:
  6658                           	callstack 0
  6659  006054                     _comparacao:
  6660                           	callstack 28
  6661  006054                     
  6662                           ;newmain1.c: 183:     qtd = (200 * potenc) / (1024 + 20);
  6663  006054  C04E  F001         	movff	_potenc,___lmul@multiplier
  6664  006058  C04F  F002         	movff	_potenc+1,___lmul@multiplier+1
  6665  00605C  C050  F003         	movff	_potenc+2,___lmul@multiplier+2
  6666  006060  C051  F004         	movff	_potenc+3,___lmul@multiplier+3
  6667  006064  0EC8               	movlw	200
  6668  006066  6E05               	movwf	___lmul@multiplicand^0,c
  6669  006068  0E00               	movlw	0
  6670  00606A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6671  00606C  0E00               	movlw	0
  6672  00606E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6673  006070  0E00               	movlw	0
  6674  006072  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6675  006074  EC75  F02F         	call	___lmul	;wreg free
  6676  006078  C001  F00D         	movff	?___lmul,___lldiv@dividend
  6677  00607C  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  6678  006080  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  6679  006084  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  6680  006088  0E14               	movlw	20
  6681  00608A  6E11               	movwf	___lldiv@divisor^0,c
  6682  00608C  0E04               	movlw	4
  6683  00608E  6E12               	movwf	(___lldiv@divisor+1)^0,c
  6684  006090  0E00               	movlw	0
  6685  006092  6E13               	movwf	(___lldiv@divisor+2)^0,c
  6686  006094  0E00               	movlw	0
  6687  006096  6E14               	movwf	(___lldiv@divisor+3)^0,c
  6688  006098  EC7B  F030         	call	___lldiv	;wreg free
  6689  00609C  C00D  F036         	movff	?___lldiv,_qtd
  6690  0060A0  C00E  F037         	movff	?___lldiv+1,_qtd+1
  6691  0060A4  C00F  F038         	movff	?___lldiv+2,_qtd+2
  6692  0060A8  C010  F039         	movff	?___lldiv+3,_qtd+3
  6693  0060AC                     
  6694                           ;newmain1.c: 184:     if (qtd > comidaMax) {
  6695  0060AC  5036               	movf	_qtd^0,w,c
  6696  0060AE  5C3A               	subwf	_comidaMax^0,w,c
  6697  0060B0  5037               	movf	(_qtd+1)^0,w,c
  6698  0060B2  583B               	subwfb	(_comidaMax+1)^0,w,c
  6699  0060B4  5038               	movf	(_qtd+2)^0,w,c
  6700  0060B6  583C               	subwfb	(_comidaMax+2)^0,w,c
  6701  0060B8  5039               	movf	(_qtd+3)^0,w,c
  6702  0060BA  583D               	subwfb	(_comidaMax+3)^0,w,c
  6703  0060BC  B0D8               	btfsc	status,0,c
  6704  0060BE  EF63  F030         	goto	u3171
  6705  0060C2  EF65  F030         	goto	u3170
  6706  0060C6                     u3171:
  6707  0060C6  EF69  F030         	goto	l3398
  6708  0060CA                     u3170:
  6709  0060CA                     
  6710                           ;newmain1.c: 185:         ShowOnDisplay();
  6711  0060CA  ECA3  F032         	call	_ShowOnDisplay	;wreg free
  6712                           
  6713                           ;newmain1.c: 186:     }else if (qtd < comidaMax) {
  6714  0060CE  EF7A  F030         	goto	l544
  6715  0060D2                     l3398:
  6716  0060D2  503A               	movf	_comidaMax^0,w,c
  6717  0060D4  5C36               	subwf	_qtd^0,w,c
  6718  0060D6  503B               	movf	(_comidaMax+1)^0,w,c
  6719  0060D8  5837               	subwfb	(_qtd+1)^0,w,c
  6720  0060DA  503C               	movf	(_comidaMax+2)^0,w,c
  6721  0060DC  5838               	subwfb	(_qtd+2)^0,w,c
  6722  0060DE  503D               	movf	(_comidaMax+3)^0,w,c
  6723  0060E0  5839               	subwfb	(_qtd+3)^0,w,c
  6724  0060E2  B0D8               	btfsc	status,0,c
  6725  0060E4  EF76  F030         	goto	u3181
  6726  0060E8  EF78  F030         	goto	u3180
  6727  0060EC                     u3181:
  6728  0060EC  EF7A  F030         	goto	l544
  6729  0060F0                     u3180:
  6730  0060F0                     
  6731                           ;newmain1.c: 187:         EraseDisplay();
  6732  0060F0  ECE9  F02C         	call	_EraseDisplay	;wreg free
  6733  0060F4                     l544:
  6734  0060F4  0012               	return		;funcret
  6735  0060F6                     __end_of_comparacao:
  6736                           	callstack 0
  6737                           
  6738 ;; *************** function ___lmul *****************
  6739 ;; Defined at:
  6740 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  multiplier      4    0[COMRAM] unsigned long 
  6743 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  product         4    8[COMRAM] unsigned long 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  4    0[COMRAM] unsigned long 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6755 ;;      Params:         8       0       0       0       0       0       0
  6756 ;;      Locals:         4       0       0       0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0
  6758 ;;      Totals:        12       0       0       0       0       0       0
  6759 ;;Total ram usage:       12 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_qtdComidaLeitura
  6765 ;;		_comparacao
  6766 ;;		_serial
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text40
  6771  005EEA                     __ptext40:
  6772                           	callstack 0
  6773  005EEA                     ___lmul:
  6774                           	callstack 29
  6775  005EEA  0E00               	movlw	0
  6776  005EEC  6E09               	movwf	___lmul@product^0,c
  6777  005EEE  0E00               	movlw	0
  6778  005EF0  6E0A               	movwf	(___lmul@product+1)^0,c
  6779  005EF2  0E00               	movlw	0
  6780  005EF4  6E0B               	movwf	(___lmul@product+2)^0,c
  6781  005EF6  0E00               	movlw	0
  6782  005EF8  6E0C               	movwf	(___lmul@product+3)^0,c
  6783  005EFA                     l3122:
  6784  005EFA  A001               	btfss	___lmul@multiplier^0,0,c
  6785  005EFC  EF82  F02F         	goto	u3061
  6786  005F00  EF84  F02F         	goto	u3060
  6787  005F04                     u3061:
  6788  005F04  EF8C  F02F         	goto	l3126
  6789  005F08                     u3060:
  6790  005F08  5005               	movf	___lmul@multiplicand^0,w,c
  6791  005F0A  2609               	addwf	___lmul@product^0,f,c
  6792  005F0C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6793  005F0E  220A               	addwfc	(___lmul@product+1)^0,f,c
  6794  005F10  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6795  005F12  220B               	addwfc	(___lmul@product+2)^0,f,c
  6796  005F14  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6797  005F16  220C               	addwfc	(___lmul@product+3)^0,f,c
  6798  005F18                     l3126:
  6799  005F18  90D8               	bcf	status,0,c
  6800  005F1A  3605               	rlcf	___lmul@multiplicand^0,f,c
  6801  005F1C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6802  005F1E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6803  005F20  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6804  005F22  90D8               	bcf	status,0,c
  6805  005F24  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6806  005F26  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6807  005F28  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6808  005F2A  3201               	rrcf	___lmul@multiplier^0,f,c
  6809  005F2C  5001               	movf	___lmul@multiplier^0,w,c
  6810  005F2E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6811  005F30  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6812  005F32  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6813  005F34  A4D8               	btfss	status,2,c
  6814  005F36  EF9F  F02F         	goto	u3071
  6815  005F3A  EFA1  F02F         	goto	u3070
  6816  005F3E                     u3071:
  6817  005F3E  EF7D  F02F         	goto	l3122
  6818  005F42                     u3070:
  6819  005F42  C009  F001         	movff	___lmul@product,?___lmul
  6820  005F46  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6821  005F4A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6822  005F4E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6823  005F52  0012               	return		;funcret
  6824  005F54                     __end_of___lmul:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function _ShowOnDisplay *****************
  6828 ;; Defined at:
  6829 ;;		line 41 in file "newmain1.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;		None
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  un              2   42[COMRAM] int 
  6834 ;;  dez             2   40[COMRAM] int 
  6835 ;;  cent            2   38[COMRAM] int 
  6836 ;;  mil             2   36[COMRAM] int 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      void 
  6839 ;; Registers used:
  6840 ;;		wreg, status,2, status,0, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6846 ;;      Params:         0       0       0       0       0       0       0
  6847 ;;      Locals:         8       0       0       0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0
  6849 ;;      Totals:         8       0       0       0       0       0       0
  6850 ;;Total ram usage:        8 bytes
  6851 ;; Hardware stack levels used: 1
  6852 ;; Hardware stack levels required when called: 1
  6853 ;; This function calls:
  6854 ;;		___lldiv
  6855 ;;		___llmod
  6856 ;;		_ssdDigit
  6857 ;; This function is called by:
  6858 ;;		_comparacao
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text41
  6863  006546                     __ptext41:
  6864                           	callstack 0
  6865  006546                     _ShowOnDisplay:
  6866                           	callstack 28
  6867  006546                     
  6868                           ;newmain1.c: 43:     int mil, cent, dez, un;;newmain1.c: 45:     mil = ((comidaMax / 100
      +                          0) % 10);
  6869  006546  0EE8               	movlw	232
  6870  006548  6E11               	movwf	___lldiv@divisor^0,c
  6871  00654A  0E03               	movlw	3
  6872  00654C  6E12               	movwf	(___lldiv@divisor+1)^0,c
  6873  00654E  0E00               	movlw	0
  6874  006550  6E13               	movwf	(___lldiv@divisor+2)^0,c
  6875  006552  0E00               	movlw	0
  6876  006554  6E14               	movwf	(___lldiv@divisor+3)^0,c
  6877  006556  C03A  F00D         	movff	_comidaMax,___lldiv@dividend
  6878  00655A  C03B  F00E         	movff	_comidaMax+1,___lldiv@dividend+1
  6879  00655E  C03C  F00F         	movff	_comidaMax+2,___lldiv@dividend+2
  6880  006562  C03D  F010         	movff	_comidaMax+3,___lldiv@dividend+3
  6881  006566  EC7B  F030         	call	___lldiv	;wreg free
  6882  00656A  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  6883  00656E  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  6884  006572  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  6885  006576  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  6886  00657A  0E0A               	movlw	10
  6887  00657C  6E1E               	movwf	___llmod@divisor^0,c
  6888  00657E  0E00               	movlw	0
  6889  006580  6E1F               	movwf	(___llmod@divisor+1)^0,c
  6890  006582  0E00               	movlw	0
  6891  006584  6E20               	movwf	(___llmod@divisor+2)^0,c
  6892  006586  0E00               	movlw	0
  6893  006588  6E21               	movwf	(___llmod@divisor+3)^0,c
  6894  00658A  ECE6  F02F         	call	___llmod	;wreg free
  6895  00658E  C01A  F025         	movff	?___llmod,ShowOnDisplay@mil
  6896  006592  C01B  F026         	movff	?___llmod+1,ShowOnDisplay@mil+1
  6897                           
  6898                           ;newmain1.c: 46:     cent = ((comidaMax / 100) % 10);
  6899  006596  0E64               	movlw	100
  6900  006598  6E11               	movwf	___lldiv@divisor^0,c
  6901  00659A  0E00               	movlw	0
  6902  00659C  6E12               	movwf	(___lldiv@divisor+1)^0,c
  6903  00659E  0E00               	movlw	0
  6904  0065A0  6E13               	movwf	(___lldiv@divisor+2)^0,c
  6905  0065A2  0E00               	movlw	0
  6906  0065A4  6E14               	movwf	(___lldiv@divisor+3)^0,c
  6907  0065A6  C03A  F00D         	movff	_comidaMax,___lldiv@dividend
  6908  0065AA  C03B  F00E         	movff	_comidaMax+1,___lldiv@dividend+1
  6909  0065AE  C03C  F00F         	movff	_comidaMax+2,___lldiv@dividend+2
  6910  0065B2  C03D  F010         	movff	_comidaMax+3,___lldiv@dividend+3
  6911  0065B6  EC7B  F030         	call	___lldiv	;wreg free
  6912  0065BA  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  6913  0065BE  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  6914  0065C2  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  6915  0065C6  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  6916  0065CA  0E0A               	movlw	10
  6917  0065CC  6E1E               	movwf	___llmod@divisor^0,c
  6918  0065CE  0E00               	movlw	0
  6919  0065D0  6E1F               	movwf	(___llmod@divisor+1)^0,c
  6920  0065D2  0E00               	movlw	0
  6921  0065D4  6E20               	movwf	(___llmod@divisor+2)^0,c
  6922  0065D6  0E00               	movlw	0
  6923  0065D8  6E21               	movwf	(___llmod@divisor+3)^0,c
  6924  0065DA  ECE6  F02F         	call	___llmod	;wreg free
  6925  0065DE  C01A  F027         	movff	?___llmod,ShowOnDisplay@cent
  6926  0065E2  C01B  F028         	movff	?___llmod+1,ShowOnDisplay@cent+1
  6927                           
  6928                           ;newmain1.c: 47:     dez = ((comidaMax / 10) % 10);
  6929  0065E6  0E0A               	movlw	10
  6930  0065E8  6E11               	movwf	___lldiv@divisor^0,c
  6931  0065EA  0E00               	movlw	0
  6932  0065EC  6E12               	movwf	(___lldiv@divisor+1)^0,c
  6933  0065EE  0E00               	movlw	0
  6934  0065F0  6E13               	movwf	(___lldiv@divisor+2)^0,c
  6935  0065F2  0E00               	movlw	0
  6936  0065F4  6E14               	movwf	(___lldiv@divisor+3)^0,c
  6937  0065F6  C03A  F00D         	movff	_comidaMax,___lldiv@dividend
  6938  0065FA  C03B  F00E         	movff	_comidaMax+1,___lldiv@dividend+1
  6939  0065FE  C03C  F00F         	movff	_comidaMax+2,___lldiv@dividend+2
  6940  006602  C03D  F010         	movff	_comidaMax+3,___lldiv@dividend+3
  6941  006606  EC7B  F030         	call	___lldiv	;wreg free
  6942  00660A  C00D  F01A         	movff	?___lldiv,___llmod@dividend
  6943  00660E  C00E  F01B         	movff	?___lldiv+1,___llmod@dividend+1
  6944  006612  C00F  F01C         	movff	?___lldiv+2,___llmod@dividend+2
  6945  006616  C010  F01D         	movff	?___lldiv+3,___llmod@dividend+3
  6946  00661A  0E0A               	movlw	10
  6947  00661C  6E1E               	movwf	___llmod@divisor^0,c
  6948  00661E  0E00               	movlw	0
  6949  006620  6E1F               	movwf	(___llmod@divisor+1)^0,c
  6950  006622  0E00               	movlw	0
  6951  006624  6E20               	movwf	(___llmod@divisor+2)^0,c
  6952  006626  0E00               	movlw	0
  6953  006628  6E21               	movwf	(___llmod@divisor+3)^0,c
  6954  00662A  ECE6  F02F         	call	___llmod	;wreg free
  6955  00662E  C01A  F029         	movff	?___llmod,ShowOnDisplay@dez
  6956  006632  C01B  F02A         	movff	?___llmod+1,ShowOnDisplay@dez+1
  6957                           
  6958                           ;newmain1.c: 48:     un = (comidaMax % 10);
  6959  006636  C03A  F01A         	movff	_comidaMax,___llmod@dividend
  6960  00663A  C03B  F01B         	movff	_comidaMax+1,___llmod@dividend+1
  6961  00663E  C03C  F01C         	movff	_comidaMax+2,___llmod@dividend+2
  6962  006642  C03D  F01D         	movff	_comidaMax+3,___llmod@dividend+3
  6963  006646  0E0A               	movlw	10
  6964  006648  6E1E               	movwf	___llmod@divisor^0,c
  6965  00664A  0E00               	movlw	0
  6966  00664C  6E1F               	movwf	(___llmod@divisor+1)^0,c
  6967  00664E  0E00               	movlw	0
  6968  006650  6E20               	movwf	(___llmod@divisor+2)^0,c
  6969  006652  0E00               	movlw	0
  6970  006654  6E21               	movwf	(___llmod@divisor+3)^0,c
  6971  006656  ECE6  F02F         	call	___llmod	;wreg free
  6972  00665A  C01A  F02B         	movff	?___llmod,ShowOnDisplay@un
  6973  00665E  C01B  F02C         	movff	?___llmod+1,ShowOnDisplay@un+1
  6974                           
  6975                           ;newmain1.c: 50:     ssdDigit(mil, 0);
  6976  006662  0E00               	movlw	0
  6977  006664  6E23               	movwf	ssdDigit@pos^0,c
  6978  006666  5025               	movf	ShowOnDisplay@mil^0,w,c
  6979  006668  ECB4  F02E         	call	_ssdDigit
  6980                           
  6981                           ;newmain1.c: 51:     ssdDigit(cent, 1);
  6982  00666C  0E01               	movlw	1
  6983  00666E  6E23               	movwf	ssdDigit@pos^0,c
  6984  006670  5027               	movf	ShowOnDisplay@cent^0,w,c
  6985  006672  ECB4  F02E         	call	_ssdDigit
  6986                           
  6987                           ;newmain1.c: 52:     ssdDigit(dez, 2);
  6988  006676  0E02               	movlw	2
  6989  006678  6E23               	movwf	ssdDigit@pos^0,c
  6990  00667A  5029               	movf	ShowOnDisplay@dez^0,w,c
  6991  00667C  ECB4  F02E         	call	_ssdDigit
  6992                           
  6993                           ;newmain1.c: 53:     ssdDigit(un, 3);
  6994  006680  0E03               	movlw	3
  6995  006682  6E23               	movwf	ssdDigit@pos^0,c
  6996  006684  502B               	movf	ShowOnDisplay@un^0,w,c
  6997  006686  ECB4  F02E         	call	_ssdDigit
  6998  00668A  0012               	return		;funcret
  6999  00668C                     __end_of_ShowOnDisplay:
  7000                           	callstack 0
  7001                           
  7002 ;; *************** function ___llmod *****************
  7003 ;; Defined at:
  7004 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  dividend        4   25[COMRAM] unsigned long 
  7007 ;;  divisor         4   29[COMRAM] unsigned long 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  counter         1   33[COMRAM] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  4   25[COMRAM] unsigned long 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7019 ;;      Params:         8       0       0       0       0       0       0
  7020 ;;      Locals:         1       0       0       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0
  7022 ;;      Totals:         9       0       0       0       0       0       0
  7023 ;;Total ram usage:        9 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_qtdComidaLeitura
  7029 ;;		_ShowOnDisplay
  7030 ;;		_relogio
  7031 ;;		_serial
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text42
  7036  005FCC                     __ptext42:
  7037                           	callstack 0
  7038  005FCC                     ___llmod:
  7039                           	callstack 28
  7040  005FCC  501E               	movf	___llmod@divisor^0,w,c
  7041  005FCE  101F               	iorwf	(___llmod@divisor+1)^0,w,c
  7042  005FD0  1020               	iorwf	(___llmod@divisor+2)^0,w,c
  7043  005FD2  1021               	iorwf	(___llmod@divisor+3)^0,w,c
  7044  005FD4  B4D8               	btfsc	status,2,c
  7045  005FD6  EFEF  F02F         	goto	u2731
  7046  005FDA  EFF1  F02F         	goto	u2730
  7047  005FDE                     u2731:
  7048  005FDE  EF21  F030         	goto	l1007
  7049  005FE2                     u2730:
  7050  005FE2  0E01               	movlw	1
  7051  005FE4  6E22               	movwf	___llmod@counter^0,c
  7052  005FE6  EFFB  F02F         	goto	l2966
  7053  005FEA                     l2964:
  7054  005FEA  90D8               	bcf	status,0,c
  7055  005FEC  361E               	rlcf	___llmod@divisor^0,f,c
  7056  005FEE  361F               	rlcf	(___llmod@divisor+1)^0,f,c
  7057  005FF0  3620               	rlcf	(___llmod@divisor+2)^0,f,c
  7058  005FF2  3621               	rlcf	(___llmod@divisor+3)^0,f,c
  7059  005FF4  2A22               	incf	___llmod@counter^0,f,c
  7060  005FF6                     l2966:
  7061  005FF6  AE21               	btfss	(___llmod@divisor+3)^0,7,c
  7062  005FF8  EF00  F030         	goto	u2741
  7063  005FFC  EF02  F030         	goto	u2740
  7064  006000                     u2741:
  7065  006000  EFF5  F02F         	goto	l2964
  7066  006004                     u2740:
  7067  006004                     l2968:
  7068  006004  501E               	movf	___llmod@divisor^0,w,c
  7069  006006  5C1A               	subwf	___llmod@dividend^0,w,c
  7070  006008  501F               	movf	(___llmod@divisor+1)^0,w,c
  7071  00600A  581B               	subwfb	(___llmod@dividend+1)^0,w,c
  7072  00600C  5020               	movf	(___llmod@divisor+2)^0,w,c
  7073  00600E  581C               	subwfb	(___llmod@dividend+2)^0,w,c
  7074  006010  5021               	movf	(___llmod@divisor+3)^0,w,c
  7075  006012  581D               	subwfb	(___llmod@dividend+3)^0,w,c
  7076  006014  A0D8               	btfss	status,0,c
  7077  006016  EF0F  F030         	goto	u2751
  7078  00601A  EF11  F030         	goto	u2750
  7079  00601E                     u2751:
  7080  00601E  EF19  F030         	goto	l2972
  7081  006022                     u2750:
  7082  006022  501E               	movf	___llmod@divisor^0,w,c
  7083  006024  5E1A               	subwf	___llmod@dividend^0,f,c
  7084  006026  501F               	movf	(___llmod@divisor+1)^0,w,c
  7085  006028  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
  7086  00602A  5020               	movf	(___llmod@divisor+2)^0,w,c
  7087  00602C  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
  7088  00602E  5021               	movf	(___llmod@divisor+3)^0,w,c
  7089  006030  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
  7090  006032                     l2972:
  7091  006032  90D8               	bcf	status,0,c
  7092  006034  3221               	rrcf	(___llmod@divisor+3)^0,f,c
  7093  006036  3220               	rrcf	(___llmod@divisor+2)^0,f,c
  7094  006038  321F               	rrcf	(___llmod@divisor+1)^0,f,c
  7095  00603A  321E               	rrcf	___llmod@divisor^0,f,c
  7096  00603C  2E22               	decfsz	___llmod@counter^0,f,c
  7097  00603E  EF02  F030         	goto	l2968
  7098  006042                     l1007:
  7099  006042  C01A  F01A         	movff	___llmod@dividend,?___llmod
  7100  006046  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
  7101  00604A  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
  7102  00604E  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
  7103  006052  0012               	return		;funcret
  7104  006054                     __end_of___llmod:
  7105                           	callstack 0
  7106                           
  7107 ;; *************** function ___lldiv *****************
  7108 ;; Defined at:
  7109 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  dividend        4   12[COMRAM] unsigned long 
  7112 ;;  divisor         4   16[COMRAM] unsigned long 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  quotient        4   20[COMRAM] unsigned long 
  7115 ;;  counter         1   24[COMRAM] unsigned char 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  4   12[COMRAM] unsigned long 
  7118 ;; Registers used:
  7119 ;;		wreg, status,2, status,0
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7125 ;;      Params:         8       0       0       0       0       0       0
  7126 ;;      Locals:         5       0       0       0       0       0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0
  7128 ;;      Totals:        13       0       0       0       0       0       0
  7129 ;;Total ram usage:       13 bytes
  7130 ;; Hardware stack levels used: 1
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_qtdComidaLeitura
  7135 ;;		_ShowOnDisplay
  7136 ;;		_relogio
  7137 ;;		_comparacao
  7138 ;;		_serial
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text43
  7143  0060F6                     __ptext43:
  7144                           	callstack 0
  7145  0060F6                     ___lldiv:
  7146                           	callstack 28
  7147  0060F6  0E00               	movlw	0
  7148  0060F8  6E15               	movwf	___lldiv@quotient^0,c
  7149  0060FA  0E00               	movlw	0
  7150  0060FC  6E16               	movwf	(___lldiv@quotient+1)^0,c
  7151  0060FE  0E00               	movlw	0
  7152  006100  6E17               	movwf	(___lldiv@quotient+2)^0,c
  7153  006102  0E00               	movlw	0
  7154  006104  6E18               	movwf	(___lldiv@quotient+3)^0,c
  7155  006106  5011               	movf	___lldiv@divisor^0,w,c
  7156  006108  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  7157  00610A  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  7158  00610C  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  7159  00610E  B4D8               	btfsc	status,2,c
  7160  006110  EF8C  F030         	goto	u2261
  7161  006114  EF8E  F030         	goto	u2260
  7162  006118                     u2261:
  7163  006118  EFC4  F030         	goto	l614
  7164  00611C                     u2260:
  7165  00611C  0E01               	movlw	1
  7166  00611E  6E19               	movwf	___lldiv@counter^0,c
  7167  006120  EF98  F030         	goto	l2722
  7168  006124                     l2720:
  7169  006124  90D8               	bcf	status,0,c
  7170  006126  3611               	rlcf	___lldiv@divisor^0,f,c
  7171  006128  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  7172  00612A  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  7173  00612C  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  7174  00612E  2A19               	incf	___lldiv@counter^0,f,c
  7175  006130                     l2722:
  7176  006130  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  7177  006132  EF9D  F030         	goto	u2271
  7178  006136  EF9F  F030         	goto	u2270
  7179  00613A                     u2271:
  7180  00613A  EF92  F030         	goto	l2720
  7181  00613E                     u2270:
  7182  00613E                     l2724:
  7183  00613E  90D8               	bcf	status,0,c
  7184  006140  3615               	rlcf	___lldiv@quotient^0,f,c
  7185  006142  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  7186  006144  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  7187  006146  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  7188  006148  5011               	movf	___lldiv@divisor^0,w,c
  7189  00614A  5C0D               	subwf	___lldiv@dividend^0,w,c
  7190  00614C  5012               	movf	(___lldiv@divisor+1)^0,w,c
  7191  00614E  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  7192  006150  5013               	movf	(___lldiv@divisor+2)^0,w,c
  7193  006152  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  7194  006154  5014               	movf	(___lldiv@divisor+3)^0,w,c
  7195  006156  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  7196  006158  A0D8               	btfss	status,0,c
  7197  00615A  EFB1  F030         	goto	u2281
  7198  00615E  EFB3  F030         	goto	u2280
  7199  006162                     u2281:
  7200  006162  EFBC  F030         	goto	l2732
  7201  006166                     u2280:
  7202  006166  5011               	movf	___lldiv@divisor^0,w,c
  7203  006168  5E0D               	subwf	___lldiv@dividend^0,f,c
  7204  00616A  5012               	movf	(___lldiv@divisor+1)^0,w,c
  7205  00616C  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  7206  00616E  5013               	movf	(___lldiv@divisor+2)^0,w,c
  7207  006170  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  7208  006172  5014               	movf	(___lldiv@divisor+3)^0,w,c
  7209  006174  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  7210  006176  8015               	bsf	___lldiv@quotient^0,0,c
  7211  006178                     l2732:
  7212  006178  90D8               	bcf	status,0,c
  7213  00617A  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  7214  00617C  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  7215  00617E  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  7216  006180  3211               	rrcf	___lldiv@divisor^0,f,c
  7217  006182  2E19               	decfsz	___lldiv@counter^0,f,c
  7218  006184  EF9F  F030         	goto	l2724
  7219  006188                     l614:
  7220  006188  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  7221  00618C  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  7222  006190  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  7223  006194  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  7224  006198  0012               	return		;funcret
  7225  00619A                     __end_of___lldiv:
  7226                           	callstack 0
  7227                           
  7228 ;; *************** function _EraseDisplay *****************
  7229 ;; Defined at:
  7230 ;;		line 56 in file "newmain1.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;		None
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1    wreg      void 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7244 ;;      Params:         0       0       0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0
  7247 ;;      Totals:         0       0       0       0       0       0       0
  7248 ;;Total ram usage:        0 bytes
  7249 ;; Hardware stack levels used: 1
  7250 ;; Hardware stack levels required when called: 1
  7251 ;; This function calls:
  7252 ;;		_ssdDigit
  7253 ;; This function is called by:
  7254 ;;		_relogio
  7255 ;;		_comparacao
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text44
  7260  0059D2                     __ptext44:
  7261                           	callstack 0
  7262  0059D2                     _EraseDisplay:
  7263                           	callstack 27
  7264  0059D2                     
  7265                           ;newmain1.c: 57:     ssdDigit(0, 0);
  7266  0059D2  0E00               	movlw	0
  7267  0059D4  6E23               	movwf	ssdDigit@pos^0,c
  7268  0059D6  0E00               	movlw	0
  7269  0059D8  ECB4  F02E         	call	_ssdDigit
  7270                           
  7271                           ;newmain1.c: 58:     ssdDigit(0, 1);
  7272  0059DC  0E01               	movlw	1
  7273  0059DE  6E23               	movwf	ssdDigit@pos^0,c
  7274  0059E0  0E00               	movlw	0
  7275  0059E2  ECB4  F02E         	call	_ssdDigit
  7276                           
  7277                           ;newmain1.c: 59:     ssdDigit(0, 2);
  7278  0059E6  0E02               	movlw	2
  7279  0059E8  6E23               	movwf	ssdDigit@pos^0,c
  7280  0059EA  0E00               	movlw	0
  7281  0059EC  ECB4  F02E         	call	_ssdDigit
  7282                           
  7283                           ;newmain1.c: 60:     ssdDigit(0, 3);
  7284  0059F0  0E03               	movlw	3
  7285  0059F2  6E23               	movwf	ssdDigit@pos^0,c
  7286  0059F4  0E00               	movlw	0
  7287  0059F6  ECB4  F02E         	call	_ssdDigit
  7288  0059FA  0012               	return		;funcret
  7289  0059FC                     __end_of_EraseDisplay:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _ssdDigit *****************
  7293 ;; Defined at:
  7294 ;;		line 34 in file "ssd.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  val             1    wreg     unsigned char 
  7297 ;;  pos             1   34[COMRAM] unsigned char 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  val             1   35[COMRAM] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7309 ;;      Params:         1       0       0       0       0       0       0
  7310 ;;      Locals:         1       0       0       0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0
  7312 ;;      Totals:         2       0       0       0       0       0       0
  7313 ;;Total ram usage:        2 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_ShowOnDisplay
  7319 ;;		_EraseDisplay
  7320 ;;		_relogio
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text45
  7325  005D68                     __ptext45:
  7326                           	callstack 0
  7327  005D68                     _ssdDigit:
  7328                           	callstack 28
  7329                           
  7330                           ;incstack = 0
  7331                           ;ssdDigit@val stored from wreg
  7332  005D68  6E24               	movwf	ssdDigit@val^0,c
  7333  005D6A                     
  7334                           ;ssd.c: 35:     if (pos == 0) {
  7335  005D6A  5023               	movf	ssdDigit@pos^0,w,c
  7336  005D6C  A4D8               	btfss	status,2,c
  7337  005D6E  EFBB  F02E         	goto	u1921
  7338  005D72  EFBD  F02E         	goto	u1920
  7339  005D76                     u1921:
  7340  005D76  EFBF  F02E         	goto	l2580
  7341  005D7A                     u1920:
  7342  005D7A                     
  7343                           ;ssd.c: 36:         v0 = val;
  7344  005D7A  C024  F04A         	movff	ssdDigit@val,_v0
  7345  005D7E                     l2580:
  7346                           
  7347                           ;ssd.c: 38:     if (pos == 1) {
  7348  005D7E  0423               	decf	ssdDigit@pos^0,w,c
  7349  005D80  A4D8               	btfss	status,2,c
  7350  005D82  EFC5  F02E         	goto	u1931
  7351  005D86  EFC7  F02E         	goto	u1930
  7352  005D8A                     u1931:
  7353  005D8A  EFC9  F02E         	goto	l2584
  7354  005D8E                     u1930:
  7355  005D8E                     
  7356                           ;ssd.c: 39:         v1 = val;
  7357  005D8E  C024  F049         	movff	ssdDigit@val,_v1
  7358  005D92                     l2584:
  7359                           
  7360                           ;ssd.c: 41:     if (pos == 2) {
  7361  005D92  0E02               	movlw	2
  7362  005D94  1823               	xorwf	ssdDigit@pos^0,w,c
  7363  005D96  A4D8               	btfss	status,2,c
  7364  005D98  EFD0  F02E         	goto	u1941
  7365  005D9C  EFD2  F02E         	goto	u1940
  7366  005DA0                     u1941:
  7367  005DA0  EFD4  F02E         	goto	l2588
  7368  005DA4                     u1940:
  7369  005DA4                     
  7370                           ;ssd.c: 42:         v2 = val;
  7371  005DA4  C024  F048         	movff	ssdDigit@val,_v2
  7372  005DA8                     l2588:
  7373                           
  7374                           ;ssd.c: 44:     if (pos == 3) {
  7375  005DA8  0E03               	movlw	3
  7376  005DAA  1823               	xorwf	ssdDigit@pos^0,w,c
  7377  005DAC  A4D8               	btfss	status,2,c
  7378  005DAE  EFDB  F02E         	goto	u1951
  7379  005DB2  EFDD  F02E         	goto	u1950
  7380  005DB6                     u1951:
  7381  005DB6  EFDF  F02E         	goto	l413
  7382  005DBA                     u1950:
  7383  005DBA                     
  7384                           ;ssd.c: 45:         v3 = val;
  7385  005DBA  C024  F047         	movff	ssdDigit@val,_v3
  7386  005DBE                     l413:
  7387  005DBE  0012               	return		;funcret
  7388  005DC0                     __end_of_ssdDigit:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _adcInit *****************
  7392 ;; Defined at:
  7393 ;;		line 25 in file "adc.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;		None
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;		None
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  1    wreg      void 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7407 ;;      Params:         0       0       0       0       0       0       0
  7408 ;;      Locals:         0       0       0       0       0       0       0
  7409 ;;      Temps:          0       0       0       0       0       0       0
  7410 ;;      Totals:         0       0       0       0       0       0       0
  7411 ;;Total ram usage:        0 bytes
  7412 ;; Hardware stack levels used: 1
  7413 ;; Hardware stack levels required when called: 1
  7414 ;; This function calls:
  7415 ;;		_pinMode
  7416 ;; This function is called by:
  7417 ;;		_main
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text46
  7422  005BD6                     __ptext46:
  7423                           	callstack 0
  7424  005BD6                     _adcInit:
  7425                           	callstack 29
  7426  005BD6                     
  7427                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  7428  005BD6  0E00               	movlw	0
  7429  005BD8  6E02               	movwf	(pinMode@pin+1)^0,c
  7430  005BDA  0E00               	movlw	0
  7431  005BDC  6E01               	movwf	pinMode@pin^0,c
  7432  005BDE  0E00               	movlw	0
  7433  005BE0  6E04               	movwf	(pinMode@type+1)^0,c
  7434  005BE2  0E01               	movlw	1
  7435  005BE4  6E03               	movwf	pinMode@type^0,c
  7436  005BE6  ECE7  F036         	call	_pinMode	;wreg free
  7437                           
  7438                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  7439  005BEA  0E00               	movlw	0
  7440  005BEC  6E02               	movwf	(pinMode@pin+1)^0,c
  7441  005BEE  0E01               	movlw	1
  7442  005BF0  6E01               	movwf	pinMode@pin^0,c
  7443  005BF2  0E00               	movlw	0
  7444  005BF4  6E04               	movwf	(pinMode@type+1)^0,c
  7445  005BF6  0E01               	movlw	1
  7446  005BF8  6E03               	movwf	pinMode@type^0,c
  7447  005BFA  ECE7  F036         	call	_pinMode	;wreg free
  7448                           
  7449                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  7450  005BFE  0E00               	movlw	0
  7451  005C00  6E02               	movwf	(pinMode@pin+1)^0,c
  7452  005C02  0E02               	movlw	2
  7453  005C04  6E01               	movwf	pinMode@pin^0,c
  7454  005C06  0E00               	movlw	0
  7455  005C08  6E04               	movwf	(pinMode@type+1)^0,c
  7456  005C0A  0E01               	movlw	1
  7457  005C0C  6E03               	movwf	pinMode@type^0,c
  7458  005C0E  ECE7  F036         	call	_pinMode	;wreg free
  7459  005C12                     
  7460                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  7461  005C12  80C2               	bsf	194,0,c	;volatile
  7462  005C14                     
  7463                           ;adc.c: 33:     ADCON1 = 0b00001100;
  7464  005C14  0E0C               	movlw	12
  7465  005C16  6EC1               	movwf	193,c	;volatile
  7466  005C18                     
  7467                           ;adc.c: 34:     ADCON2 = 0b10101010;
  7468  005C18  0EAA               	movlw	170
  7469  005C1A  6EC0               	movwf	192,c	;volatile
  7470  005C1C  0012               	return		;funcret
  7471  005C1E                     __end_of_adcInit:
  7472                           	callstack 0
  7473                           
  7474 ;; *************** function _pinMode *****************
  7475 ;; Defined at:
  7476 ;;		line 54 in file "io.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  pin             2    0[COMRAM] int 
  7479 ;;  type            2    2[COMRAM] int 
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;		None
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  1    wreg      void 
  7484 ;; Registers used:
  7485 ;;		wreg, status,2, status,0
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7491 ;;      Params:         4       0       0       0       0       0       0
  7492 ;;      Locals:         0       0       0       0       0       0       0
  7493 ;;      Temps:          2       0       0       0       0       0       0
  7494 ;;      Totals:         6       0       0       0       0       0       0
  7495 ;;Total ram usage:        6 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_adcInit
  7501 ;;		_kpInit
  7502 ;;		_lcdInit
  7503 ;;		_rgbInit
  7504 ;;		_soInit
  7505 ;;		_ssdInit
  7506 ;;		_i2cInit
  7507 ;;		_read_SCL
  7508 ;;		_read_SDA
  7509 ;;		_clear_SCL
  7510 ;;		_clear_SDA
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text47
  7515  006DCE                     __ptext47:
  7516                           	callstack 0
  7517  006DCE                     _pinMode:
  7518                           	callstack 28
  7519  006DCE                     
  7520                           ;io.c: 56:     if(pin <8){
  7521  006DCE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  7522  006DD0  EFF5  F036         	goto	u1960
  7523  006DD4  5002               	movf	(pinMode@pin+1)^0,w,c
  7524  006DD6  E107               	bnz	u1961
  7525  006DD8  0E08               	movlw	8
  7526  006DDA  5C01               	subwf	pinMode@pin^0,w,c
  7527  006DDC  B0D8               	btfsc	status,0,c
  7528  006DDE  EFF3  F036         	goto	u1961
  7529  006DE2  EFF5  F036         	goto	u1960
  7530  006DE6                     u1961:
  7531  006DE6  EF1F  F037         	goto	l2600
  7532  006DEA                     u1960:
  7533  006DEA                     
  7534                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  7535  006DEA  5003               	movf	pinMode@type^0,w,c
  7536  006DEC  1004               	iorwf	(pinMode@type+1)^0,w,c
  7537  006DEE  B4D8               	btfsc	status,2,c
  7538  006DF0  EFFC  F036         	goto	u1971
  7539  006DF4  EFFE  F036         	goto	u1970
  7540  006DF8                     u1971:
  7541  006DF8  EF0E  F037         	goto	l2598
  7542  006DFC                     u1970:
  7543  006DFC  C001  F005         	movff	pinMode@pin,??_pinMode
  7544  006E00  0E01               	movlw	1
  7545  006E02  6E06               	movwf	(??_pinMode+1)^0,c
  7546  006E04  2A05               	incf	??_pinMode^0,f,c
  7547  006E06  EF07  F037         	goto	u1984
  7548  006E0A                     u1985:
  7549  006E0A  90D8               	bcf	status,0,c
  7550  006E0C  3606               	rlcf	(??_pinMode+1)^0,f,c
  7551  006E0E                     u1984:
  7552  006E0E  2E05               	decfsz	??_pinMode^0,f,c
  7553  006E10  EF05  F037         	goto	u1985
  7554  006E14  5006               	movf	(??_pinMode+1)^0,w,c
  7555  006E16  1292               	iorwf	146,f,c	;volatile
  7556  006E18  EF0D  F038         	goto	l195
  7557  006E1C                     l2598:
  7558  006E1C  C001  F005         	movff	pinMode@pin,??_pinMode
  7559  006E20  0E01               	movlw	1
  7560  006E22  6E06               	movwf	(??_pinMode+1)^0,c
  7561  006E24  2A05               	incf	??_pinMode^0,f,c
  7562  006E26  EF17  F037         	goto	u1994
  7563  006E2A                     u1995:
  7564  006E2A  90D8               	bcf	status,0,c
  7565  006E2C  3606               	rlcf	(??_pinMode+1)^0,f,c
  7566  006E2E                     u1994:
  7567  006E2E  2E05               	decfsz	??_pinMode^0,f,c
  7568  006E30  EF15  F037         	goto	u1995
  7569  006E34  5006               	movf	(??_pinMode+1)^0,w,c
  7570  006E36  0AFF               	xorlw	255
  7571  006E38  1692               	andwf	146,f,c	;volatile
  7572  006E3A  EF0D  F038         	goto	l195
  7573  006E3E                     l2600:
  7574  006E3E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  7575  006E40  EF2D  F037         	goto	u2000
  7576  006E44  5002               	movf	(pinMode@pin+1)^0,w,c
  7577  006E46  E107               	bnz	u2001
  7578  006E48  0E10               	movlw	16
  7579  006E4A  5C01               	subwf	pinMode@pin^0,w,c
  7580  006E4C  B0D8               	btfsc	status,0,c
  7581  006E4E  EF2B  F037         	goto	u2001
  7582  006E52  EF2D  F037         	goto	u2000
  7583  006E56                     u2001:
  7584  006E56  EF5B  F037         	goto	l2608
  7585  006E5A                     u2000:
  7586  006E5A                     
  7587                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  7588  006E5A  5003               	movf	pinMode@type^0,w,c
  7589  006E5C  1004               	iorwf	(pinMode@type+1)^0,w,c
  7590  006E5E  B4D8               	btfsc	status,2,c
  7591  006E60  EF34  F037         	goto	u2011
  7592  006E64  EF36  F037         	goto	u2010
  7593  006E68                     u2011:
  7594  006E68  EF48  F037         	goto	l2606
  7595  006E6C                     u2010:
  7596  006E6C  C001  F005         	movff	pinMode@pin,??_pinMode
  7597  006E70  0EF8               	movlw	-8
  7598  006E72  2605               	addwf	??_pinMode^0,f,c
  7599  006E74  0E01               	movlw	1
  7600  006E76  6E06               	movwf	(??_pinMode+1)^0,c
  7601  006E78  2A05               	incf	??_pinMode^0,f,c
  7602  006E7A  EF41  F037         	goto	u2024
  7603  006E7E                     u2025:
  7604  006E7E  90D8               	bcf	status,0,c
  7605  006E80  3606               	rlcf	(??_pinMode+1)^0,f,c
  7606  006E82                     u2024:
  7607  006E82  2E05               	decfsz	??_pinMode^0,f,c
  7608  006E84  EF3F  F037         	goto	u2025
  7609  006E88  5006               	movf	(??_pinMode+1)^0,w,c
  7610  006E8A  1293               	iorwf	147,f,c	;volatile
  7611  006E8C  EF0D  F038         	goto	l195
  7612  006E90                     l2606:
  7613  006E90  C001  F005         	movff	pinMode@pin,??_pinMode
  7614  006E94  0EF8               	movlw	-8
  7615  006E96  2605               	addwf	??_pinMode^0,f,c
  7616  006E98  0E01               	movlw	1
  7617  006E9A  6E06               	movwf	(??_pinMode+1)^0,c
  7618  006E9C  2A05               	incf	??_pinMode^0,f,c
  7619  006E9E  EF53  F037         	goto	u2034
  7620  006EA2                     u2035:
  7621  006EA2  90D8               	bcf	status,0,c
  7622  006EA4  3606               	rlcf	(??_pinMode+1)^0,f,c
  7623  006EA6                     u2034:
  7624  006EA6  2E05               	decfsz	??_pinMode^0,f,c
  7625  006EA8  EF51  F037         	goto	u2035
  7626  006EAC  5006               	movf	(??_pinMode+1)^0,w,c
  7627  006EAE  0AFF               	xorlw	255
  7628  006EB0  1693               	andwf	147,f,c	;volatile
  7629  006EB2  EF0D  F038         	goto	l195
  7630  006EB6                     l2608:
  7631  006EB6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  7632  006EB8  EF69  F037         	goto	u2040
  7633  006EBC  5002               	movf	(pinMode@pin+1)^0,w,c
  7634  006EBE  E107               	bnz	u2041
  7635  006EC0  0E18               	movlw	24
  7636  006EC2  5C01               	subwf	pinMode@pin^0,w,c
  7637  006EC4  B0D8               	btfsc	status,0,c
  7638  006EC6  EF67  F037         	goto	u2041
  7639  006ECA  EF69  F037         	goto	u2040
  7640  006ECE                     u2041:
  7641  006ECE  EF97  F037         	goto	l2616
  7642  006ED2                     u2040:
  7643  006ED2                     
  7644                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  7645  006ED2  5003               	movf	pinMode@type^0,w,c
  7646  006ED4  1004               	iorwf	(pinMode@type+1)^0,w,c
  7647  006ED6  B4D8               	btfsc	status,2,c
  7648  006ED8  EF70  F037         	goto	u2051
  7649  006EDC  EF72  F037         	goto	u2050
  7650  006EE0                     u2051:
  7651  006EE0  EF84  F037         	goto	l2614
  7652  006EE4                     u2050:
  7653  006EE4  C001  F005         	movff	pinMode@pin,??_pinMode
  7654  006EE8  0EF0               	movlw	-16
  7655  006EEA  2605               	addwf	??_pinMode^0,f,c
  7656  006EEC  0E01               	movlw	1
  7657  006EEE  6E06               	movwf	(??_pinMode+1)^0,c
  7658  006EF0  2A05               	incf	??_pinMode^0,f,c
  7659  006EF2  EF7D  F037         	goto	u2064
  7660  006EF6                     u2065:
  7661  006EF6  90D8               	bcf	status,0,c
  7662  006EF8  3606               	rlcf	(??_pinMode+1)^0,f,c
  7663  006EFA                     u2064:
  7664  006EFA  2E05               	decfsz	??_pinMode^0,f,c
  7665  006EFC  EF7B  F037         	goto	u2065
  7666  006F00  5006               	movf	(??_pinMode+1)^0,w,c
  7667  006F02  1294               	iorwf	148,f,c	;volatile
  7668  006F04  EF0D  F038         	goto	l195
  7669  006F08                     l2614:
  7670  006F08  C001  F005         	movff	pinMode@pin,??_pinMode
  7671  006F0C  0EF0               	movlw	-16
  7672  006F0E  2605               	addwf	??_pinMode^0,f,c
  7673  006F10  0E01               	movlw	1
  7674  006F12  6E06               	movwf	(??_pinMode+1)^0,c
  7675  006F14  2A05               	incf	??_pinMode^0,f,c
  7676  006F16  EF8F  F037         	goto	u2074
  7677  006F1A                     u2075:
  7678  006F1A  90D8               	bcf	status,0,c
  7679  006F1C  3606               	rlcf	(??_pinMode+1)^0,f,c
  7680  006F1E                     u2074:
  7681  006F1E  2E05               	decfsz	??_pinMode^0,f,c
  7682  006F20  EF8D  F037         	goto	u2075
  7683  006F24  5006               	movf	(??_pinMode+1)^0,w,c
  7684  006F26  0AFF               	xorlw	255
  7685  006F28  1694               	andwf	148,f,c	;volatile
  7686  006F2A  EF0D  F038         	goto	l195
  7687  006F2E                     l2616:
  7688  006F2E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  7689  006F30  EFA5  F037         	goto	u2080
  7690  006F34  5002               	movf	(pinMode@pin+1)^0,w,c
  7691  006F36  E107               	bnz	u2081
  7692  006F38  0E20               	movlw	32
  7693  006F3A  5C01               	subwf	pinMode@pin^0,w,c
  7694  006F3C  B0D8               	btfsc	status,0,c
  7695  006F3E  EFA3  F037         	goto	u2081
  7696  006F42  EFA5  F037         	goto	u2080
  7697  006F46                     u2081:
  7698  006F46  EFD3  F037         	goto	l2624
  7699  006F4A                     u2080:
  7700  006F4A                     
  7701                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  7702  006F4A  5003               	movf	pinMode@type^0,w,c
  7703  006F4C  1004               	iorwf	(pinMode@type+1)^0,w,c
  7704  006F4E  B4D8               	btfsc	status,2,c
  7705  006F50  EFAC  F037         	goto	u2091
  7706  006F54  EFAE  F037         	goto	u2090
  7707  006F58                     u2091:
  7708  006F58  EFC0  F037         	goto	l2622
  7709  006F5C                     u2090:
  7710  006F5C  C001  F005         	movff	pinMode@pin,??_pinMode
  7711  006F60  0EE8               	movlw	-24
  7712  006F62  2605               	addwf	??_pinMode^0,f,c
  7713  006F64  0E01               	movlw	1
  7714  006F66  6E06               	movwf	(??_pinMode+1)^0,c
  7715  006F68  2A05               	incf	??_pinMode^0,f,c
  7716  006F6A  EFB9  F037         	goto	u2104
  7717  006F6E                     u2105:
  7718  006F6E  90D8               	bcf	status,0,c
  7719  006F70  3606               	rlcf	(??_pinMode+1)^0,f,c
  7720  006F72                     u2104:
  7721  006F72  2E05               	decfsz	??_pinMode^0,f,c
  7722  006F74  EFB7  F037         	goto	u2105
  7723  006F78  5006               	movf	(??_pinMode+1)^0,w,c
  7724  006F7A  1295               	iorwf	149,f,c	;volatile
  7725  006F7C  EF0D  F038         	goto	l195
  7726  006F80                     l2622:
  7727  006F80  C001  F005         	movff	pinMode@pin,??_pinMode
  7728  006F84  0EE8               	movlw	-24
  7729  006F86  2605               	addwf	??_pinMode^0,f,c
  7730  006F88  0E01               	movlw	1
  7731  006F8A  6E06               	movwf	(??_pinMode+1)^0,c
  7732  006F8C  2A05               	incf	??_pinMode^0,f,c
  7733  006F8E  EFCB  F037         	goto	u2114
  7734  006F92                     u2115:
  7735  006F92  90D8               	bcf	status,0,c
  7736  006F94  3606               	rlcf	(??_pinMode+1)^0,f,c
  7737  006F96                     u2114:
  7738  006F96  2E05               	decfsz	??_pinMode^0,f,c
  7739  006F98  EFC9  F037         	goto	u2115
  7740  006F9C  5006               	movf	(??_pinMode+1)^0,w,c
  7741  006F9E  0AFF               	xorlw	255
  7742  006FA0  1695               	andwf	149,f,c	;volatile
  7743  006FA2  EF0D  F038         	goto	l195
  7744  006FA6                     l2624:
  7745  006FA6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  7746  006FA8  EFE1  F037         	goto	u2120
  7747  006FAC  5002               	movf	(pinMode@pin+1)^0,w,c
  7748  006FAE  E107               	bnz	u2121
  7749  006FB0  0E28               	movlw	40
  7750  006FB2  5C01               	subwf	pinMode@pin^0,w,c
  7751  006FB4  B0D8               	btfsc	status,0,c
  7752  006FB6  EFDF  F037         	goto	u2121
  7753  006FBA  EFE1  F037         	goto	u2120
  7754  006FBE                     u2121:
  7755  006FBE  EF0D  F038         	goto	l195
  7756  006FC2                     u2120:
  7757  006FC2                     
  7758                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  7759  006FC2  5003               	movf	pinMode@type^0,w,c
  7760  006FC4  1004               	iorwf	(pinMode@type+1)^0,w,c
  7761  006FC6  B4D8               	btfsc	status,2,c
  7762  006FC8  EFE8  F037         	goto	u2131
  7763  006FCC  EFEA  F037         	goto	u2130
  7764  006FD0                     u2131:
  7765  006FD0  EFFC  F037         	goto	l2630
  7766  006FD4                     u2130:
  7767  006FD4  C001  F005         	movff	pinMode@pin,??_pinMode
  7768  006FD8  0EE0               	movlw	-32
  7769  006FDA  2605               	addwf	??_pinMode^0,f,c
  7770  006FDC  0E01               	movlw	1
  7771  006FDE  6E06               	movwf	(??_pinMode+1)^0,c
  7772  006FE0  2A05               	incf	??_pinMode^0,f,c
  7773  006FE2  EFF5  F037         	goto	u2144
  7774  006FE6                     u2145:
  7775  006FE6  90D8               	bcf	status,0,c
  7776  006FE8  3606               	rlcf	(??_pinMode+1)^0,f,c
  7777  006FEA                     u2144:
  7778  006FEA  2E05               	decfsz	??_pinMode^0,f,c
  7779  006FEC  EFF3  F037         	goto	u2145
  7780  006FF0  5006               	movf	(??_pinMode+1)^0,w,c
  7781  006FF2  1296               	iorwf	150,f,c	;volatile
  7782  006FF4  EF0D  F038         	goto	l195
  7783  006FF8                     l2630:
  7784  006FF8  C001  F005         	movff	pinMode@pin,??_pinMode
  7785  006FFC  0EE0               	movlw	-32
  7786  006FFE  2605               	addwf	??_pinMode^0,f,c
  7787  007000  0E01               	movlw	1
  7788  007002  6E06               	movwf	(??_pinMode+1)^0,c
  7789  007004  2A05               	incf	??_pinMode^0,f,c
  7790  007006  EF07  F038         	goto	u2154
  7791  00700A                     u2155:
  7792  00700A  90D8               	bcf	status,0,c
  7793  00700C  3606               	rlcf	(??_pinMode+1)^0,f,c
  7794  00700E                     u2154:
  7795  00700E  2E05               	decfsz	??_pinMode^0,f,c
  7796  007010  EF05  F038         	goto	u2155
  7797  007014  5006               	movf	(??_pinMode+1)^0,w,c
  7798  007016  0AFF               	xorlw	255
  7799  007018  1696               	andwf	150,f,c	;volatile
  7800  00701A                     l195:
  7801  00701A  0012               	return		;funcret
  7802  00701C                     __end_of_pinMode:
  7803                           	callstack 0
  7804                           
  7805                           	psect	rparam
  7806  0000                     
  7807                           	psect	idloc
  7808                           
  7809                           ;Config register IDLOC0 @ 0x200000
  7810                           ;	unspecified, using default values
  7811  200000                     	org	2097152
  7812  200000  FF                 	db	255
  7813                           
  7814                           ;Config register IDLOC1 @ 0x200001
  7815                           ;	unspecified, using default values
  7816  200001                     	org	2097153
  7817  200001  FF                 	db	255
  7818                           
  7819                           ;Config register IDLOC2 @ 0x200002
  7820                           ;	unspecified, using default values
  7821  200002                     	org	2097154
  7822  200002  FF                 	db	255
  7823                           
  7824                           ;Config register IDLOC3 @ 0x200003
  7825                           ;	unspecified, using default values
  7826  200003                     	org	2097155
  7827  200003  FF                 	db	255
  7828                           
  7829                           ;Config register IDLOC4 @ 0x200004
  7830                           ;	unspecified, using default values
  7831  200004                     	org	2097156
  7832  200004  FF                 	db	255
  7833                           
  7834                           ;Config register IDLOC5 @ 0x200005
  7835                           ;	unspecified, using default values
  7836  200005                     	org	2097157
  7837  200005  FF                 	db	255
  7838                           
  7839                           ;Config register IDLOC6 @ 0x200006
  7840                           ;	unspecified, using default values
  7841  200006                     	org	2097158
  7842  200006  FF                 	db	255
  7843                           
  7844                           ;Config register IDLOC7 @ 0x200007
  7845                           ;	unspecified, using default values
  7846  200007                     	org	2097159
  7847  200007  FF                 	db	255
  7848                           
  7849                           	psect	config
  7850                           
  7851                           ; Padding undefined space
  7852  300000                     	org	3145728
  7853  300000  FF                 	db	255
  7854                           
  7855                           ;Config register CONFIG1H @ 0x300001
  7856                           ;	Oscillator Selection bits
  7857                           ;	OSC = HS, HS oscillator
  7858                           ;	Fail-Safe Clock Monitor Enable bit
  7859                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7860                           ;	Internal/External Oscillator Switchover bit
  7861                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7862  300001                     	org	3145729
  7863  300001  02                 	db	2
  7864                           
  7865                           ;Config register CONFIG2L @ 0x300002
  7866                           ;	Power-up Timer Enable bit
  7867                           ;	PWRT = OFF, PWRT disabled
  7868                           ;	Brown-out Reset Enable bits
  7869                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7870                           ;	Brown Out Reset Voltage bits
  7871                           ;	BORV = 0x2E, user specified literal
  7872  300002                     	org	3145730
  7873  300002  71                 	db	369
  7874                           
  7875                           ;Config register CONFIG2H @ 0x300003
  7876                           ;	Watchdog Timer Enable bit
  7877                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7878                           ;	Watchdog Timer Postscale Select bits
  7879                           ;	WDTPS = 1, 1:1
  7880  300003                     	org	3145731
  7881  300003  00                 	db	0
  7882                           
  7883                           ; Padding undefined space
  7884  300004                     	org	3145732
  7885  300004  FF                 	db	255
  7886                           
  7887                           ;Config register CONFIG3H @ 0x300005
  7888                           ;	CCP2 MUX bit
  7889                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7890                           ;	PORTB A/D Enable bit
  7891                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7892                           ;	Low-Power Timer1 Oscillator Enable bit
  7893                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7894                           ;	MCLR Pin Enable bit
  7895                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7896  300005                     	org	3145733
  7897  300005  83                 	db	131
  7898                           
  7899                           ;Config register CONFIG4L @ 0x300006
  7900                           ;	Stack Full/Underflow Reset Enable bit
  7901                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7902                           ;	Single-Supply ICSP Enable bit
  7903                           ;	LVP = OFF, Single-Supply ICSP disabled
  7904                           ;	Extended Instruction Set Enable bit
  7905                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7906                           ;	Background Debugger Enable bit
  7907                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7908  300006                     	org	3145734
  7909  300006  80                 	db	128
  7910                           
  7911                           ; Padding undefined space
  7912  300007                     	org	3145735
  7913  300007  FF                 	db	255
  7914                           
  7915                           ;Config register CONFIG5L @ 0x300008
  7916                           ;	Code Protection bit
  7917                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7918                           ;	Code Protection bit
  7919                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7920                           ;	Code Protection bit
  7921                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7922                           ;	Code Protection bit
  7923                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7924  300008                     	org	3145736
  7925  300008  0F                 	db	15
  7926                           
  7927                           ;Config register CONFIG5H @ 0x300009
  7928                           ;	Boot Block Code Protection bit
  7929                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7930                           ;	Data EEPROM Code Protection bit
  7931                           ;	CPD = OFF, Data EEPROM not code-protected
  7932  300009                     	org	3145737
  7933  300009  C0                 	db	192
  7934                           
  7935                           ;Config register CONFIG6L @ 0x30000A
  7936                           ;	Write Protection bit
  7937                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7938                           ;	Write Protection bit
  7939                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7940                           ;	Write Protection bit
  7941                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7942                           ;	Write Protection bit
  7943                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7944  30000A                     	org	3145738
  7945  30000A  0F                 	db	15
  7946                           
  7947                           ;Config register CONFIG6H @ 0x30000B
  7948                           ;	Configuration Register Write Protection bit
  7949                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7950                           ;	Boot Block Write Protection bit
  7951                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7952                           ;	Data EEPROM Write Protection bit
  7953                           ;	WRTD = OFF, Data EEPROM not write-protected
  7954  30000B                     	org	3145739
  7955  30000B  E0                 	db	224
  7956                           
  7957                           ;Config register CONFIG7L @ 0x30000C
  7958                           ;	Table Read Protection bit
  7959                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7960                           ;	Table Read Protection bit
  7961                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7962                           ;	Table Read Protection bit
  7963                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7964                           ;	Table Read Protection bit
  7965                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7966  30000C                     	org	3145740
  7967  30000C  0F                 	db	15
  7968                           
  7969                           ;Config register CONFIG7H @ 0x30000D
  7970                           ;	Boot Block Table Read Protection bit
  7971                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7972  30000D                     	org	3145741
  7973  30000D  40                 	db	64
  7974                           tosu	equ	0xFFF
  7975                           tosh	equ	0xFFE
  7976                           tosl	equ	0xFFD
  7977                           stkptr	equ	0xFFC
  7978                           pclatu	equ	0xFFB
  7979                           pclath	equ	0xFFA
  7980                           pcl	equ	0xFF9
  7981                           tblptru	equ	0xFF8
  7982                           tblptrh	equ	0xFF7
  7983                           tblptrl	equ	0xFF6
  7984                           tablat	equ	0xFF5
  7985                           prodh	equ	0xFF4
  7986                           prodl	equ	0xFF3
  7987                           indf0	equ	0xFEF
  7988                           postinc0	equ	0xFEE
  7989                           postdec0	equ	0xFED
  7990                           preinc0	equ	0xFEC
  7991                           plusw0	equ	0xFEB
  7992                           fsr0h	equ	0xFEA
  7993                           fsr0l	equ	0xFE9
  7994                           wreg	equ	0xFE8
  7995                           indf1	equ	0xFE7
  7996                           postinc1	equ	0xFE6
  7997                           postdec1	equ	0xFE5
  7998                           preinc1	equ	0xFE4
  7999                           plusw1	equ	0xFE3
  8000                           fsr1h	equ	0xFE2
  8001                           fsr1l	equ	0xFE1
  8002                           bsr	equ	0xFE0
  8003                           indf2	equ	0xFDF
  8004                           postinc2	equ	0xFDE
  8005                           postdec2	equ	0xFDD
  8006                           preinc2	equ	0xFDC
  8007                           plusw2	equ	0xFDB
  8008                           fsr2h	equ	0xFDA
  8009                           fsr2l	equ	0xFD9
  8010                           status	equ	0xFD8

Data Sizes:
    Strings     262
    Constant    26
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     53      81
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_38(CODE[10]), STR_37(CODE[13]), STR_36(CODE[8]), STR_35(CODE[17]), 
		 -> STR_34(CODE[8]), STR_33(CODE[9]), STR_32(CODE[9]), STR_31(CODE[10]), 
		 -> STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[9]), STR_27(CODE[7]), 
		 -> STR_26(CODE[8]), STR_25(CODE[6]), STR_24(CODE[8]), STR_23(CODE[8]), 
		 -> STR_22(CODE[13]), STR_21(CODE[8]), STR_20(CODE[17]), STR_19(CODE[8]), 
		 -> STR_18(CODE[10]), STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[10]), 
		 -> STR_14(CODE[10]), STR_13(CODE[9]), STR_12(CODE[10]), STR_11(CODE[11]), 
		 -> STR_10(CODE[8]), STR_9(CODE[10]), STR_8(CODE[9]), STR_7(CODE[8]), 
		 -> STR_6(CODE[10]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[10]), 
		 -> STR_2(CODE[11]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_serial
    _ssdInit->_pinMode
    _serial->_relogio
    _rgbInit->_pinMode
    _qtdComidaLeitura->___llmod
    _leituraTeclas->_relogio
    _turnOn->_digitalWrite
    _turnOff->_digitalWrite
    _relogio->_ssdDigit
    _ssdUpdate->_soWrite
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _kpDebounce->_soWrite
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _comparacao->_ShowOnDisplay
    _ShowOnDisplay->_ssdDigit
    ___llmod->___lldiv
    ___lldiv->___lmul
    _EraseDisplay->_ssdDigit
    _ssdDigit->___llmod
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  542735
                                             50 COMRAM     3     3      0
                            _adcInit
                         _comparacao
                             _kpInit
                            _lcdInit
                          _lcdString
                      _leituraTeclas
                   _qtdComidaLeitura
                            _rgbInit
                             _serial
                         _serialInit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
                         _timerReset
                          _timerWait
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial                                               6     6      0  132322
                                             44 COMRAM     6     6      0
                            ___lldiv
                            ___llmod
                             ___lmul
                            _adcRead
                         _lcdCommand
                        _lcdPosition
                          _lcdString
                            _relogio
                         _serialRead
                         _serialSend
 ---------------------------------------------------------------------------------
 (2) _serialSend                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _serialRead                                           1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _qtdComidaLeitura                                     8     8      0   99298
                                             34 COMRAM     8     8      0
                            ___lldiv
                            ___llmod
                             ___lmul
                            _adcRead
                            _lcdChar
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _leituraTeclas                                        3     3      0  154598
                                             44 COMRAM     3     3      0
                         _kpDebounce
                             _kpRead
                          _kpReadKey
                         _lcdCommand
                        _lcdPosition
                          _lcdString
                            _relogio
                            _turnOff
                             _turnOn
 ---------------------------------------------------------------------------------
 (2) _turnOn                                               2     0      2    5602
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _turnOff                                              2     0      2    5602
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _relogio                                              8     8      0   33031
                                             36 COMRAM     8     8      0
                       _EraseDisplay
                            ___fladd
                             ___flge
                            ___lldiv
                            ___llmod
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   22593
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   32053
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          4     0      4   31413
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   66428
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _comparacao                                           0     0      0   11633
                       _EraseDisplay
                      _ShowOnDisplay
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _ShowOnDisplay                                        8     8      0    6365
                                             36 COMRAM     8     8      0
                            ___lldiv
                            ___llmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    2287
                                             25 COMRAM     9     1      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2898
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _EraseDisplay                                         0     0      0    1088
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1    1088
                                             34 COMRAM     2     1      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3936
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _comparacao
     _EraseDisplay
       _ssdDigit
         ___lldiv (ARG)
           ___lmul (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
           ___lmul (ARG)
     _ShowOnDisplay
       ___lldiv
       ___llmod
       _ssdDigit
     ___lldiv
     ___lmul
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _leituraTeclas
     _kpDebounce
       _digitalRead
       _soWrite
     _kpRead
     _kpReadKey
     _lcdCommand
     _lcdPosition
       _lcdCommand
     _lcdString
     _relogio
       _EraseDisplay
       ___fladd
       ___flge
       ___lldiv
       ___llmod
       _ssdDigit
       _ssdUpdate
         _digitalWrite
         _soWrite
     _turnOff
       _digitalWrite
     _turnOn
       _digitalWrite
   _qtdComidaLeitura
     ___lldiv
     ___llmod
     ___lmul
     _adcRead
     _lcdChar
     _lcdPosition
     _lcdString
   _rgbInit
     _pinMode
   _serial
     ___lldiv
     ___llmod
     ___lmul
     _adcRead
     _lcdCommand
     _lcdPosition
     _lcdString
     _relogio
     _serialRead
     _serialSend
   _serialInit
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
   _timerInit
   _timerReset
   _timerWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     35      51       1       63.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      51      15        0.0%
DATA                 0      0      51       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 14:51:11 2021

           _pulseEnablePin 5B94               lcdString@msg 000F                         l21 5C9E  
                       l22 5CBA                         l15 5C1C                         l19 5C90  
                       _v0 004A                         _v1 0049                         _v2 0048  
                       _v3 0047                        l212 58F6                        l232 652C  
                      l161 7268                        l170 67F0                        l234 6544  
                      l218 5FCA                        l260 59D0                        l413 5DBE  
                      l237 5ADC                        l165 67F4                        l333 5E80  
                      l254 5AAA                        l166 67F0                        l263 5E18  
                      l271 5B16                        l423 6960                        l327 5EE8  
                      l511 6B88                        l248 58E4                        l280 5D10  
                      l336 5B92                        l360 591C                        l440 58F8  
                      l257 5BD4                        l514 668A                        l266 596A  
                      l274 5988                        l426 5D66                        l195 701A  
                      l443 5906                        l524 6DCC                        l517 59FA  
                      l621 6198                        l381 5A24                        l365 5A7A  
                      l357 590A                        l614 6188                        l446 59AA  
                      l375 5B54                        l544 60F4                        l368 594C  
                      l289 624C                        l449 58EC                        l378 5A4E  
                      l386 5C6A                        l538 7612                        l558 7A1C  
                      l852 63C8                        l598 5F42                        l599 5F52  
                      l857 640E                        _PR2 000FCB                        _qtd 0036  
                      wreg 000FE8                       l1014 6052                       l1007 6042  
                     l1115 7C0C                       l1132 7D26                       l1124 7EDC  
                     l1116 7BFA                       l2012 5934                       l2020 58F8  
                     l1141 7DF6                       l1117 7BC0                       l1142 7DE4  
                     l2014 5948                       l2016 594A                       l3010 6440  
                     l3002 58EE                       l2034 58E6                       l3012 648C  
                     l3004 6410                       l3100 6B96                       l2036 58EA  
                     l3030 653C                       l3014 64B2                       l3022 6502  
                     l3006 6420                       l3110 6D0C                       l3120 5EEA  
                     l3032 5B18                       l3024 651A                       l3016 64D0  
                     l3040 5AFA                       l3104 6BB0                       l3130 5BD6  
                     l3122 5EFA                       l3210 5AD8                       l3034 59AE  
                     l3026 6520                       l3018 64FA                       l3042 5B0C  
                     l3050 5CE8                       l3114 6D42                       l3106 6CF8  
                     l3132 5C12                       l3124 5F08                       l2500 701C  
                     l3220 622E                       l3212 619A                       l3028 6524  
                     l3036 5ADE                       l3044 5CBC                       l3116 6DA8  
                     l3108 6CFC                       l3060 5EC6                       l3052 5E82  
                     l3300 7368                       l3134 5C14                       l3126 5F18  
                     l2510 70A8                       l2502 7038                       l3222 623A  
                     l3214 61FA                       l3038 5AF0                       l3046 5CC8  
                     l3118 6DC8                       l3070 5E4A                       l3062 5ED4  
                     l3054 5E90                       l3310 739C                       l3302 7378  
                     l3230 5D12                       l2600 6E3E                       l3136 5C18  
                     l3128 5F22                       l3400 60F0                       l3208 5AAC  
                     l2520 713A                       l2512 70C2                       l2504 704A  
                     l3224 6240                       l3216 6206                       l3048 5CE4  
                     l3072 5E5E                       l3064 5E1A                       l3056 5EA4  
                     l3320 73F8                       l3312 73B0                       l3304 7384  
                     l3080 5A50                       l3240 59A4                       l3232 598A  
                     l2610 6ED2                       l2602 6E5A                       l2530 71D2  
                     l2522 715A                       l2514 70E2                       l2506 706A  
                     l3226 6246                       l3218 6220                       l3074 5E6C  
                     l3066 5E28                       l3058 5EB2                       l3330 7444  
                     l3322 73FE                       l3314 73D0                       l3306 738A  
                     l3250 69B8                       l3090 5A78                       l3082 5A54  
                     l3410 762E                       l3402 7614                       l3242 59A8  
                     l3234 5994                       l2620 6F5C                       l2612 6EE4  
                     l2604 6E6C                       l2532 71F4                       l2524 717C  
                     l2516 7104                       l2508 708C                       l2540 5A26  
                     l2700 691E                       l3068 5E3C                       l3340 747E  
                     l3332 7450                       l3324 740A                       l3316 73DC  
                     l3308 7396                       l3260 6B14                       l3252 69C4  
                     l3244 6962                       l3228 5B56                       l3084 5A62  
                     l3076 590A                       l3420 7666                       l3412 7634  
                     l3404 761A                       l3236 5998                       l2630 6FF8  
                     l2622 6F80                       l2614 6F08                       l2606 6E90  
                     l3094 6546                       l2534 7210                       l2526 7198  
                     l2518 7120                       l2542 59FC                       l3350 74D4  
                     l3342 7484                       l3334 7460                       l3326 7410  
                     l3318 73EC                       l3270 729C                       l3254 6A1C  
                     l3262 6B88                       l3246 6980                       l3086 5A66  
                     l3078 5918                       l3430 76A4                       l3422 766C  
                     l3414 7640                       l3238 59A0                       l2624 6FA6  
                     l2616 6F2E                       l2608 6EB6                       l2712 59D2  
                     l2720 6124                       l2536 722A                       l2528 71B2  
                     l2560 5C66                       l2552 5C36                       l2544 5C1E  
                     l2640 66D0                       l2632 668C                       l2800 7B42  
                     l3096 6B8A                       l3360 750C                       l3352 74E0  
                     l3344 7498                       l3336 746C                       l3328 7424  
                     l3280 72D4                       l3272 72A2                       l3264 726A  
                     l3256 6A6C                       l3248 69A4                       l3088 5A74  
                     l3440 76E8                       l3432 76B0                       l3424 7678  
                     l3416 7646                       l3600 629A                       l2626 6FC2  
                     l2618 6F4A                       l2730 6176                       l2722 6130  
                     l2714 60F6                       l2570 5A88                       l2538 724A  
                     l2562 5B94                       l2554 5C4E                       l2546 5C32  
                     l2650 6734                       l2642 66EC                       l2634 66A8  
                     l1770 5F5C                       l2810 7B56                       l2802 7B46  
                     l2706 6926                       l3098 6B8A                       l3370 7566  
                     l3362 752C                       l3354 74E6                       l3346 74B8  
                     l3338 7472                       l3290 7316                       l3282 72E8  
                     l3274 72AE                       l3266 7290                       l3258 6AC4  
                     l3450 7732                       l3442 76FA                       l3434 76C2  
                     l3426 768A                       l3418 7652                       l3610 62B6  
                     l3602 62A2                       l2628 6FD4                       l2580 5D7E  
                     l2732 6178                       l2724 613E                       l2716 6106  
                     l2572 5A8C                       l2564 5BA8                       l2556 5C54  
                     l1780 5FC8                       l1772 5F94                       l1764 5F54  
                     l2900 7DC6                       l2820 7BA8                       l2812 7B5A  
                     l2804 7B4A                       l2740 7A38                       l3380 759C  
                     l3372 7572                       l3364 7538                       l3356 74F2  
                     l3348 74C4                       l3292 7322                       l3284 72F4  
                     l3276 72B4                       l3268 7298                       l3460 777E  
                     l3452 7746                       l3444 770E                       l3436 76D6  
                     l3428 769E                       l3612 62BE                       l3604 62A6  
                     l2590 5DBA                       l2582 5D8E                       l2734 6182  
                     l2726 6148                       l2718 611C                       l2566 5BB4  
                     l2558 5C56                       l2574 5DC2                       l2670 5950  
                     l2910 7E20                       l2902 7DDC                       l2830 7BEC  
                     l2822 7BB8                       l2806 7B4E                       l2814 7B5E  
                     l2750 7A6C                       l2742 7A3A                       l3382 75AE  
                     l3374 7578                       l3366 7548                       l3358 74F8  
                     l3294 7328                       l3286 7304                       l3278 72C8  
                     l3470 77B6                       l3462 7784                       l3454 774C  
                     l3446 7714                       l3438 76DC                       l3606 62AE  
                     l2592 6DCE                       l2584 5D92                       l2576 5D6A  
                     l2728 6166                       l3392 6054                       l2568 5A7C  
                     l2664 67A8                       l2656 6760                       l2648 6718  
                     l1776 5FA8                       l2672 596E                       l2920 7E9C  
                     l2912 7E5A                       l2832 7BEE                       l2824 7BCE  
                     l2816 7B62                       l2808 7B52                       l2760 7A9E  
                     l2744 7A4A                       l2752 7A74                       l2736 7A1E  
                     l2680 686E                       l3376 758C                       l3368 7554  
                     l3296 733C                       l3288 7310                       l3480 7840  
                     l3472 77BA                       l3464 7790                       l3456 7758  
                     l3448 7720                       l3640 62DA                       l3608 62B2  
                     l3616 62C6                       l2594 6DEA                       l2586 5DA4  
                     l2578 5D7A                       l3394 60AC                       l2666 67C4  
                     l2658 677C                       l1778 5FAC                       l2674 597C  
                     l2930 7EBC                       l2922 7EA0                       l2906 7E06  
                     l2914 7E5C                       l2850 7C76                       l2842 7C3E  
                     l2834 7BF8                       l2826 7BDA                       l2818 7B8C  
                     l2770 7AD4                       l2762 7AA4                       l2754 7A84  
                     l2746 7A5A                       l2738 7A2A                       l2690 68BE  
                     l2682 6882                       l3378 7598                       l3298 735C  
                     l3386 75BE                       l3490 78FA                       l3482 7846  
                     l3642 77E4                       l3466 7796                       l3458 776A  
                     l3618 6300                       l2596 6DFC                       l2588 5DA8  
                     l3396 60CA                       l2932 7ECA                       l2924 7EAE  
                     l2916 7E6C                       l2908 7E12                       l2852 7C7A  
                     l2844 7C4E                       l2836 7C1A                       l2860 7C9A  
                     l2828 7BDE                       l2780 7B10                       l2772 7AE4  
                     l2764 7AB2                       l2756 7A8A                       l2748 7A6A  
                     l2940 633A                       l2692 68D6                       l2684 688A  
                     l2676 67F6                       l3644 75D4                       l3492 7952  
                     l3484 784C                       l3468 77AA                       l3476 77D0  
                     l2598 6E1C                       l3398 60D2                       l2934 7ECC  
                     l2926 7EB4                       l2918 7E7C                       l2862 7CC0  
                     l2870 7D16                       l2854 7C88                       l2846 7C5C  
                     l2838 7C2A                       l2790 7B2E                       l2782 7B1E  
                     l2774 7AE6                       l2766 7AB4                       l2758 7A9C  
                     l2950 63A8                       l2942 634A                       l3646 693A  
                     l2694 68EA                       l2686 68A2                       l2678 6856  
                     l3494 79A2                       l3486 7852                       l3478 7822  
                     l3590 626A                       l2960 5FCC                       l2928 7EB6  
                     l2880 7D6A                       l2872 7D3C                       l2864 7CF4  
                     l2856 7C8A                       l2848 7C6A                       l2792 7B32  
                     l2784 7B22                       l2768 7AC4                       l2776 7AEE  
                     l2952 63B6                       l2944 6378                       l2696 68F2  
                     l2688 68B6                       l3488 78AA                       l3592 6276  
                     l2970 6022                       l2962 5FE2                       l2890 7D94  
                     l2882 7D78                       l2874 7D4C                       l2866 7CF6  
                     l2858 7C94                       l2794 7B36                       l2786 7B26  
                     l2778 7AFE                       l2954 6406                       l2946 6388  
                     l2938 630C                       l2698 690A                       l3594 6286  
                     l2972 6032                       l2964 5FEA                       l2892 7DA4  
                     l2884 7D7A                       l2868 7D06                       l2796 7B3A  
                     l2788 7B2A                       l2956 640C                       l2948 6396  
                     l2980 5C8E                       l3596 628E                       l3588 624E  
                     l2974 603C                       l2966 5FF6                       l2886 7D88  
                     l2878 7D60                       l2894 7DA6                       l2798 7B3E  
                     l2982 5CA4                       l3598 6296                       l2968 6004  
                     l2888 7D90                       l2896 7DB4                       l2984 5CAA  
                     l2976 5C6C                       l2898 7DB8                       l2986 5CB2  
                     l2978 5C86                       STR_1 7FF3                       STR_2 7F17  
                     STR_3 7F73                       STR_4 7FD4                       STR_5 7F7D  
                     STR_6 7F69                       STR_7 7FCC                       STR_8 7F86  
                     STR_9 7F41                       u2000 6E5A                       u2001 6E56  
                     u2010 6E6C                       u2011 6E68                       u1140 5F94  
                     u1141 5F90                       u1150 5FC8                       u1134 5F74  
                     u1151 5FC4                       u1135 5F6E                       u2120 6FC2  
                     u2104 6F72                       u2040 6ED2                       u2024 6E82  
                     u2200 6734                       u3000 5A62                       u2121 6FBE  
                     u2105 6F6E                       u2041 6ECE                       u2025 6E7E  
                     u2201 6730                       u3001 5A5E                       u2130 6FD4  
                     u2114 6F96                       u2050 6EE4                       u2034 6EA6  
                     u3010 5A74                       u2131 6FD0                       u2115 6F92  
                     u2051 6EE0                       u2035 6EA2                       u3011 5A70  
                     u2220 677C                       u2300 7A4A                       u3020 6BAC  
                     u2221 6778                       u2301 7A46                       u3021 6BA8  
                     u2214 674A                       u2310 7A5A                       u3030 6D3E  
                     u2215 6746                       u2311 7A56                       u3031 6D3A  
                     u2144 6FEA                       u2080 6F4A                       u2064 6EFA  
                     u2240 67C4                       u2160 66A8                       u2400 7BA6  
                     u2320 7A9C                       u3040 6DA8                       u2145 6FE6  
                     u2081 6F46                       u2065 6EF6                       u2241 67C0  
                     u2161 66A4                       u2321 7A98                       u3041 6DA4  
                     u2154 700E                       u2090 6F5C                       u2074 6F1E  
                     u2234 6792                       u2410 7BCE                       u2330 7AB2  
                     u3050 6DC8                       u2155 700A                       u2091 6F58  
                     u2075 6F1A                       u2235 678E                       u2411 7BCA  
                     u2331 7AAE                       u3051 6DC4                       u2260 611C  
                     u3060 5F08                       u1700 7038                       u2180 66EC  
                     u2500 7D06                       u2420 7BEC                       u2340 7AC4  
                     u2261 6118                       u3061 5F04                       u1701 7034  
                     u2181 66E8                       u2501 7D02                       u2421 7BE8  
                     u2341 7AC0                       u2270 613E                       u3070 5F42  
                     u1710 704A                       u2254 67DA                       u2174 66BA  
                     u2510 7D3C                       u2430 7C0C                       u2350 7AD4  
                     u3150 69A4                       u2271 613A                       u3071 5F3E  
                     u1711 7046                       u2255 67D6                       u2175 66B6  
                     u2511 7D38                       u2431 7C08                       u2351 7AD0  
                     u3151 69A0                       u2280 6166                       u2600 7E06  
                     u2520 7D4C                       u2440 7C1A                       u2360 7B10  
                     u3160 7290                       u2281 6162                       u2601 7E02  
                     u2521 7D48                       u2441 7C16                       u2361 7B0C  
                     u3161 728C                       u3170 60CA                       u2194 6702  
                     u2610 7E20                       u2530 7D78                       u2450 7C2A  
                     u2370 7B1E                       u2290 7A38                       u1490 5906  
                     u3171 60C6                       u2195 66FE                       u2611 7E1C  
                     u2531 7D74                       u2451 7C26                       u2371 7B1A  
                     u2291 7A34                       u1491 5902                       u3180 60F0  
                     u1820 7198                       u1804 714C                       u1740 70A8  
                     u1724 705C                       u1900 5C66                       u2620 7E5A  
                     u2540 7D88                       u2460 7C5C                       u2380 7B8C  
                     u2700 6396                       u3181 60EC                       u1821 7194  
                     u1805 7148                       u1741 70A4                       u1725 7058  
                     u1901 5C62                       u2621 7E56                       u2541 7D84  
                     u2461 7C58                       u2381 7B88                       u2701 6392  
                     u1910 5AAA                       u1830 71B2                       u1814 716C  
                     u1750 70C2                       u1734 707C                       u2630 7E6C  
                     u2550 7DA4                       u2470 7C6A                       u2390 7BA4  
                     u2710 63B6                       u3190 762A                       u1911 5AA6  
                     u1831 71AE                       u1815 7168                       u1751 70BE  
                     u1735 7078                       u2631 7E68                       u2551 7DA0  
                     u2471 7C66                       u2391 7B9E                       u2711 63B2  
                     u3191 7626                       u1920 5D7A                       u2640 7E7C  
                     u2560 7DB4                       u2480 7C88                       u2720 6406  
                     u1921 5D76                       u2641 7E78                       u2561 7DB0  
                     u2481 7C84                       u2721 6402                       u1930 5D8E  
                     u2730 5FE2                       u2650 7E9C                       u2570 7DC6  
                     u2490 7CC0                       u1931 5D8A                       u2731 5FDE  
                     u2651 7E98                       u2571 7DC2                       u2491 7CBC  
                     u1940 5DA4                       u2740 6004                       u1860 7210  
                     u1844 71C4                       u1780 7120                       u1764 70D4  
                     u2820 643C                       u2900 5AF0                       u2660 7EAE  
                     u2580 7DDC                       u1941 5DA0                       u2741 6000  
                     u1861 720C                       u1845 71C0                       u1781 711C  
                     u1765 70D0                       u2821 6438                       u2901 5AEC  
                     u2661 7EAA                       u2581 7DD8                       u1950 5DBA  
                     u2750 6022                       u1870 722A                       u1854 71E4  
                     u1790 713A                       u1774 70F4                       u2910 5B0C  
                     u2670 7ECA                       u2590 7DF2                       u1951 5DB6  
                     u2751 601E                       u1871 7226                       u1855 71E0  
                     u1791 7136                       u1775 70F0                       u2911 5B08  
                     u2671 7EC6                       u2591 7DEE                       u1960 6DEA  
                     u2840 648C                       u2920 5D10                       u2680 633A  
                     u2760 5C86                       u1961 6DE6                       u2841 6488  
                     u2921 5D0C                       u2681 6336                       u2761 5C82  
                     u1970 6DFC                       u2834 645C                       u2690 6378  
                     u2930 5E90                       u2770 5C9E                       u1971 6DF8  
                     u2835 6456                       u2691 6374                       u2931 5E8C  
                     u2771 5C9A                       u1884 723C                       u2860 64D0  
                     u2940 5EB2                       u1885 7238                       u2861 64CC  
                     u2941 5EAE                       u1894 725C                       u2854 64A4  
                     u2950 5ED4                       u1895 7258                       u2855 649E  
                     u2951 5ED0                       u1984 6E0E                       u2880 651A  
                     u2960 5E28                       u1985 6E0A                       u2881 6516  
                     u2961 5E24                       u1994 6E2E                       u2890 653C  
                     u2874 64EC                       u2970 5E4A                       u1995 6E2A  
                     u2891 6538                       u2875 64E6                       u2971 5E46  
                     u2980 5E6C                       u2981 5E68                       u2990 5918  
                     u2991 5914                       _PIR1 000F9E                       _main 624E  
                     _keys 0044           ??_PulseClockData 0007                       start 0000  
          pushNibble@value 000C               ___param_bank 000000     __end_of_pulseEnablePin 5BD6  
          __end_of___fladd 7EDE                      ?_main 0001            __end_of_adcInit 5C1E  
          __end_of_adcRead 5CBC                      STR_10 7FC4                      STR_11 7F22  
                    STR_12 7F55                      STR_20 7EF9                      STR_21 7FE4  
                    STR_13 7FAA                      STR_30 7FAA                      STR_14 7F2D  
                    STR_22 7F0A                      STR_31 7F2D                      STR_23 7FDC  
                    STR_15 7F5F                      STR_32 7F98                      STR_24 7FD4  
                    STR_16 7F98                      STR_33 7F8F                      STR_25 7FF9  
                    STR_17 7F8F                      STR_34 7FBC                      STR_26 7FCC  
                    STR_18 7F4B                      STR_35 7EF9                      STR_27 7FEC  
                    STR_19 7FBC                      STR_36 7FE4                      STR_28 7FA1  
                    STR_37 7F0A                      STR_29 7FB3                      STR_38 7F37  
          __end_of___lldiv 619A                      _T0CON 000FD5            __end_of___llmod 6054  
                    _T2CON 000FCA                      _RCREG 000FAE                      _RCSTA 000FAB  
                    _TMR0H 000FD7                      _TMR0L 000FD6                      _SPBRG 000FAF  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _PORTD 000F83                      _PORTE 000F84            __end_of_charKey 7EF9  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96                      _TXREG 000FAD  
                    _TXSTA 000FAC            __end_of_lcdChar 598A        ___lmul@multiplicand 0005  
          __end_of_lcdInit 624E            __end_of_rgbInit 5B94            __end_of_pinMode 701C  
                    _valor 7EDF            __end_of_relogio 6DCE            __end_of_soWrite 5C6C  
                    tablat 000FF5            __end_of_ssdInit 5D68                      status 000FD8  
          __end_of_turnOff 5E82            _tempoParaEncher 003E               pushNibble@rs 000A  
     __end_of_digitalWrite 726A            __initialization 591E            ?_pulseEnablePin 0001  
             __end_of_main 630C                     ??_main 0033              __activetblptr 000002  
     __size_of_digitalRead 016A       __end_of_EraseDisplay 59FC                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _ADCON2 000FC0   __end_of_qtdComidaLeitura 6B8A  
         ___llmod@dividend 001A                     _ADRESH 000FC4                     _ADRESL 000FC3  
                   _CCPR2L 000FBB      __end_of_ShowOnDisplay 668C                     _INTCON 000FF2  
                   _SPBRGH 000FB0       __size_of_lcdPosition 003A     __size_of_leituraTeclas 03AA  
                   ___flge 630C                     ___lmul 5EEA                  ??___fladd 0009  
                ??_adcInit 0007                  ??_adcRead 0003                  ??___lldiv 0015  
                ??___llmod 0022                     _kpInit 5AAC                     _kpRead 58EE  
 qtdComidaLeitura@oldValue 0023                     clear_0 5924                     _soInit 5B18  
                ??_lcdChar 000E                     _serial 7614                     isa$std 000001  
                ??_lcdInit 000F                     _potenc 004E                     _turnOn 5E82  
                ??_rgbInit 0007           __end_of_ssdDigit 5DC0                  ??_pinMode 0005  
             __mediumconst 7EDE                  ??_relogio 0025                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_soWrite 0009  
                ??_ssdInit 0007           __end_of_pushByte 5E1A                  ??_turnOff 0009  
          ShowOnDisplay@un 002B                 ___flge@ff1 0001                 ___flge@ff2 0005  
               __accesstop 0080    __end_of__initialization 592A              ___rparam_used 000001  
            pushByte@value 000D                pinMode@type 0003             __pcstackCOMRAM 0001  
            __end_of_valor 7EEF         __size_of_delayMili 0030              _leituraTeclas 726A  
       __size_of_lcdString 0056         __size_of_kpReadKey 0078      __size_of_digitalWrite 024E  
               _delayMicro 58E4                    ?___flge 0001                    ?___lmul 0001  
               _lcdCommand 594E                    ?_kpInit 0001                    ?_kpRead 0001  
                  _CCP2CON 000FBA                    _BAUDCON 000FB8             ___lmul@product 0009  
                  ?_soInit 0001                 _kpDebounce 6410                    ?_serial 0001  
                  ?_turnOn 0007             ?_leituraTeclas 0001      __size_of_EraseDisplay 002A  
       __size_of_timerInit 0008         __size_of_timerWait 0010         __size_of_ssdUpdate 016C  
             _digitalWrite 701C                 _comparacao 6054          __end_of_delayMili 5AAC  
              relogio@cont 0029           ??_pulseEnablePin 0007                    __Hparam 0000  
                  __Lparam 0000                  ?_ssdDigit 0023          __end_of_lcdString 5D12  
          kpDebounce@tempo 004C         leituraTeclas@tecla 002F          __end_of_kpReadKey 5FCC  
          __size_of___flge 0104                    ___fladd 7A1E               _EraseDisplay 59D2  
                  _adcInit 5BD6                    _adcRead 5C6C            __size_of___lmul 006A  
                ?_pushByte 000A                    ___lldiv 60F6                    ___llmod 5FCC  
          __size_of_kpInit 0032            __size_of_kpRead 000A                    _charKey 7EEF  
              ssdDigit@val 0024                ssdDigit@pos 0023                    __pcinit 591E  
           serialRead@resp 0001                    _lcdChar 596C                    __ramtop 0600  
          __size_of_soInit 003E                    _lcdInit 619A                    __ptext0 624E  
                  __ptext1 58F8                    __ptext2 598A            __size_of_serial 040A  
                  __ptext3 58E6                    __ptext4 5D12                    __ptext5 5934  
                  __ptext6 7614                    __ptext7 5908                    __ptext8 5A50  
                  __ptext9 5B56                    _display 004B            __size_of_turnOn 0068  
                  _rgbInit 5B56                    _pinMode 6DCE                serialSend@c 0001  
                  _relogio 6B8A                 delayMili@a 0001                 delayMili@i 0004  
                  _soWrite 5C1E                    _ssdInit 5D12                    _started 004D  
        ?_qtdComidaLeitura 0001                    _turnOff 5E1A       end_of_initialization 592A  
            ?_PulseEnClock 0001         ??_qtdComidaLeitura 0023              __Lmediumconst 7EDE  
           digitalRead@pin 0001                ?_delayMicro 0001          __end_of_timerInit 58EE  
          ___lldiv@divisor 0011          __end_of_timerWait 5908          __end_of_ssdUpdate 6962  
          ___lldiv@counter 0019                 _serialInit 5934                 _serialRead 5A50  
               ??_ssdDigit 0024                 _serialSend 5908                ?_lcdCommand 0001  
                  postinc0 000FEE                 ??_pushByte 000C    __size_of_PulseClockData 002A  
            ??_digitalRead 0003                 _timerReset 598A                ?_kpDebounce 0001  
          ??_leituraTeclas 002D           ShowOnDisplay@dez 0029           ShowOnDisplay@mil 0025  
              ___fladd@grs 0010                 _pushNibble 59AC                 lcdString@i 0013  
              ?_comparacao 0001              ??_lcdPosition 0013             ??_PulseEnClock 0007  
               kpReadKey@i 0004             __end_of___flge 6410             __end_of___lmul 5F54  
           adcRead@ADvalor 0003     __size_of_ShowOnDisplay 0146             __end_of_kpInit 5ADE  
           __end_of_kpRead 58F8             __end_of_soInit 5B56             __end_of_serial 7A1E  
           __end_of_turnOn 5EEA        __size_of_delayMicro 0002        start_initialization 591E  
      __end_of_digitalRead 67F6        __size_of_lcdCommand 001E        __size_of_kpDebounce 0136  
          ___llmod@divisor 001E            ___llmod@counter 0022        __end_of_lcdPosition 5B18  
           adcRead@channel 0001                ?_serialInit 0001                ?_serialRead 0001  
              ?_serialSend 0001          kpDebounce@oldRead 0040          kpDebounce@newRead 0042  
                 ??___flge 0009                   ??___lmul 0009        __size_of_comparacao 00A2  
                 ??_kpInit 0007                   ??_kpRead 0003                ?_timerReset 0001  
                 ??_soInit 0007                   ??_serial 002D                   ??_turnOn 0009  
                ___fladd@a 0005                  ___fladd@b 0001                __pbssCOMRAM 0036  
              ?_pushNibble 000A                 pinMode@pin 0001              _ShowOnDisplay 6546  
                _delayMili 5A7C              __pmediumconst 7EDE                   ?___fladd 0001  
                 ?_adcInit 0001                   ?_adcRead 0001                   ?___lldiv 000D  
        __size_of_ssdDigit 0058                   ?___llmod 001A             _PulseClockData 59FC  
     __end_of_PulseEnClock 5A50                  _comidaMax 003A                  _lcdString 5CBC  
              _digitalRead 668C                   ?_lcdChar 0001          __size_of_pushByte 005A  
                 ?_lcdInit 0001                  _kpReadKey 5F54                  _auxSerial 0046  
                 ?_rgbInit 0001                   ?_pinMode 0001                   ?_relogio 0001  
                 ?_soWrite 0007                   ?_ssdInit 0001        __size_of_serialInit 001A  
      __size_of_serialRead 002C        __size_of_serialSend 0016             ?_ShowOnDisplay 0001  
                 ?_turnOff 0007                _lcdPosition 5ADE        __size_of_timerReset 0022  
             ??_delayMicro 0003                 ?_delayMili 0001     __end_of_PulseClockData 5A26  
      __size_of_pushNibble 0026               ??_lcdCommand 000E  __size_of_qtdComidaLeitura 0228  
                _timerInit 58E6                  _timerWait 58F8                  _ssdUpdate 67F6  
               ?_lcdString 000F               ??_kpDebounce 000A                 ?_kpReadKey 0001  
          lcdCommand@value 000E         __end_of_delayMicro 58E6               ??_comparacao 002D  
         timerReset@ciclos 0003               relogio@tempo 0025          ___lmul@multiplier 0001  
       __end_of_lcdCommand 596C                 pushByte@rs 000A               lcdChar@value 000E  
       __end_of_kpDebounce 6546                   __Hrparam 0000                   __Lrparam 0000  
          lcdPosition@line 000F            ?_PulseClockData 0001                 ?_timerInit 0001  
               ?_timerWait 0001                 ?_ssdUpdate 0001           __size_of___fladd 04C0  
         __size_of_adcInit 0048           __size_of_adcRead 0050    __size_of_pulseEnablePin 0042  
         __size_of___lldiv 00A4           __size_of___llmod 0088         __end_of_comparacao 60F6  
         __size_of_lcdChar 001E      __end_of_leituraTeclas 7614           __size_of_lcdInit 00B4  
         __size_of_rgbInit 003E           __size_of_pinMode 024E            ??_ShowOnDisplay 0025  
         __size_of_relogio 0244                   __ptext10 6962                   __ptext11 5C6C  
                 __ptext20 596C                   __ptext12 726A                   __ptext21 5ADE  
                 __ptext13 5E82                   __ptext30 5C1E                   __ptext22 5F54  
                 __ptext14 5E1A                   __ptext31 5A26                   __ptext23 58EE  
                 __ptext15 6B8A                   __ptext40 5EEA                   __ptext32 59FC  
                 __ptext24 6410                   __ptext16 67F6                   __ptext41 6546  
                 __ptext33 5B94                   __ptext25 668C                   __ptext17 630C  
                 __ptext42 5FCC                   __ptext34 701C                   __ptext26 619A  
                 __ptext18 7A1E                   __ptext43 60F6                   __ptext35 58E4  
                 __ptext27 59AC                   __ptext19 5CBC                   __ptext44 59D2  
                 __ptext36 5A7C                   __ptext28 594E                   __ptext45 5D68  
                 __ptext37 5AAC                   __ptext29 5DC0                   __ptext46 5BD6  
                 __ptext38 5B18                   __ptext47 6DCE                   __ptext39 6054  
         __size_of_soWrite 004E           __size_of_ssdInit 0056           __size_of_turnOff 0068  
            __size_of_main 00BE                 turnOff@led 0007                ??_delayMili 0003  
             ??_serialInit 0001               ??_serialRead 0001      __size_of_PulseEnClock 002A  
             ??_serialSend 0001                   _ssdDigit 5D68                delayMicro@a 0001  
                 isa$xinst 000000               soWrite@value 0007                   _pushByte 5DC0  
                 main@Slot 0035                ??_lcdString 0011               ??_timerReset 0003  
              ??_kpReadKey 0001            timerReset@tempo 0001               ??_pushNibble 000C  
           lcdPosition@col 0011              ?_digitalWrite 0001                _serial$1415 002F  
       __end_of_serialInit 594E         __end_of_serialRead 5A7C         __end_of_serialSend 591E  
             _PulseEnClock 5A26          digitalWrite@value 0003           ___lldiv@dividend 000D  
       __end_of_timerReset 59AC                  turnOn@led 0007                   soWrite@i 0009  
            ?_EraseDisplay 0001           _qtdComidaLeitura 6962                ??_timerInit 0001  
              ??_timerWait 0001                ??_ssdUpdate 000A         __end_of_pushNibble 59D2  
             ?_digitalRead 0001           ___lldiv@quotient 0015                kpDebounce@i 000D  
           ??_digitalWrite 0005              ___fladd@signs 000D               ?_lcdPosition 000F  
        ShowOnDisplay@cent 0027            digitalWrite@pin 0001      _qtdComidaLeitura$1414 0027  
             ___fladd@aexp 000E               ___fladd@bexp 000F             ??_EraseDisplay 0025  
